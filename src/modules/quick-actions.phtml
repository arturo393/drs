<div class="quick-actions">
    <ul class="nav tab-nav">
        <?php if (isset($removeAckForm)): ?>
            <li>
                <?php
                $removeAckForm = clone $removeAckForm;
                $removeAckForm->setLabelEnabled(true);
                echo $removeAckForm;
                ?>
            </li>
        <?php elseif /** @var \Icinga\Module\Monitoring\Object\MonitoredObject $object */
        ($this->hasPermission('monitoring/command/acknowledge-problem') && !(in_array((int)$object->state, array(0, 99)))): ?>
            <li>
                <?php if ($object->getType() === $object::TYPE_HOST) {
                    echo $this->qlink(
                        $this->translate('Acknowledge'),
                        'monitoring/host/acknowledge-problem',
                        array('host' => $object->getName()),
                        array(
                            'class' => 'action-link',
                            'data-base-target' => '_self',
                            'icon' => 'edit',
                            'title' => $this->translate(
                                'Acknowledge this problem, suppress all future notifications for it and tag it as being handled'
                            )
                        )
                    );
                } else {
                    echo $this->qlink(
                        $this->translate('Acknowledge'),
                        'monitoring/service/acknowledge-problem',
                        array('host' => $object->getHost()->getName(), 'service' => $object->getName()),
                        array(
                            'class' => 'action-link',
                            'data-base-target' => '_self',
                            'icon' => 'edit',
                            'title' => $this->translate(
                                'Acknowledge this problem, suppress all future notifications for it and tag it as being handled'
                            )
                        )
                    );
                } ?>


            </li>
        <?php endif ?>
        <?php if (isset($checkNowForm)): // Form is unset if the current user lacks the respective permission ?>
            <li><?= $checkNowForm ?></li>
        <?php endif ?>
        <?php if ($this->hasPermission('monitoring/command/comment/add')): ?>
            <li>
                <?php if ($object->getType() === $object::TYPE_HOST) {
                    echo $this->qlink(
                        $this->translate('Comment'),
                        'monitoring/host/add-comment',
                        array('host' => $object->getName()),
                        array(
                            'class' => 'action-link',
                            'data-base-target' => '_self',
                            'icon' => 'comment-empty',
                            'title' => $this->translate('Add a new comment to this host')
                        )
                    );
                } else {
                    echo $this->qlink(
                        $this->translate('Comment'),
                        'monitoring/service/add-comment',
                        array('host' => $object->getHost()->getName(), 'service' => $object->getName()),
                        array(
                            'class' => 'action-link',
                            'data-base-target' => '_self',
                            'icon' => 'comment-empty',
                            'title' => $this->translate('Add a new comment to this service')
                        )
                    );
                } ?>
            </li>
        <?php endif ?>
        <?php if ($this->hasPermission('monitoring/command/send-custom-notification')): ?>
            <li>
                <?php if ($object->getType() === $object::TYPE_HOST) {
                    echo $this->qlink(
                        $this->translate('Notification'),
                        'monitoring/host/send-custom-notification',
                        array('host' => $object->getName()),
                        array(
                            'class' => 'action-link',
                            'data-base-target' => '_self',
                            'icon' => 'bell',
                            'title' => $this->translate(
                                'Send a custom notification to contacts responsible for this host')
                        )
                    );
                } else {
                    echo $this->qlink(
                        $this->translate('Notification'),
                        'monitoring/service/send-custom-notification',
                        array('host' => $object->getHost()->getName(), 'service' => $object->getName()),
                        array(
                            'class' => 'action-link',
                            'data-base-target' => '_self',
                            'icon' => 'bell',
                            'title' => $this->translate(
                                'Send a custom notification to contacts responsible for this service'
                            )
                        )
                    );
                } ?>
            </li>
        <?php endif ?>
        <?php if ($this->hasPermission('monitoring/command/downtime/schedule')): ?>
            <li>
                <?php if ($object->getType() === $object::TYPE_HOST) {
                    echo $this->qlink(
                        $this->translate('Downtime'),
                        'monitoring/host/schedule-downtime',
                        array('host' => $object->getName()),
                        array(
                            'class' => 'action-link',
                            'data-base-target' => '_self',
                            'icon' => 'plug',
                            'title' => $this->translate(
                                'Schedule a downtime to suppress all problem notifications within a specific period of time'
                            )
                        )
                    );
                } else {
                    echo $this->qlink(
                        $this->translate('Downtime'),
                        'monitoring/service/schedule-downtime',
                        array('host' => $object->getHost()->getName(), 'service' => $object->getName()),
                        array(
                            'class' => 'action-link',
                            'data-base-target' => '_self',
                            'icon' => 'plug',
                            'title' => $this->translate(
                                'Schedule a downtime to suppress all problem notifications within a specific period of time'
                            )
                        )
                    );
                } ?>
            </li>
        <?php endif ?>
        <?php if ($this->hasPermission('rs485/master/edit')): ?>
            <li>
                <?php if ($object->getType() === $object::TYPE_SERVICE) {
                    $device = $object->customvars['device'] ?? -1;
                    if ($device == "dmu_serial_service") {
                        $device = $object->customvars['device'] ?? -1;
                        $start_uplink_frequency = $object->customvars['start_uplink_frequency'] ?? 0;
                        $start_downlink_frequency = $object->customvars['start_downlink_frequency'] ?? 0;
                        $bandwidth = $object->customvars['bandwidth'] ?? 0;
                        $frequency = isset($object->customvars['frequencies']) ? $object->customvars['frequencies'] : " ";

                        $center_uplink_frequency = $object->customvars['center_uplink_frequency'] ?? 0;
                        $center_downlink_frequency = $object->customvars['center_downlink_frequency'] ?? 0;
                        $bandwidth = $object->customvars['bandwidth'] ?? 0;
                        $cmd_type = $object->customvars['cmd_type'] ?? 0;
                        echo $this->qlink(
                            $this->translate('Device Configuration'),
                            'rs485/master/edit',
                            array('host' => $object->host->getName(),
                                'freq' => $frequency,
                                'start_uplink_frequency' => $start_uplink_frequency,
                                'start_downlink_frequency' => $start_downlink_frequency,
                                'bandwidth' => $bandwidth),
                            array(
                                'class' => 'action-link',
                                'data-base-target' => '_self',
                                'icon' => 'plug',
                                'title' => $this->translate(
                                    'Master Device Configuration'
                                )
                            )
                        );
                    } else if ($device == "dru_serial_service") {
                        $opt = $object->customvars['opt'] ?? 0;
                        $dru = $object->customvars['dru'] ?? 0;
                        $service = $object->host->getName() . '-opt' . $opt . '-dru' . $dru;
                        echo $this->qlink(
                            $this->translate('Device Configuration'),
                            'rs485/remote/edit',
                            array('service' => $service),
                            array(
                                'class' => 'action-link',
                                'data-base-target' => '_self',
                                'icon' => 'plug',
                                'title' => $this->translate(
                                    'Remote Device Configuration'
                                )
                            )
                        );
                    }
                }
                ?>
            </li>
        <?php endif ?>
        <?php if ($this->hasPermission('rs485/host/edit')): ?>
            <li>
                <?php if ($object->getType() === $object::TYPE_SERVICE) {
                    $device = $object->customvars['device'] ?? -1;
                    $center_uplink_frequency = $object->customvars['center_uplink_frequency'] ?? 0;
                    $center_downlink_frequency = $object->customvars['center_downlink_frequency'] ?? 0;
                    $bandwidth = $object->customvars['bandwidth'] ?? 0;
                    $cmd_type = $object->customvars['cmd_type'] ?? 0;
                    if ($device == 'dmu_ethernet' || $device == 'dru_ethernet' || $device = 'dmu_serial_service') {
                        echo $this->qlink(
                            $this->translate('Config'),
                            'rs485/host/edit',
                            array('host' => $object->getHost()->getName(),
                                'center_uplink_frequency' => $center_uplink_frequency,
                                'center_downlink_frequency' => $center_downlink_frequency,
                                'bandwidth' => $bandwidth,
                                'cmd_type' => $cmd_type,
                                'device' => $device
                            ),
                            array(
                                'class' => 'action-link',
                                'data-base-target' => '_self',
                                'icon' => 'plug',
                                'title' => $this->translate(
                                    'Remote Device Configuration'
                                )
                            )
                        );
                    }
                }
                ?>
            </li>
            <li>
                <?php if ($object->getType() === $object::TYPE_HOST) {
                    $linkAddress = $object->address;
                    $address = "http://$linkAddress";
                    echo $this->qlink(
                        $this->translate('Admin'),
                        $address,
                        array('host' => $object->getName()),
                        array(
                            'class' => 'action-link',
                            'data-base-target' => '_blank',
                            'icon' => 'plug',
                            'title' => $this->translate(
                                'Admin Configuration '
                            ),
                            'target' => '_blank',
                        )
                    );
                }
                ?>
            </li>
        <?php endif ?>
    </ul>
</div>