{
    "Command": {
        "dmu-command": {
            "fields": [
                {
                    "datafield_id": 3,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 4,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 5,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 6,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "imports": [
                "dmu-command-template"
            ],
            "methods_execute": "PluginCheck",
            "object_name": "dmu-command",
            "object_type": "object",
            "timeout": 5,
            "uuid": "2a1e1d18-703f-4b57-ae0d-cc001f7e7a2c",
            "vars": {
                "highLevelCriticalDownlink": "41",
                "highLevelCriticalUplink": "38",
                "highLevelWarningDownlink": "41",
                "highLevelWarningUplink": "38"
            }
        },
        "dmu-dru-command": {
            "fields": [],
            "imports": [
                "dmu-dru-command-template"
            ],
            "methods_execute": "PluginCheck",
            "object_name": "dmu-dru-command",
            "object_type": "object",
            "uuid": "16e499a7-187a-4e85-a7c8-b9983fafce26"
        },
        "mail-host-notification-command": {
            "arguments": {
                "-4": {
                    "required": false,
                    "value": "$address$"
                },
                "-b": {
                    "required": false,
                    "value": "$notification.author$"
                },
                "-c": {
                    "required": false,
                    "value": "$notification.comment$"
                },
                "-d": {
                    "required": true,
                    "value": "$icinga.long_date_time$"
                },
                "-f": {
                    "required": false,
                    "value": "$notification_mailfrom$"
                },
                "-i": "$notification_icingaweb2url$",
                "-l": {
                    "required": true,
                    "value": "$host.name$"
                },
                "-n": {
                    "required": true,
                    "value": "$host.display_name$"
                },
                "-o": {
                    "required": true,
                    "value": "$host.output$"
                },
                "-r": {
                    "required": true,
                    "value": "$user.email$"
                },
                "-s": {
                    "required": true,
                    "value": "$host.state$"
                },
                "-t": {
                    "required": true,
                    "value": "$notification.type$"
                }
            },
            "command": "/etc/icinga2/scripts/mail-host-notification.sh",
            "fields": [],
            "methods_execute": "PluginNotification",
            "object_name": "mail-host-notification-command",
            "object_type": "object",
            "uuid": "c52c9c81-11de-45f4-80ba-204706a66c10"
        },
        "mail-service-notification-command": {
            "arguments": {
                "-4": {
                    "required": false,
                    "value": "$address$"
                },
                "-b": {
                    "required": false,
                    "value": "$notification.author$"
                },
                "-c": {
                    "required": false,
                    "value": "$notification.comment$"
                },
                "-d": {
                    "required": true,
                    "value": "$icinga.long_date_time$"
                },
                "-e": "$service.name$",
                "-f": {
                    "required": false,
                    "value": "$notification_mailfrom$"
                },
                "-i": {
                    "required": false,
                    "value": "$notification_icingaweb2url$"
                },
                "-l": {
                    "required": true,
                    "value": "$host.name$"
                },
                "-n": {
                    "required": true,
                    "value": "$host.display_name$"
                },
                "-o": {
                    "required": true,
                    "value": "$service.output$"
                },
                "-r": {
                    "required": true,
                    "value": "$user.email$"
                },
                "-s": {
                    "required": true,
                    "value": "$service.state$"
                },
                "-t": {
                    "required": true,
                    "value": "$notification.type$"
                },
                "-u": "$service.display_name$"
            },
            "command": "/etc/icinga2/scripts/mail-service-notification.sh",
            "fields": [
                {
                    "datafield_id": 7,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 8,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 9,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "methods_execute": "PluginNotification",
            "object_name": "mail-service-notification-command",
            "object_type": "object",
            "uuid": "b1f668c6-c914-466b-b845-070680be1518"
        },
        "dru_discovery": {
            "command": "/usr/lib/monitoring-plugins/dru_discovery.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "dru_discovery",
            "object_type": "object",
            "uuid": "7e782ae2-25c3-4745-be8e-f7ce0ea637c8"
        },
        "check_status": {
            "arguments": {
                "-a": {
                    "required": true,
                    "value": "$address$"
                },
                "-b": {
                    "description": "work bandwidth",
                    "required": true,
                    "value": "$bandwidth$"
                },
                "-d": {
                    "description": "Device",
                    "required": true,
                    "skip_key": false,
                    "value": "$device$"
                },
                "-n": {
                    "description": "hostnam",
                    "required": true,
                    "value": "$host.name$"
                },
                "-p": {
                    "description": "Optical Port Number",
                    "required": false,
                    "value": "$port$"
                }
            },
            "command": "/usr/lib/nagios/plugins/check_status.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "check_status",
            "object_type": "object",
            "timeout": 1,
            "uuid": "8a430168-df46-49eb-9cd8-eb432a7afc6b",
            "zone": "master"
        },
        "check_memory": {
            "command": "/usr/lib/nagios/plugins/check_memory.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "check_memory",
            "object_type": "object",
            "timeout": 1,
            "uuid": "9c20008e-991b-4af2-a9c3-3a13f55696fc",
            "zone": "master"
        },
        "check_load": {
            "command": "/usr/lib/nagios/plugins/check_load.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "check_load",
            "object_type": "object",
            "timeout": 1,
            "uuid": "0c32b31b-a9d5-4b1c-943d-2f388fc8b504",
            "zone": "master"
        },
        "check_disk": {
            "arguments": {
                "-a": {
                    "required": true,
                    "value": "$address$"
                },
                "-d": {
                    "description": "Device",
                    "required": true,
                    "skip_key": false,
                    "value": "$device$"
                },
                "-n": {
                    "description": "hostnam",
                    "required": true,
                    "value": "$host.name$"
                },
                "-p": {
                    "description": "Optical Port Number",
                    "required": false,
                    "value": "$port$"
                }
            },
            "command": "/usr/lib/nagios/plugins/check_disk.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "check_disk",
            "object_type": "object",
            "timeout": 1,
            "uuid": "249626d0-2b1c-403b-a1ee-c05918178156",
            "zone": "master"
        },
        "check_eth": {
            "arguments": {
                "-a": {
                    "required": true,
                    "value": "$address$"
                },
                "-b": {
                    "description": "work bandwidth",
                    "required": false,
                    "value": "$bandwidth$"
                },
                "-c": {
                    "description": "Command Name",
                    "value": "$cmd_name$"
                },
                "-ct": {
                    "description": "Command type",
                    "repeat_key": false,
                    "value": "$cmd_type$"
                },
                "-d": {
                    "description": "Device",
                    "required": true,
                    "skip_key": false,
                    "value": "$device$"
                },
                "-n": {
                    "description": "hostnam",
                    "required": true,
                    "value": "$host.name$"
                },
                "-op": {
                    "description": "Optical Port",
                    "value": "$opt$"
                },
                "-p": {
                    "description": "Optical Port Number",
                    "required": false,
                    "value": "$port$"
                }
            },
            "command": "/usr/lib/nagios/plugins/check_eth.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "check_eth",
            "object_type": "object",
            "timeout": 1,
            "uuid": "cce1d589-2a21-4c0b-851f-71889609b6a4",
            "zone": "master"
        },
        "dru_check_rs485": {
            "arguments": {
                "-d": {
                    "description": "dru",
                    "value": "$dru$"
                },
                "-o": {
                    "description": "Optical Port",
                    "value": "$opt$"
                }
            },
            "command": "/usr/lib/nagios/plugins/dru_check_rs485.py",
            "fields": [
                {
                    "datafield_id": 10,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 11,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "methods_execute": "PluginCheck",
            "object_name": "dru_check_rs485",
            "object_type": "object",
            "timeout": 5,
            "uuid": "f1ebc210-da17-4052-a0e1-887b53db3782",
            "zone": "master"
        }
    },
    "ExternalCommand": {
        "ido": {
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ido",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000001"
        },
        "nrpe": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$nrpe_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$nrpe_ipv4$"
                },
                "-2": {
                    "description": "Use this if you want to connect to NRPE v2",
                    "set_if": "$nrpe_version_2$"
                },
                "-H": {
                    "description": "The address of the host running the NRPE daemon",
                    "value": "$nrpe_address$"
                },
                "-a": {
                    "repeat_key": false,
                    "value": "$nrpe_arguments$",
                    "order": "1"
                },
                "-c": "$nrpe_command$",
                "-n": {
                    "description": "Do not use SSL",
                    "set_if": "$nrpe_no_ssl$"
                },
                "-p": "$nrpe_port$",
                "-t": {
                    "description": "<interval>:<state> = <Number of seconds before connection times out>:<Check state to exit with in the event of a timeout (default=CRITICAL)>",
                    "value": "$nrpe_timeout$"
                },
                "-u": {
                    "description": "Make socket timeouts return an UNKNOWN state instead of CRITICAL",
                    "set_if": "$nrpe_timeout_unknown$"
                }
            },
            "command": "check_nrpe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nrpe",
            "object_type": "external_object",
            "timeout": 300,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000086",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$nrpe_ipv4$",
                "check_ipv6": "$nrpe_ipv6$",
                "nrpe_address": "$check_address$",
                "nrpe_no_ssl": false,
                "nrpe_timeout_unknown": false,
                "nrpe_version_2": false
            }
        },
        "vmware-esx-soap-vm-runtime-tools": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--open-vm-tools": {
                    "set_if": "$vmware_openvmtools$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "tools",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-runtime-tools",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000000b",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-vm-cpu-wait": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "cpu",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "wait",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-cpu-wait",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000ac",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-mem-swapused": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "mem",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "swapused",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-mem-swapused",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000038",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "nginx_status": {
            "arguments": {
                "--critical": {
                    "description": "number of active connections, ReqPerSec or ConnPerSec that will cause a CRITICAL",
                    "value": "$nginx_status_critical$"
                },
                "--disable-sslverifyhostname": {
                    "description": "Disable SSL hostname verification",
                    "set_if": "$nginx_status_disable_sslverify$"
                },
                "--hostname": {
                    "description": "name or IP address of host to check",
                    "value": "$nginx_status_host_address$"
                },
                "--maxreach": {
                    "description": "Number of max processes reached (since last check) that should trigger an alert",
                    "value": "$nginx_status_maxreach$"
                },
                "--pass": {
                    "description": "Password for basic auth",
                    "value": "$nginx_status_pass$"
                },
                "--port": {
                    "description": "the http port",
                    "value": "$nginx_status_port$"
                },
                "--realm": {
                    "description": "Realm for basic auth",
                    "value": "$nginx_status_realm$"
                },
                "--servername": {
                    "description": "ServerName, use it if you specified an IP in -H to match the good Virtualhost in your target",
                    "value": "$nginx_status_servername$"
                },
                "--ssl": {
                    "description": "Wether we should use HTTPS instead of HTTP",
                    "set_if": "$nginx_status_ssl$"
                },
                "--timeout": {
                    "description": "timeout in seconds",
                    "value": "$nginx_status_timeout$"
                },
                "--url": {
                    "description": "Specific URL to use, instead of the default 'http://<nginx_status_hostname>/nginx_status'",
                    "value": "$nginx_status_url$"
                },
                "--user": {
                    "description": "Username for basic auth",
                    "value": "$nginx_status_user$"
                },
                "--warn": {
                    "description": "number of active connections, ReqPerSec or ConnPerSec that will cause a WARNING",
                    "value": "$nginx_status_warn$"
                }
            },
            "command": "check_nginx_status.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nginx_status",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000df",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "nginx_status_critical": "20000,200,300",
                "nginx_status_disable_sslverify": false,
                "nginx_status_host_address": "$check_address$",
                "nginx_status_ssl": false,
                "nginx_status_timeout": 15,
                "nginx_status_warn": "10000,100,200"
            }
        },
        "disk": {
            "arguments": {
                "-A": {
                    "description": "Explicitly select all paths. This is equivalent to -R .*",
                    "set_if": "$disk_all$",
                    "order": "1"
                },
                "-C": {
                    "description": "Clear thresholds",
                    "set_if": "$disk_clear$"
                },
                "-E": {
                    "description": "For paths or partitions specified with -p, only check for exact paths",
                    "set_if": "$disk_exact_match$"
                },
                "-I": {
                    "description": "Regular expression to ignore selected path/partition (case insensitive) (may be repeated)",
                    "repeat_key": true,
                    "value": "$disk_ignore_eregi_path$",
                    "order": "2"
                },
                "-K": {
                    "description": "Exit with CRITICAL status if less than PERCENT of inode space is free",
                    "value": "$disk_inode_cfree$",
                    "order": "-3"
                },
                "-L": {
                    "description": "Only check local filesystems against thresholds. Yet call stat on remote filesystems to test if they are accessible (e.g. to detect Stale NFS Handles)",
                    "set_if": "$disk_stat_remote_fs$"
                },
                "-M": {
                    "description": "Display the mountpoint instead of the partition",
                    "set_if": "$disk_mountpoint$"
                },
                "-N": {
                    "description": "Check only filesystems of indicated type (may be repeated)",
                    "repeat_key": true,
                    "value": "$disk_include_type$"
                },
                "-R": {
                    "description": "Case insensitive regular expression for path/partition (may be repeated)",
                    "repeat_key": true,
                    "value": "$disk_eregi_path$"
                },
                "-W": {
                    "description": "Exit with WARNING status if less than PERCENT of inode space is free",
                    "value": "$disk_inode_wfree$",
                    "order": "-3"
                },
                "-X": {
                    "description": "Ignore all filesystems of indicated type (may be repeated)",
                    "repeat_key": true,
                    "value": "$disk_exclude_type$"
                },
                "-c": {
                    "description": "Exit with CRITICAL status if less than INTEGER units of disk are free or Exit with CRITCAL status if less than PERCENT of disk space is free",
                    "required": true,
                    "value": "$disk_cfree$",
                    "order": "-3"
                },
                "-e": {
                    "description": "Display only devices/mountpoints with errors",
                    "set_if": "$disk_errors_only$"
                },
                "-f": {
                    "description": "Don't account root-reserved blocks into freespace in perfdata",
                    "set_if": "$disk_ignore_reserved$"
                },
                "-g": {
                    "description": "Group paths. Thresholds apply to (free-)space of all partitions together",
                    "value": "$disk_group$"
                },
                "-i": {
                    "description": "Regular expression to ignore selected path or partition (may be repeated)",
                    "repeat_key": true,
                    "value": "$disk_ignore_ereg_path$",
                    "order": "2"
                },
                "-k": {
                    "description": "Same as --units kB",
                    "set_if": "$disk_kilobytes$"
                },
                "-l": {
                    "description": " Only check local filesystems",
                    "set_if": "$disk_local$"
                },
                "-m": {
                    "description": "Same as --units MB",
                    "set_if": "$disk_megabytes$"
                },
                "-p": {
                    "description": "Path or partition (may be repeated)",
                    "repeat_key": true,
                    "value": "$disk_partitions$",
                    "order": "1"
                },
                "-p_old": {
                    "value": "$disk_partition$",
                    "order": "1"
                },
                "-r": {
                    "description": "Regular expression for path or partition (may be repeated)",
                    "repeat_key": true,
                    "value": "$disk_ereg_path$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$disk_timeout$"
                },
                "-u": {
                    "description": "Choose bytes, kB, MB, GB, TB (default: MB)",
                    "value": "$disk_units$"
                },
                "-w": {
                    "description": "Exit with WARNING status if less than INTEGER units of disk are free or Exit with WARNING status if less than PERCENT of disk space is free",
                    "required": true,
                    "value": "$disk_wfree$",
                    "order": "-3"
                },
                "-x": {
                    "description": "Ignore device (only works if -p unspecified)",
                    "value": "$disk_partitions_excluded$"
                },
                "-x_old": "$disk_partition_excluded$"
            },
            "command": "check_disk",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "disk",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000007c",
            "vars": {
                "disk_cfree": "10%",
                "disk_exclude_type": [
                    "none",
                    "tmpfs",
                    "sysfs",
                    "proc",
                    "configfs",
                    "devtmpfs",
                    "devfs",
                    "mtmfs",
                    "tracefs",
                    "cgroup",
                    "fuse.gvfsd-fuse",
                    "fuse.gvfs-fuse-daemon",
                    "fdescfs",
                    "overlay",
                    "nsfs",
                    "squashfs"
                ],
                "disk_megabytes": true,
                "disk_wfree": "20%"
            }
        },
        "users": {
            "arguments": {
                "-c": {
                    "description": "Set CRITICAL status if more than INTEGER users are logged in",
                    "value": "$users_cgreater$"
                },
                "-w": {
                    "description": "Set WARNING status if more than INTEGER users are logged in",
                    "value": "$users_wgreater$"
                }
            },
            "command": "check_users",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "users",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000003e",
            "vars": {
                "users_cgreater": 50,
                "users_wgreater": 20
            }
        },
        "vmware-esx-soap-host-io-queue-latency": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "queue_latency",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-queue-latency",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000dc",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-dc-volumes": {
            "arguments": {
                "--alertonly": {
                    "description": "List only alerting volumes.",
                    "set_if": "$vmware_alertonly$"
                },
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--cluster": {
                    "description": "ESX or ESXi clustername.",
                    "required": false,
                    "value": "$vmware_cluster$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": true,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--gigabyte": {
                    "description": "Output in GB instead of MB.",
                    "set_if": "$vmware_gigabyte$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "volumes",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "$vmware_subselect$",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--usedspace": {
                    "description": "Output used space instead of free.",
                    "set_if": "$vmware_usedspace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-dc-volumes",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000001c",
            "vars": {
                "vmware_alertonly": false,
                "vmware_auth_nosession": false,
                "vmware_crit": "90%",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90",
                "vmware_usedspace": true,
                "vmware_warn": "80%"
            }
        },
        "iostats": {
            "arguments": {
                "-C": {
                    "description": "Sets the CRITICAL level for iowait",
                    "value": "$iostats_critical_wait$"
                },
                "-W": {
                    "description": "Sets the WARNING level for iowait",
                    "value": "$iostats_warning_wait$"
                },
                "-c": {
                    "description": "Sets the CRITICAL level for tps, KB_read/s and KB_written/s, respectively",
                    "value": "$iostats_critical_tps$,$iostats_critical_read$,$iostats_critical_write$"
                },
                "-d": {
                    "description": "Device to check without path. e.g. sda",
                    "value": "$iostats_disk$"
                },
                "-w": {
                    "description": "Sets the WARNING level for tps, KB_read/s and KB_written/s, respectively",
                    "value": "$iostats_warning_tps$,$iostats_warning_read$,$iostats_warning_write$"
                }
            },
            "command": "check_iostats",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "iostats",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000074",
            "vars": {
                "iostats_critical_read": 80000,
                "iostats_critical_tps": 5000,
                "iostats_critical_wait": 80,
                "iostats_critical_write": 25000,
                "iostats_disk": "sda",
                "iostats_warning_read": 50000,
                "iostats_warning_tps": 3000,
                "iostats_warning_wait": 50,
                "iostats_warning_write": 10000
            }
        },
        "vmware-esx-soap-vm-runtime-powerstate": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "powerstate",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-runtime-powerstate",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000044",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-dc-runtime-status": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--cluster": {
                    "description": "ESX or ESXi clustername.",
                    "required": false,
                    "value": "$vmware_cluster$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": true,
                    "value": "$vmware_datacenter$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "status",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-dc-runtime-status",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000049",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-vm-runtime-issues": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "issues",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-runtime-issues",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000009e",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-io-kernel-latency": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "kernel_latency",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-kernel-latency",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000090",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "ping-windows": {
            "arguments": {
                "-H": {
                    "description": "Address to ping",
                    "required": true,
                    "value": "$ping_win_address$"
                },
                "-c": {
                    "description": "Warning threshold: RTA and package loss seperated by comma",
                    "value": "$ping_win_crta$,$ping_win_cpl$%"
                },
                "-p": {
                    "description": "Number of packages to send",
                    "value": "$ping_win_packets$"
                },
                "-t": {
                    "description": "Timeout in ms",
                    "value": "$ping_win_timeout$"
                },
                "-w": {
                    "description": "Warning threshold: RTA and package loss seperated by comma",
                    "value": "$ping_win_wrta$,$ping_win_wpl$%"
                }
            },
            "command": "check_ping.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ping-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000002d",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "ping_win_address": "$check_address$",
                "ping_win_packets": "5",
                "ping_win_timeout": "1000"
            }
        },
        "procs-windows": {
            "arguments": {
                "-c": {
                    "description": "Critical threshold",
                    "value": "$procs_win_crit$"
                },
                "-u": {
                    "description": "Count only procs of this user",
                    "value": "$procs_win_user$"
                },
                "-w": {
                    "description": "Warning threshold",
                    "value": "$procs_win_warn$"
                }
            },
            "command": "check_procs.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "procs-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000000d"
        },
        "sleep": {
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "sleep",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000025",
            "vars": {
                "sleep_time": 1
            }
        },
        "hostalive4": {
            "arguments": {
                "-H": {
                    "description": "host to ping",
                    "value": "$ping_address$"
                },
                "-c": {
                    "description": "critical threshold pair",
                    "value": "$ping_crta$,$ping_cpl$%"
                },
                "-p": {
                    "description": "number of ICMP ECHO packets to send (Default: 5)",
                    "value": "$ping_packets$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ping_timeout$"
                },
                "-w": {
                    "description": "warning threshold pair",
                    "value": "$ping_wrta$,$ping_wpl$%"
                }
            },
            "command": "check_ping -4",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "hostalive4",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000e7",
            "vars": {
                "ping_address": "$address$",
                "ping_cpl": 100,
                "ping_crta": 5000,
                "ping_wpl": 80,
                "ping_wrta": 3000
            }
        },
        "procs": {
            "arguments": {
                "--ereg-argument-array": {
                    "description": "Only scan for processes with args that contain the regex STRING",
                    "value": "$procs_argument_regex$"
                },
                "-C": {
                    "description": "Only scan for exact matches of COMMAND (without path)",
                    "value": "$procs_command$"
                },
                "-P": {
                    "description": "Only scan for processes with PCPU higher than indicated",
                    "value": "$procs_pcpu$"
                },
                "-T": {
                    "description": "Filter own process the traditional way by PID instead of /proc/pid/exe",
                    "set_if": "$procs_traditional$"
                },
                "-a": {
                    "description": "Only scan for processes with args that contain STRING",
                    "value": "$procs_argument$"
                },
                "-c": {
                    "description": "Generate critical state if metric is outside this range",
                    "value": "$procs_critical$"
                },
                "-k": {
                    "description": "Only scan for non kernel threads",
                    "set_if": "$procs_nokthreads$"
                },
                "-m": {
                    "description": "Check thresholds against metric",
                    "value": "$procs_metric$"
                },
                "-p": {
                    "description": "Only scan for children of the parent process ID indicated",
                    "value": "$procs_ppid$"
                },
                "-r": {
                    "description": "Only scan for processes with RSS higher than indicated",
                    "value": "$procs_rss$"
                },
                "-s": {
                    "description": "Only scan for processes that have one or more of the status flags you specify",
                    "value": "$procs_state$"
                },
                "-t": {
                    "description": "Seconds before plugin times out",
                    "value": "$procs_timeout$"
                },
                "-u": {
                    "description": "Only scan for processes with user name or ID indicated",
                    "value": "$procs_user$"
                },
                "-w": {
                    "description": "Generate warning state if metric is outside this range",
                    "value": "$procs_warning$"
                },
                "-z": {
                    "description": "Only scan for processes with VSZ higher than indicated",
                    "value": "$procs_vsz$"
                }
            },
            "command": "check_procs",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "procs",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000003",
            "vars": {
                "procs_critical": 400,
                "procs_nokthreads": false,
                "procs_traditional": false,
                "procs_warning": 250
            }
        },
        "vmware-esx-soap-host-service": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "service",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-service",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000b9",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "load-windows": {
            "arguments": {
                "-c": {
                    "description": "Critical threshold",
                    "value": "$load_win_crit$"
                },
                "-w": {
                    "description": "Warning threshold",
                    "value": "$load_win_warn$"
                }
            },
            "command": "check_load.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "load-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000051"
        },
        "cloudera_hdfs_files": {
            "arguments": {
                "-H": {
                    "description": "Namenode host",
                    "required": true,
                    "value": "$cloudera_hdfs_files_host$"
                },
                "-P": {
                    "description": "Namenode port (default 50070)",
                    "required": false,
                    "value": "$cloudera_hdfs_files_port$"
                },
                "-c": {
                    "description": "Critical threshold",
                    "required": true,
                    "value": "$cloudera_hdfs_files_crit$"
                },
                "-m": {
                    "description": "Max files count that causes problems (default 140000000)",
                    "required": false,
                    "value": "$cloudera_hdfs_files_max$"
                },
                "-w": {
                    "description": "Warning threshold",
                    "required": true,
                    "value": "$cloudera_hdfs_files_warn$"
                }
            },
            "command": "check_cloudera_hdfs_files.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "cloudera_hdfs_files",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000000e"
        },
        "iftraffic64": {
            "arguments": {
                "-C": {
                    "description": "SNMP community. Defaults to 'public' if omitted.",
                    "value": "$iftraffic64_community$"
                },
                "-H": {
                    "description": "Check interface on the indicated host.",
                    "required": true,
                    "value": "$iftraffic64_address$"
                },
                "-M": {
                    "description": "Max counter value of net devices in kilo/mega/giga/bytes.",
                    "value": "$iftraffic64_max_counter$"
                },
                "-b": {
                    "description": "Interface maximum speed in kilo/mega/giga/bits per second.",
                    "required": true,
                    "value": "$iftraffic64_bandwidth$"
                },
                "-c": {
                    "description": "% of bandwidth usage necessary to result in critical status (default: 98)",
                    "value": "$iftraffic64_crit$"
                },
                "-i": {
                    "description": "Interface name.",
                    "required": true,
                    "value": "$iftraffic64_interface$"
                },
                "-u": {
                    "description": "g=gigabits/s,m=megabits/s,k=kilobits/s,b=bits/s.",
                    "value": "$iftraffic64_units$"
                },
                "-w": {
                    "description": "% of bandwidth usage necessary to result in warning status (default: 85)",
                    "value": "$iftraffic64_warn$"
                }
            },
            "command": "check_iftraffic64.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "iftraffic64",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000047",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "iftraffic64_address": "$check_address$",
                "iftraffic64_crit": "98",
                "iftraffic64_warn": "85"
            }
        },
        "snmpv3": {
            "arguments": {
                "--invert-search": {
                    "description": "Invert search result and return CRITICAL if found",
                    "set_if": "$snmpv3_invert_search$"
                },
                "--rate": {
                    "description": "Enable rate calculation",
                    "set_if": "$snmpv3_rate$"
                },
                "--rate-multiplier": {
                    "description": "Converts rate per second. For example, set to 60 to convert to per minute",
                    "value": "$snmpv3_rate_multiplier$"
                },
                "-A": {
                    "description": "SNMPv3 authentication password",
                    "value": "$snmpv3_auth_key$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$snmpv3_address$"
                },
                "-L": {
                    "description": "SNMPv3 securityLevel",
                    "value": "$snmpv3_seclevel$"
                },
                "-N": {
                    "description": "SNMPv3 context",
                    "value": "$snmpv3_context$"
                },
                "-P": {
                    "description": "SNMP protocol version",
                    "value": "3"
                },
                "-R": {
                    "description": "Return OK state (for that OID) if case-insensitive extended REGEX matches",
                    "value": "$snmpv3_eregi$"
                },
                "-U": {
                    "description": "SNMPv3 username",
                    "value": "$snmpv3_user$"
                },
                "-X": {
                    "description": "SNMPv3 privacy password",
                    "value": "$snmpv3_priv_key$"
                },
                "-a": {
                    "description": "SNMPv3 auth proto",
                    "value": "$snmpv3_auth_alg$"
                },
                "-c": {
                    "description": "Critical threshold range(s)",
                    "value": "$snmpv3_crit$"
                },
                "-l": {
                    "description": "Prefix label for output from plugin",
                    "value": "$snmpv3_label$"
                },
                "-m": {
                    "description": "List of SNMP MIBs for translating OIDs between numeric and textual representation",
                    "value": "$snmpv3_miblist$"
                },
                "-n": {
                    "description": "Use SNMP GETNEXT instead of SNMP GET",
                    "set_if": "$snmpv3_getnext$"
                },
                "-o": {
                    "description": "Object identifier(s) or SNMP variables whose value you wish to query",
                    "value": "$snmpv3_oid$"
                },
                "-p": {
                    "description": "Port number",
                    "value": "$snmpv3_port$"
                },
                "-r": {
                    "description": "Return OK state (for that OID) if extended regular expression REGEX matches",
                    "value": "$snmpv3_ereg$"
                },
                "-s": {
                    "description": "Return OK state (for that OID) if STRING is an exact match",
                    "value": "$snmpv3_string$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$snmpv3_timeout$"
                },
                "-u": {
                    "description": "Units label(s) for output data (e.g., 'sec.')",
                    "value": "$snmpv3_units$"
                },
                "-w": {
                    "description": "Warning threshold range(s)",
                    "value": "$snmpv3_warn$"
                },
                "-x": {
                    "description": "SNMPv3 priv proto (default DES)",
                    "value": "$snmpv3_priv_alg$"
                }
            },
            "command": "check_snmp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "snmpv3",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000d0",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "snmpv3_address": "$check_address$",
                "snmpv3_auth_alg": "SHA",
                "snmpv3_priv_alg": "AES",
                "snmpv3_seclevel": "authPriv",
                "snmpv3_timeout": "10"
            }
        },
        "hostalive": {
            "arguments": {
                "-H": {
                    "description": "host to ping",
                    "value": "$ping_address$"
                },
                "-c": {
                    "description": "critical threshold pair",
                    "value": "$ping_crta$,$ping_cpl$%"
                },
                "-p": {
                    "description": "number of ICMP ECHO packets to send (Default: 5)",
                    "value": "$ping_packets$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ping_timeout$"
                },
                "-w": {
                    "description": "warning threshold pair",
                    "value": "$ping_wrta$,$ping_wpl$%"
                }
            },
            "command": "check_ping",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "hostalive",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000080",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "ping_address": "$check_address$",
                "ping_cpl": 100,
                "ping_crta": 5000,
                "ping_wpl": 80,
                "ping_wrta": 3000
            }
        },
        "glusterfs": {
            "arguments": {
                "--perfdata": {
                    "description": "Optional. Print perfdata of all or the specified volume.",
                    "set_if": "$glusterfs_perfdata$"
                },
                "--volume": {
                    "description": "Optional. Only check the specified *VOLUME*. If --volume is not set, all volumes are checked.",
                    "value": "$glusterfs_volume$"
                },
                "--warnonfailedheal": {
                    "description": "Optional. Warn if the *heal-failed* log contains entries. The log can be cleared by restarting glusterd.",
                    "set_if": "$glusterfs_warnonfailedheal$"
                },
                "-C": {
                    "description": "Optional. Return a critical error if inode usage is above *DISKCRIT*. Defaults to 95 (percent).",
                    "value": "$glusterfs_inode_critical$"
                },
                "-W": {
                    "description": "Optional. Warn if inode usage is above *DISKWARN*. Defaults to 90 (percent).",
                    "value": "$glusterfs_inode_warning$"
                },
                "-c": {
                    "description": "Optional. Return a critical error if disk usage is above *DISKCRIT*. Defaults to 95 (percent).",
                    "value": "$glusterfs_disk_critical$"
                },
                "-w": {
                    "description": "Optional. Warn if disk usage is above *DISKWARN*. Defaults to 90 (percent).",
                    "value": "$glusterfs_disk_warning$"
                }
            },
            "command": "sudo /usr/lib/nagios/plugins/check_glusterfs",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "glusterfs",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000cc",
            "vars": {
                "glusterfs_disk_critical": 95,
                "glusterfs_disk_warning": 90,
                "glusterfs_inode_critical": 95,
                "glusterfs_inode_warning": 90
            }
        },
        "nscp-local": {
            "arguments": {
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "-a": {
                    "description": "List of arguments (arguments gets -- prefixed automatically (--argument foo=bar is the same as setting '--foo bar')",
                    "repeat_key": true,
                    "value": "$nscp_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000d1",
            "vars": {
                "nscp_boot": true,
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": [
                    "CheckSystem"
                ],
                "nscp_showall": false
            }
        },
        "spop": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$spop_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$spop_ipv4$"
                },
                "-A": {
                    "description": "All expect strings need to occur in server response. Default is any.",
                    "set_if": "$spop_all$"
                },
                "-D": {
                    "description": "Minimum number of days a certificate has to be valid",
                    "value": "$spop_certificate_age$"
                },
                "-E": {
                    "description": "Can use \n, \r, \t or \\ in send or quit string. Must come before send or quit option. Default: nothing added to send, \r\n added to end of quit",
                    "value": "$spop_escape$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$spop_address$"
                },
                "-M": {
                    "description": "Accept expected string mismatches with states ok, warn, crit (default: warn)",
                    "value": "$spop_mismatch$"
                },
                "-S": {
                    "description": "Use SSL for the connection.",
                    "set_if": "$spop_ssl$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$spop_critical$"
                },
                "-d": {
                    "description": "Seconds to wait between sending string and polling for response",
                    "value": "$spop_delay$"
                },
                "-e": {
                    "description": "String to expect in server response (may be repeated)",
                    "value": "$spop_expect$"
                },
                "-j": {
                    "description": "Hide output from TCP socket.",
                    "set_if": "$spop_jail$"
                },
                "-m": {
                    "description": "Close connection once more than this number of bytes are received",
                    "value": "$spop_maxbytes$"
                },
                "-p": {
                    "description": "Port number (default: none)",
                    "value": "$spop_port$"
                },
                "-q": {
                    "description": "String to send server to initiate a clean close of the connection",
                    "value": "$spop_quit$"
                },
                "-r": {
                    "description": "Accept TCP refusals with states ok, warn, crit (default: crit)",
                    "value": "$spop_refuse$"
                },
                "-s": {
                    "description": "String to send to the server",
                    "value": "$spop_send$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$spop_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$spop_warning$"
                }
            },
            "command": "check_spop",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "spop",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000039",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$spop_ipv4$",
                "check_ipv6": "$spop_ipv6$",
                "spop_address": "$check_address$"
            }
        },
        "smart-attributes": {
            "arguments": {
                "-d": {
                    "description": "Insert the device name (e.g. /dev/sda) to monitor",
                    "required": true,
                    "value": "$smart_attributes_device$"
                },
                "-dbj": {
                    "description": "Path to the smart attributes config file (e.g. check_smartdb.json)",
                    "required": true,
                    "value": "$smart_attributes_config_path$"
                }
            },
            "command": "check_smart_attributes",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "smart-attributes",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000024",
            "vars": {
                "smart_attributes_config_path": "/etc/icinga2/plugins-config/check_smartdb.json"
            }
        },
        "update-windows": {
            "arguments": {
                "--no-reboot-critical": {
                    "description": "Do not automatically return critical if an update requiring reboot is present.",
                    "set_if": "$ignore_reboot$"
                },
                "--possible-reboot": {
                    "description": "Treat 'may need update' as 'definitely needs update'",
                    "set_if": "$update_win_reboot$"
                },
                "-c": {
                    "description": "Number of updates to trigger a critical",
                    "value": "$update_win_crit$"
                },
                "-w": {
                    "description": "Number of updates to trigger a warning",
                    "value": "$update_win_warn$"
                }
            },
            "command": "check_update.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "update-windows",
            "object_type": "external_object",
            "timeout": 300,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000d3"
        },
        "cluster": {
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "cluster",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000062"
        },
        "ldap": {
            "arguments": {
                "-3": {
                    "description": "Use LDAP protocol version 3",
                    "set_if": "$ldap_v3$"
                },
                "-2": {
                    "description": "Use LDAP protocol version 2",
                    "set_if": "$ldap_v2$"
                },
                "-C": {
                    "description": "Number of found entries to result in critical status (optional)",
                    "value": "$ldap_critical_entries$"
                },
                "-D": {
                    "description": "ldap bind DN (if required)",
                    "value": "$ldap_bind$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$ldap_address$"
                },
                "-P": {
                    "description": "ldap password (if required)",
                    "value": "$ldap_pass$"
                },
                "-S": {
                    "description": "use ldaps (ldap v2 ssl method). this also sets the default port to 636",
                    "set_if": "$ldap_ssl$"
                },
                "-T": {
                    "description": "use starttls mechanism introduced in protocol version 3",
                    "set_if": "$ldap_starttls$"
                },
                "-W": {
                    "description": "Number of found entries to result in warning status (optional)",
                    "value": "$ldap_warning_entries$"
                },
                "-a": {
                    "description": "ldap attribute to search (default: \"(objectclass=*)\"",
                    "value": "$ldap_attr$"
                },
                "-b": {
                    "description": "ldap base (eg. ou=my unit, o=my org, c=at",
                    "required": true,
                    "value": "$ldap_base$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$ldap_critical$"
                },
                "-p": {
                    "description": "Port number (default: 389)",
                    "value": "$ldap_port$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ldap_timeout$"
                },
                "-v": {
                    "description": "Show details for command-line debugging",
                    "set_if": "$ldap_verbose$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$ldap_warning$"
                }
            },
            "command": "check_ldap",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ldap",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000002b",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "ldap_address": "$check_address$",
                "ldap_timeout": 10,
                "ldap_v2": true,
                "ldap_v3": false,
                "ldap_verbose": false
            }
        },
        "service-windows": {
            "arguments": {
                "--description": {
                    "description": "Use service description instead of name",
                    "set_if": "$service_win_description$"
                },
                "-s": {
                    "description": "Service to check",
                    "required": true,
                    "value": "$service_win_service$"
                },
                "-w": {
                    "description": "Warn instead of critical when service is not running",
                    "set_if": "$service_win_warn$"
                }
            },
            "command": "check_service.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "service-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000078"
        },
        "snmp": {
            "arguments": {
                "--invert-search": {
                    "description": "Invert search result and return CRITICAL if found",
                    "set_if": "$snmp_invert_search$"
                },
                "--offset": {
                    "description": "Add/substract the specified OFFSET to numeric sensor data",
                    "value": "$snmp_offset$"
                },
                "--rate": {
                    "description": "Enable rate calculation",
                    "set_if": "$snmp_rate$"
                },
                "--rate-multiplier": {
                    "description": "Converts rate per second. For example, set to 60 to convert to per minute",
                    "value": "$snmp_rate_multiplier$"
                },
                "-C": {
                    "description": "Optional community string for SNMP communication (default is 'public')",
                    "value": "$snmp_community$"
                },
                "-D": {
                    "description": "Separates output on multiple OID requests",
                    "value": "$snmp_output_delimiter$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$snmp_address$"
                },
                "-O": {
                    "description": "Label performance data with OIDs instead of --label's",
                    "set_if": "$snmp_perf_oids$"
                },
                "-P": {
                    "description": "SNMP protocol version",
                    "value": "$snmp_version$"
                },
                "-R": {
                    "description": "Return OK state (for that OID) if case-insensitive extended REGEX matches",
                    "value": "$snmp_eregi$"
                },
                "-c": {
                    "description": "Critical threshold range(s)",
                    "value": "$snmp_crit$"
                },
                "-e": {
                    "description": "Number of retries to be used in the requests",
                    "value": "$snmp_retries$"
                },
                "-l": {
                    "description": "Prefix label for output from plugin",
                    "value": "$snmp_label$"
                },
                "-m": {
                    "description": "List of MIBS to be loaded (default = none if using numeric OIDs or 'ALL' for symbolic OIDs.)",
                    "value": "$snmp_miblist$"
                },
                "-n": {
                    "description": "Use SNMP GETNEXT instead of SNMP GET",
                    "set_if": "$snmp_getnext$"
                },
                "-o": {
                    "description": "Object identifier(s) or SNMP variables whose value you wish to query",
                    "value": "$snmp_oid$"
                },
                "-p": {
                    "description": "Port number (default: 161)",
                    "value": "$snmp_port$"
                },
                "-r": {
                    "description": "Return OK state (for that OID) if extended regular expression REGEX matches",
                    "value": "$snmp_ereg$"
                },
                "-s": {
                    "description": "Return OK state (for that OID) if STRING is an exact match",
                    "value": "$snmp_string$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$snmp_timeout$"
                },
                "-u": {
                    "description": "Units label(s) for output data (e.g., 'sec.')",
                    "value": "$snmp_units$"
                },
                "-w": {
                    "description": "Warning threshold range(s)",
                    "value": "$snmp_warn$"
                }
            },
            "command": "check_snmp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "snmp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000da",
            "vars": {
                "snmp_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "snmp_community": "public",
                "snmp_invert_search": false,
                "snmp_timeout": "10"
            }
        },
        "nscp": {
            "arguments": {
                "-H": {
                    "description": "Name of the host to check",
                    "value": "$nscp_address$"
                },
                "-c": {
                    "description": "Threshold which will result in a critical status",
                    "value": "$nscp_crit$"
                },
                "-d": {
                    "description": "Use with SERVICESTATE to see working services or PROCSTATE for running processes",
                    "set_if": "$nscp_showall$",
                    "value": "SHOWALL"
                },
                "-l": {
                    "repeat_key": false,
                    "value": "$nscp_params$"
                },
                "-p": {
                    "description": "Optional port number (default: 1248)",
                    "value": "$nscp_port$"
                },
                "-s": {
                    "description": "Password needed for the request",
                    "value": "$nscp_password$"
                },
                "-t": {
                    "description": "Seconds before connection attempt times out",
                    "value": "$nscp_timeout$"
                },
                "-v": {
                    "description": "Variable to check",
                    "required": true,
                    "value": "$nscp_variable$"
                },
                "-w": {
                    "description": "Threshold which will result in a warning status",
                    "value": "$nscp_warn$"
                }
            },
            "command": "check_nt",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000d6",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "nscp_address": "$check_address$",
                "nscp_port": 12489,
                "nscp_showall": false
            }
        },
        "snmp-service": {
            "arguments": {
                "-2": {
                    "description": "Use snmp v2c",
                    "set_if": "$snmp_v2$"
                },
                "-C": {
                    "description": "Community name for the host's SNMP agent (implies v1 protocol)",
                    "set_if": "$snmp_nocrypt$",
                    "value": "$snmp_community$"
                },
                "-H": {
                    "description": "Name or IP address of host to check",
                    "value": "$snmp_address$"
                },
                "-L": {
                    "description": "<authproto>,<privproto> - <Authentication protocol (md5|sha : default md5)>,<Priv protocole (des|aes : default des)>",
                    "set_if": "$snmp_v3_use_authprotocol$",
                    "value": "$snmp_authprotocol$"
                },
                "-N": {
                    "description": "Compare matching services with <n> instead of the number of names provided.",
                    "value": "$snmp_service_count$"
                },
                "-X": {
                    "description": "Priv password for snmpv3 (AuthPriv protocol)",
                    "set_if": "$snmp_v3_use_privpass$",
                    "value": "$snmp_privpass$"
                },
                "-c": "$snmp_crit$",
                "-l": {
                    "description": "Login and auth password for snmpv3 authentication",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_login$"
                },
                "-n": {
                    "description": "Comma separated names of services (perl regular expressions can be used for every one). By default, it is not case sensitive. eg. ^dns$",
                    "value": "$snmp_service_name$"
                },
                "-p": {
                    "description": "SNMP port (Default 161)",
                    "value": "$snmp_port$"
                },
                "-r": {
                    "description": "Do not use regexp to match NAME in service description.",
                    "set_if": "$snmp_service_noregexp$"
                },
                "-s": {
                    "description": "Show all services in the output, instead of only the non-active ones.",
                    "set_if": "$snmp_service_showall$"
                },
                "-t": {
                    "description": "Timeout for SNMP in seconds (Default: 5)",
                    "value": "$snmp_timeout$"
                },
                "-w": "$snmp_warn$",
                "-x": {
                    "description": "Priv password",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_password$"
                }
            },
            "command": "check_snmp_win.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "snmp-service",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000009a",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "snmp_address": "$check_address$",
                "snmp_authprotocol": "md5,des",
                "snmp_community": "public",
                "snmp_login": "snmpuser",
                "snmp_nocrypt": true,
                "snmp_service_name": ".*",
                "snmp_timeout": "5",
                "snmp_v2": false,
                "snmp_v3": false,
                "snmp_v3_use_authprotocol": false,
                "snmp_v3_use_privpass": false
            }
        },
        "lmsensors": {
            "arguments": {
                "--sensor": {
                    "description": "Set what to monitor, for example CPU or MB (or M/B). Check sensors for the correct word. Default is CPU.",
                    "value": "$lmsensors_sensor$"
                },
                "-c": {
                    "description": "Exit with CRITICAL status if above INTEGER degrees",
                    "required": true,
                    "value": "$lmsensors_critical$"
                },
                "-w": {
                    "description": "Exit with WARNING status if above INTEGER degrees",
                    "required": true,
                    "value": "$lmsensors_warning$"
                }
            },
            "command": "check_lmsensors",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "lmsensors",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000088",
            "vars": {
                "lmsensors_critical": "80",
                "lmsensors_sensor": "Core",
                "lmsensors_warning": "75"
            }
        },
        "vmware-esx-soap-vm-runtime-consoleconnections": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "consoleconnections",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-runtime-consoleconnections",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000006b",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "snmp-env": {
            "arguments": {
                "-2": {
                    "description": "Use snmp v2c",
                    "set_if": "$snmp_v2$"
                },
                "-C": {
                    "description": "Community name for the host's SNMP agent (implies v1 protocol)",
                    "set_if": "$snmp_nocrypt$",
                    "value": "$snmp_community$"
                },
                "-F": {
                    "description": "Minimum fan rpm value (only needed for 'iron' & 'linux')",
                    "value": "$snmp_env_fan$"
                },
                "-H": {
                    "description": "Name or IP address of host to check",
                    "value": "$snmp_address$"
                },
                "-L": {
                    "description": "<authproto>,<privproto> - <Authentication protocol (md5|sha : default md5)>,<Priv protocole (des|aes : default des)>",
                    "set_if": "$snmp_v3_use_authprotocol$",
                    "value": "$snmp_authprotocol$"
                },
                "-T": {
                    "description": "Environment Type [cisco|nokia|bc|iron|foundry|linux]",
                    "value": "$snmp_env_type$"
                },
                "-X": {
                    "description": "Priv password for snmpv3 (AuthPriv protocol)",
                    "set_if": "$snmp_v3_use_privpass$",
                    "value": "$snmp_privpass$"
                },
                "-c": {
                    "description": "Maximum temp in degrees celsius (only needed for 'iron' & 'linux')",
                    "value": "$snmp_env_celsius$"
                },
                "-f": {
                    "description": "Perfparse compatible output",
                    "set_if": "$snmp_perf$"
                },
                "-l": {
                    "description": "Login and auth password for snmpv3 authentication",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_login$"
                },
                "-p": {
                    "description": "SNMP port (Default 161)",
                    "value": "$snmp_port$"
                },
                "-t": {
                    "description": "Timeout for SNMP in seconds (Default: 5)",
                    "value": "$snmp_timeout$"
                },
                "-w": "$snmp_warn$",
                "-x": {
                    "description": "Priv password",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_password$"
                }
            },
            "command": "check_snmp_env.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "snmp-env",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000083",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "snmp_address": "$check_address$",
                "snmp_authprotocol": "md5,des",
                "snmp_community": "public",
                "snmp_env_type": "cisco",
                "snmp_login": "snmpuser",
                "snmp_nocrypt": true,
                "snmp_perf": true,
                "snmp_timeout": "5",
                "snmp_v2": false,
                "snmp_v3": false,
                "snmp_v3_use_authprotocol": false,
                "snmp_v3_use_privpass": false
            }
        },
        "passive": {
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "passive",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000034",
            "vars": {
                "dummy_state": 3,
                "dummy_text": "No Passive Check Result Received."
            }
        },
        "ping4": {
            "arguments": {
                "-H": {
                    "description": "host to ping",
                    "value": "$ping_address$"
                },
                "-c": {
                    "description": "critical threshold pair",
                    "value": "$ping_crta$,$ping_cpl$%"
                },
                "-p": {
                    "description": "number of ICMP ECHO packets to send (Default: 5)",
                    "value": "$ping_packets$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ping_timeout$"
                },
                "-w": {
                    "description": "warning threshold pair",
                    "value": "$ping_wrta$,$ping_wpl$%"
                }
            },
            "command": "check_ping -4",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ping4",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000071",
            "vars": {
                "ping_address": "$address$",
                "ping_cpl": 15,
                "ping_crta": 200,
                "ping_wpl": 5,
                "ping_wrta": 100
            }
        },
        "ping": {
            "arguments": {
                "-H": {
                    "description": "host to ping",
                    "value": "$ping_address$"
                },
                "-c": {
                    "description": "critical threshold pair",
                    "value": "$ping_crta$,$ping_cpl$%"
                },
                "-p": {
                    "description": "number of ICMP ECHO packets to send (Default: 5)",
                    "value": "$ping_packets$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ping_timeout$"
                },
                "-w": {
                    "description": "warning threshold pair",
                    "value": "$ping_wrta$,$ping_wpl$%"
                }
            },
            "command": "check_ping",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ping",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000017",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "ping_address": "$check_address$",
                "ping_cpl": 15,
                "ping_crta": 200,
                "ping_wpl": 5,
                "ping_wrta": 100
            }
        },
        "dhcp": {
            "arguments": {
                "-i": {
                    "description": "Interface to to use for listening (i.e. eth0)",
                    "value": "$dhcp_interface$"
                },
                "-m": {
                    "description": "MAC address to use in the DHCP request",
                    "value": "$dhcp_mac$"
                },
                "-r": {
                    "description": "IP address that should be offered by at least one DHCP server",
                    "value": "$dhcp_requestedip$"
                },
                "-s": {
                    "description": "IP address of DHCP server that we must hear from",
                    "value": "$dhcp_serverip$"
                },
                "-t": {
                    "description": "Seconds to wait for DHCPOFFER before timeout occurs",
                    "value": "$dhcp_timeout$"
                },
                "-u": {
                    "description": "Unicast testing: mimic a DHCP relay",
                    "set_if": "$dhcp_unicast$"
                }
            },
            "command": "check_dhcp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "dhcp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000058",
            "vars": {
                "dhcp_unicast": false
            }
        },
        "ping6-windows": {
            "arguments": {
                "-H": {
                    "description": "Address to ping",
                    "required": true,
                    "value": "$ping_win_address$"
                },
                "-c": {
                    "description": "Warning threshold: RTA and package loss seperated by comma",
                    "value": "$ping_win_crta$,$ping_win_cpl$%"
                },
                "-p": {
                    "description": "Number of packages to send",
                    "value": "$ping_win_packets$"
                },
                "-t": {
                    "description": "Timeout in ms",
                    "value": "$ping_win_timeout$"
                },
                "-w": {
                    "description": "Warning threshold: RTA and package loss seperated by comma",
                    "value": "$ping_win_wrta$,$ping_win_wpl$%"
                }
            },
            "command": "check_ping.exe -6",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ping6-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000007b",
            "vars": {
                "ping_win_address": "$address6$",
                "ping_win_packets": "5",
                "ping_win_timeout": "1000"
            }
        },
        "interfacetable": {
            "arguments": {
                "-2": {
                    "description": "Use snmp v2c",
                    "set_if": "$interfacetable_snmpv2$"
                },
                "--64bits": {
                    "description": "Use SNMP 64-bits counters",
                    "set_if": "$interfacetable_64bits$"
                },
                "--accessmethod": {
                    "description": "Access method for a shortcut to the host in the HTML page",
                    "value": "$interfacetable_accessmethod$"
                },
                "--alias": {
                    "description": "Add the alias information for each interface in the interface table",
                    "set_if": "$interfacetable_alias$"
                },
                "--alias-matching": {
                    "description": "Allow you to specify alias in addition to interface names",
                    "set_if": "$interfacetable_aliasmatching$"
                },
                "--cache": {
                    "description": "Define the retention time of the cached data",
                    "value": "$interfacetable_cache$"
                },
                "--config": {
                    "description": "Specify a config file to load",
                    "value": "$interfacetable_config$"
                },
                "--contextname": {
                    "description": "Context name for the snmp requests",
                    "value": "$interfacetable_contextname$"
                },
                "--cp": {
                    "description": "Number of property changes before leading to a critical alert",
                    "value": "$interfacetable_criticalproperty$"
                },
                "--css": {
                    "description": "Define the css stylesheet used by the generated html files",
                    "value": "$interfacetable_css$"
                },
                "--ct": {
                    "description": "Interface traffic load percentage leading to a critical alert",
                    "value": "$interfacetable_criticaltraffic$"
                },
                "--default-table-sorting": {
                    "description": "Default table sorting",
                    "value": "$interfacetable_defaulttablesorting$"
                },
                "--delta": {
                    "description": "Set the delta used for interface throuput calculation",
                    "value": "$interfacetable_delta$"
                },
                "--domain": {
                    "description": "SNMP transport domain",
                    "value": "$interfacetable_domain$"
                },
                "--duplex": {
                    "description": "Add the duplex mode property for each interface in the interface table",
                    "set_if": "$interfacetable_duplex$"
                },
                "--ep": {
                    "description": "Comma separated list of interfaces excluded from the property tracking",
                    "value": "$interfacetable_excludeproperty$"
                },
                "--et": {
                    "description": "Comma separated list of interfaces excluded from traffic checks",
                    "value": "$interfacetable_excludetraffic$"
                },
                "--grapherurl": {
                    "description": "Graphing system url",
                    "value": "$interfacetable_grapherurl$"
                },
                "--htmltablelinktarget": {
                    "description": "Specifies the windows or the frame where the [details] link will load the generated html page",
                    "value": "$interfacetable_htmltablelinktarget$"
                },
                "--ifs": {
                    "description": "Input field separator",
                    "value": "$interfacetable_ifs$"
                },
                "--ip": {
                    "description": "Comma separated list of interfaces included in the property tracking",
                    "value": "$interfacetable_includeproperty$"
                },
                "--it": {
                    "description": "Comma separated list of interfaces included for traffic checks",
                    "value": "$interfacetable_includetraffic$"
                },
                "--max-repetitions": {
                    "description": "Increasing this value may enhance snmp query performances by gathering more results at one time",
                    "value": "$interfacetable_maxrepetitions$"
                },
                "--noconfigtable": {
                    "description": "Disable configuration table on the generated HTML page",
                    "set_if": "$interfacetable_noconfigtable$"
                },
                "--nodetype": {
                    "description": "Specify the node type, for specific information to be printed / specific oids to be used",
                    "value": "$interfacetable_nodetype$"
                },
                "--nohuman": {
                    "description": "Do not translate bandwidth usage in human readable format",
                    "set_if": "$interfacetable_nohuman$"
                },
                "--noifloadgradient": {
                    "description": "Disable color gradient from green over yellow to red for the load percentage",
                    "set_if": "$interfacetable_noifloadgradient$"
                },
                "--noipinfo": {
                    "description": "Remove the ip information for each interface from the interface table",
                    "set_if": "$interfacetable_noipinfo$"
                },
                "--notips": {
                    "description": "Disable the tips in the generated html tables",
                    "set_if": "$interfacetable_notips$"
                },
                "--notype": {
                    "description": "Remove the interface type for each interface",
                    "set_if": "$interfacetable_notype$"
                },
                "--outputshort": {
                    "description": "Reduce the verbosity of the plugin output",
                    "set_if": "$interfacetable_outputshort$"
                },
                "--perfdatadir": {
                    "description": "When specified, the performance data are also written directly to a file, in the specified location",
                    "value": "$interfacetable_perfdatadir$"
                },
                "--perfdataformat": {
                    "description": "Define which performance data will be generated",
                    "value": "$interfacetable_perfdataformat$"
                },
                "--perfdataservicedesc": {
                    "description": "Specify additional parameters for output performance data to PNP",
                    "value": "$interfacetable_perfdataservicedesc$"
                },
                "--perfdatathreshold": {
                    "description": "Define which thresholds are printed in the generated performance data",
                    "value": "$interfacetable_perfdatathreshold$"
                },
                "--pkt": {
                    "description": "Add unicast/non-unicast pkt stats for each interface",
                    "set_if": "$interfacetable_pkt$"
                },
                "--portperfunit": {
                    "description": "Traffic could be reported in bits (counters) or in bps (calculated value)",
                    "value": "$interfacetable_portperfunit$"
                },
                "--snapshot": {
                    "description": "Force the plugin to run like if it was the first launch",
                    "set_if": "$interfacetable_snapshot$"
                },
                "--snmp-maxmsgsize": {
                    "description": "Size of the SNMP message in octets, usefull in case of too long responses. Be carefull with network filters. Range 484 - 65535. Apply only to netsnmp perl bindings. The default is 1472 octets for UDP/IPv4, 1452 octets for UDP/IPv6, 1460 octets for TCP/IPv4, and 1440 octets for TCP/IPv6.",
                    "value": "$interfacetable_snmpmaxmsgsize$"
                },
                "--snmp-retries": {
                    "description": "Define the number of times to retry sending a SNMP message",
                    "value": "$interfacetable_snmpretries$"
                },
                "--snmp-timeout": {
                    "description": "Define the Transport Layer timeout for the snmp queries",
                    "value": "$interfacetable_snmptimeout$"
                },
                "--stp": {
                    "description": "Add the stp state property for each interface in the interface table",
                    "set_if": "$interfacetable_stp$"
                },
                "--table-split": {
                    "description": "Generate multiple interface tables, one per interface type",
                    "set_if": "$interfacetable_tablesplit$"
                },
                "--timeout": {
                    "description": "Define the global timeout limit of the plugin",
                    "value": "$interfacetable_timeout$"
                },
                "--tp": {
                    "description": "List of tracked properties",
                    "value": "$interfacetable_trackproperty$"
                },
                "--trafficwithpkt": {
                    "description": "Enable traffic calculation using pkt counters instead of octet counters. Useful when using 32-bit counters to track the load on > 1GbE interfaces.",
                    "set_if": "$interfacetable_trafficwithpkt$"
                },
                "--unixsnmp": {
                    "description": "Use unix snmp utilities for snmp requests",
                    "set_if": "$interfacetable_unixsnmp$"
                },
                "--vlan": {
                    "description": "Add the vlan attribution property for each interface in the interface table",
                    "set_if": "$interfacetable_vlan$"
                },
                "--wp": {
                    "description": "Number of property changes before leading to a warning alert",
                    "value": "$interfacetable_warningproperty$"
                },
                "--wt": {
                    "description": "Interface traffic load percentage leading to a warning alert",
                    "value": "$interfacetable_warningtraffic$"
                },
                "-C": {
                    "description": "Specifies the snmp v1/v2c community string",
                    "value": "$interfacetable_community$"
                },
                "-H": {
                    "description": "Specifies the remote host to poll",
                    "value": "$interfacetable_hostquery$"
                },
                "-L": {
                    "description": "Authentication protocol,Priv protocol",
                    "value": "$interfacetable_protocols$"
                },
                "-P": {
                    "description": "SNMP port",
                    "value": "$interfacetable_port$"
                },
                "-X": {
                    "description": "Priv password for snmpv3",
                    "value": "$interfacetable_privpass$"
                },
                "-e": {
                    "description": "Comma separated list of interfaces globally excluded from the monitoring",
                    "value": "$interfacetable_exclude$"
                },
                "-f": {
                    "description": "Enable port performance data",
                    "set_if": "$interfacetable_enableperfdata$"
                },
                "-g": {
                    "description": "Specify the used graphing solution",
                    "value": "$interfacetable_grapher$"
                },
                "-h": {
                    "description": "Specifies the hostname to display in the HTML link",
                    "value": "$interfacetable_hostdisplay$"
                },
                "-i": {
                    "description": "Comma separated list of interfaces globally included in the monitoring",
                    "value": "$interfacetable_include$"
                },
                "-l": {
                    "description": "Login for snmpv3 authentication",
                    "value": "$interfacetable_login$"
                },
                "-r": {
                    "description": "Interface names and property names for some other options will be interpreted as regular expressions",
                    "set_if": "$interfacetable_regex$"
                },
                "-x": {
                    "description": "Auth password for snmpv3 authentication",
                    "value": "$interfacetable_passwd$"
                }
            },
            "command": "check_interface_table_v3t",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "interfacetable",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000bc",
            "vars": {
                "interfacetable_64bits": false,
                "interfacetable_aliasmatching": false,
                "interfacetable_duplex": false,
                "interfacetable_enableperfdata": false,
                "interfacetable_hostdisplay": "$host.display_name$",
                "interfacetable_hostquery": "$address$",
                "interfacetable_noconfigtable": false,
                "interfacetable_nohuman": false,
                "interfacetable_noifloadgradient": false,
                "interfacetable_noipinfo": false,
                "interfacetable_notips": false,
                "interfacetable_notype": false,
                "interfacetable_outputshort": false,
                "interfacetable_perfdataservicedesc": "$service.name$",
                "interfacetable_pkt": false,
                "interfacetable_regex": false,
                "interfacetable_snapshot": false,
                "interfacetable_snmpv2": false,
                "interfacetable_stp": false,
                "interfacetable_trafficwithpkt": false,
                "interfacetable_unixsnmp": false,
                "interfacetable_vlan": false
            }
        },
        "ntp_time": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$ntp_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$ntp_ipv4$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$ntp_address$"
                },
                "-c": {
                    "description": "Offset to result in critical status (seconds)",
                    "value": "$ntp_critical$"
                },
                "-o": {
                    "description": "Expected offset of the ntp server relative to local server (seconds)",
                    "value": "$ntp_timeoffset$"
                },
                "-p": {
                    "description": "Port number (default: 123)",
                    "value": "$ntp_port$"
                },
                "-q": {
                    "description": "Returns UNKNOWN instead of CRITICAL if offset cannot be found",
                    "set_if": "$ntp_quiet$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ntp_timeout$"
                },
                "-w": {
                    "description": "Offset to result in warning status (seconds)",
                    "value": "$ntp_warning$"
                }
            },
            "command": "check_ntp_time",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ntp_time",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000a8",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$ntp_ipv4$",
                "check_ipv6": "$ntp_ipv6$",
                "ntp_address": "$check_address$"
            }
        },
        "vmware-esx-soap-host-net": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "net",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-net",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000022",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-vm-cpu-usage": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "cpu",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "usage",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-cpu-usage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000006a",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_crit": "90%",
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90",
                "vmware_warn": "80%"
            }
        },
        "memory-windows": {
            "arguments": {
                "-U": {
                    "description": "Show used memory instead of the free memory",
                    "set_if": "$memory_win_show_used$"
                },
                "-c": {
                    "description": "Critical Threshold",
                    "value": "$memory_win_crit$"
                },
                "-u": {
                    "description": "Use this unit to display memory",
                    "value": "$memory_win_unit$"
                },
                "-w": {
                    "description": "Warning Threshold",
                    "value": "$memory_win_warn$"
                }
            },
            "command": "check_memory.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "memory-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000084",
            "vars": {
                "memory_win_crit": "5%",
                "memory_win_unit": "mb",
                "memory_win_warn": "10%"
            }
        },
        "ups": {
            "arguments": {
                "-H": {
                    "description": "Address of the upsd server",
                    "required": true,
                    "value": "$ups_address$"
                },
                "-T": {
                    "description": "Display temperature in degrees Celsius instead of Fahrenheit",
                    "set_if": "$ups_celsius$"
                },
                "-c": {
                    "description": "Critical threshold for the selected variable",
                    "value": "$ups_critical$"
                },
                "-p": {
                    "description": "Port number (default: 3493)",
                    "value": "$ups_port$"
                },
                "-t": {
                    "description": "Seconds before the connection times out (default: 10)",
                    "value": "$ups_timeout$"
                },
                "-u": {
                    "description": "Name of the UPS to monitor",
                    "required": true,
                    "value": "$ups_name$"
                },
                "-v": {
                    "description": "Variable to monitor, valid strings are LINE, TEMP, BATTPCT or LOADPCT",
                    "value": "$ups_variable$"
                },
                "-w": {
                    "description": "Warning threshold for the selected variable",
                    "value": "$ups_warning$"
                }
            },
            "command": "check_ups",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ups",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000027",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "ups_address": "$check_address$",
                "ups_name": "ups"
            }
        },
        "vmware-esx-soap-vm-io": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-io",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000037",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "pop": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$pop_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$pop_ipv4$"
                },
                "-A": {
                    "description": "All expect strings need to occur in server response. Default is any.",
                    "set_if": "$pop_all$"
                },
                "-D": {
                    "description": "Minimum number of days a certificate has to be valid",
                    "value": "$pop_certificate_age$"
                },
                "-E": {
                    "description": "Can use \n, \r, \t or \\ in send or quit string. Must come before send or quit option. Default: nothing added to send, \r\n added to end of quit",
                    "value": "$pop_escape$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$pop_address$"
                },
                "-M": {
                    "description": "Accept expected string mismatches with states ok, warn, crit (default: warn)",
                    "value": "$pop_mismatch$"
                },
                "-S": {
                    "description": "Use SSL for the connection.",
                    "set_if": "$pop_ssl$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$pop_critical$"
                },
                "-d": {
                    "description": "Seconds to wait between sending string and polling for response",
                    "value": "$pop_delay$"
                },
                "-e": {
                    "description": "String to expect in server response (may be repeated)",
                    "value": "$pop_expect$"
                },
                "-j": {
                    "description": "Hide output from TCP socket.",
                    "set_if": "$pop_jail$"
                },
                "-m": {
                    "description": "Close connection once more than this number of bytes are received",
                    "value": "$pop_maxbytes$"
                },
                "-p": {
                    "description": "Port number (default: none)",
                    "value": "$pop_port$"
                },
                "-q": {
                    "description": "String to send server to initiate a clean close of the connection",
                    "value": "$pop_quit$"
                },
                "-r": {
                    "description": "Accept TCP refusals with states ok, warn, crit (default: crit)",
                    "value": "$pop_refuse$"
                },
                "-s": {
                    "description": "String to send to the server",
                    "value": "$pop_send$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$pop_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$pop_warning$"
                }
            },
            "command": "check_pop",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "pop",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000050",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$pop_ipv4$",
                "check_ipv6": "$pop_ipv6$",
                "pop_address": "$check_address$"
            }
        },
        "snmp-uptime": {
            "arguments": {
                "--invert-search": {
                    "description": "Invert search result and return CRITICAL if found",
                    "set_if": "$snmp_invert_search$"
                },
                "--offset": {
                    "description": "Add/substract the specified OFFSET to numeric sensor data",
                    "value": "$snmp_offset$"
                },
                "--rate": {
                    "description": "Enable rate calculation",
                    "set_if": "$snmp_rate$"
                },
                "--rate-multiplier": {
                    "description": "Converts rate per second. For example, set to 60 to convert to per minute",
                    "value": "$snmp_rate_multiplier$"
                },
                "-C": {
                    "description": "Optional community string for SNMP communication (default is 'public')",
                    "value": "$snmp_community$"
                },
                "-D": {
                    "description": "Separates output on multiple OID requests",
                    "value": "$snmp_output_delimiter$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$snmp_address$"
                },
                "-O": {
                    "description": "Label performance data with OIDs instead of --label's",
                    "set_if": "$snmp_perf_oids$"
                },
                "-P": {
                    "description": "SNMP protocol version",
                    "value": "$snmp_version$"
                },
                "-R": {
                    "description": "Return OK state (for that OID) if case-insensitive extended REGEX matches",
                    "value": "$snmp_eregi$"
                },
                "-c": {
                    "description": "Critical threshold range(s)",
                    "value": "$snmp_crit$"
                },
                "-e": {
                    "description": "Number of retries to be used in the requests",
                    "value": "$snmp_retries$"
                },
                "-l": {
                    "description": "Prefix label for output from plugin",
                    "value": "$snmp_label$"
                },
                "-m": {
                    "description": "List of MIBS to be loaded (default = none if using numeric OIDs or 'ALL' for symbolic OIDs.)",
                    "value": "$snmp_miblist$"
                },
                "-n": {
                    "description": "Use SNMP GETNEXT instead of SNMP GET",
                    "set_if": "$snmp_getnext$"
                },
                "-o": {
                    "description": "Object identifier(s) or SNMP variables whose value you wish to query",
                    "value": "$snmp_oid$"
                },
                "-p": {
                    "description": "Port number (default: 161)",
                    "value": "$snmp_port$"
                },
                "-r": {
                    "description": "Return OK state (for that OID) if extended regular expression REGEX matches",
                    "value": "$snmp_ereg$"
                },
                "-s": {
                    "description": "Return OK state (for that OID) if STRING is an exact match",
                    "value": "$snmp_string$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$snmp_timeout$"
                },
                "-u": {
                    "description": "Units label(s) for output data (e.g., 'sec.')",
                    "value": "$snmp_units$"
                },
                "-w": {
                    "description": "Warning threshold range(s)",
                    "value": "$snmp_warn$"
                }
            },
            "command": "check_snmp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "snmp-uptime",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000003a",
            "vars": {
                "snmp_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "snmp_community": "public",
                "snmp_invert_search": false,
                "snmp_oid": "1.3.6.1.2.1.1.3.0",
                "snmp_timeout": "10"
            }
        },
        "logstash": {
            "arguments": {
                "--cpu-usage-threshold-crit": {
                    "description": "Critical threshold for cpu usage in percent",
                    "value": "$logstash_cpu_crit$"
                },
                "--cpu-usage-threshold-warn": {
                    "description": "Warning threshold for cpu usage in percent",
                    "value": "$logstash_cpu_warn$"
                },
                "--file-descriptor-threshold-crit": {
                    "description": "Critical threshold of file descriptor usage in percent",
                    "value": "$logstash_filedesc_crit$"
                },
                "--file-descriptor-threshold-warn": {
                    "description": "Warning threshold of file descriptor usage in percent",
                    "value": "$logstash_filedesc_warn$"
                },
                "--heap-usage-threshold-crit": {
                    "description": "Critical threshold of heap usage in percent",
                    "value": "$logstash_heap_crit$"
                },
                "--heap-usage-threshold-warn": {
                    "description": "Warning threshold of heap usage in percent",
                    "value": "$logstash_heap_warn$"
                },
                "--inflight-events-crit": {
                    "description": "Critical threshold of inflight events",
                    "value": "$logstash_inflight_crit$"
                },
                "--inflight-events-warn": {
                    "description": "Warning threshold of inflight events",
                    "value": "$logstash_inflight_warn$"
                },
                "-H": {
                    "description": "Hostname where Logstash is running",
                    "value": "$logstash_hostname$"
                },
                "-p": {
                    "description": "Port where Logstash is listening for API requests",
                    "value": "$logstash_port$"
                }
            },
            "command": "check_logstash",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "logstash",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000068",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "logstash_filedesc_crit": 95,
                "logstash_filedesc_warn": 85,
                "logstash_heap_crit": 80,
                "logstash_heap_warn": 70,
                "logstash_hostname": "$check_address$",
                "logstash_port": 9600
            }
        },
        "vmware-esx-dc-runtime-tools": {
            "arguments": {
                "--alertonly": {
                    "set_if": "$vmware_alertonly$"
                },
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--cluster": {
                    "description": "ESX or ESXi clustername.",
                    "required": false,
                    "value": "$vmware_cluster$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": true,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--open-vm-tools": {
                    "set_if": "$vmware_openvmtools$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--poweredonly": {
                    "set_if": "$vmware_poweredonly$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "tools",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-dc-runtime-tools",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000ae",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "ssl": {
            "arguments": {
                "--sni": {
                    "description": "Enable SSL/TLS hostname extension support (SNI)",
                    "value": "$ssl_sni$"
                },
                "--ssl": {
                    "description": "Use SSL for the connection"
                },
                "-D": {
                    "type": "Function",
                    "body": "/* Unable to fetch function body through API */"
                },
                "-H": {
                    "description": "Host address",
                    "value": "$ssl_address$"
                },
                "-p": {
                    "description": "TCP port (default: 443)",
                    "value": "$ssl_port$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ssl_timeout$"
                }
            },
            "command": "check_tcp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ssl",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000003b",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "ssl_address": "$check_address$",
                "ssl_cert_valid_days_critical": false,
                "ssl_cert_valid_days_warn": false,
                "ssl_port": 443
            }
        },
        "fail2ban": {
            "arguments": {
                "-D": {
                    "description": "To modify the output display, default is 'CHECK FAIL2BAN ACTIVITY'",
                    "value": "$fail2ban_display$"
                },
                "-P": {
                    "description": "Specify the path to the tw_cli binary, default value is /usr/bin/fail2ban-client",
                    "value": "$fail2ban_path$"
                },
                "-c": {
                    "description": "Specify a critical threshold, default is 2",
                    "value": "$fail2ban_critical$"
                },
                "-p": {
                    "description": "If set to true, activate the perfdata output",
                    "set_if": "$fail2ban_perfdata$"
                },
                "-s": {
                    "description": "Specify a socket path, default is unset",
                    "value": "$fail2ban_socket$"
                },
                "-w": {
                    "description": "Specify a warning threshold, default is 1",
                    "value": "$fail2ban_warning$"
                }
            },
            "command": "sudo /usr/lib/nagios/plugins/check_fail2ban",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "fail2ban",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000041",
            "vars": {
                "fail2ban_perfdata": true
            }
        },
        "vmware-esx-soap-vm-mem-consumed": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "mem",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "consumed",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-mem-consumed",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000053",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "nscp-local-process": {
            "arguments": {
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "-a": {
                    "description": "List of arguments (arguments gets -- prefixed automatically (--argument foo=bar is the same as setting '--foo bar')",
                    "repeat_key": true,
                    "value": "$nscp_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-process",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000a5",
            "vars": {
                "nscp_boot": true,
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": [
                    "CheckSystem"
                ],
                "nscp_query": "check_process",
                "nscp_showall": false
            }
        },
        "vmware-esx-soap-host-runtime-health-listsensors": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--listsensors": {},
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "health",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-runtime-health-listsensors",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000ec",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-mem": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "mem",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-mem",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000aa",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-vm-io-write": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "write",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-io-write",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000052",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-media": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "hostmedia",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-media",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000097",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-vm-io-usage": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "usage",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-io-usage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000e9",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "ssh": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$ssh_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$ssh_ipv4$"
                },
                "-p": {
                    "description": "Port number (default: 22)",
                    "value": "$ssh_port$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ssh_timeout$"
                },
                "host": {
                    "skip_key": true,
                    "value": "$ssh_address$",
                    "order": "1"
                }
            },
            "command": "check_ssh",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ssh",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000001b",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$ssh_ipv4$",
                "check_ipv6": "$ssh_ipv6$",
                "ssh_address": "$check_address$"
            }
        },
        "pgsql": {
            "arguments": {
                "-C": {
                    "description": "SQL query value to result in critical status (double)",
                    "value": "$pgsql_query_critical$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$pgsql_hostname$"
                },
                "-P": {
                    "description": "Port number (default: 5432)",
                    "value": "$pgsql_port$"
                },
                "-W": {
                    "description": "SQL query value to result in warning status (double)",
                    "value": "$pgsql_query_warning$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$pgsql_critical$"
                },
                "-d": {
                    "description": "Database to check (default: template1)",
                    "value": "$pgsql_database$"
                },
                "-l": {
                    "description": "Login name of user",
                    "value": "$pgsql_username$"
                },
                "-o": {
                    "description": "Connection parameters (keyword = value), see below",
                    "value": "$pgsql_options$"
                },
                "-p": {
                    "description": "Password (BIG SECURITY ISSUE)",
                    "value": "$pgsql_password$"
                },
                "-q": {
                    "description": "SQL query to run. Only first column in first row will be read",
                    "value": "$pgsql_query$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$pgsql_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$pgsql_warning$"
                }
            },
            "command": "check_pgsql",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "pgsql",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000ba",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "pgsql_hostname": "$check_address$"
            }
        },
        "nscp_api": {
            "arguments": {
                "--password": {
                    "description": "NSCP API password",
                    "value": "$nscp_api_password$"
                },
                "-H": {
                    "description": "NSCP API host address",
                    "required": true,
                    "value": "$nscp_api_host$"
                },
                "-P": {
                    "description": "NSCP API host port. Defaults to 8443.",
                    "value": "$nscp_api_port$"
                },
                "-a": {
                    "description": "NSCP API Query arguments",
                    "repeat_key": true,
                    "value": "$nscp_api_arguments$"
                },
                "-q": {
                    "description": "NSCPI API Query endpoint to use",
                    "value": "$nscp_api_query$"
                }
            },
            "command": "check_nscp_api",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp_api",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000be",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "nscp_api_host": "$check_address$"
            }
        },
        "vmware-esx-soap-host-io-aborted": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "aborted",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-aborted",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000e5",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "proxysql": {
            "arguments": {
                "--critical": {
                    "description": "Critical threshold",
                    "value": "$proxysql_critical$"
                },
                "--defaults-file": {
                    "description": "ProxySQL defaults file",
                    "value": "$proxysql_defaultfile$"
                },
                "--host": {
                    "description": "ProxySQL hostname / IP (default=127.0.0.1)",
                    "value": "$proxysql_host$"
                },
                "--ignore-hostgroup": {
                    "description": "ProxySQL hostgroup(s) to ignore (only applies to '--type hg' checks, accepts comma-separated list)",
                    "value": "$proxysql_ignore_hostgroup$"
                },
                "--include-hostgroup": {
                    "description": "ProxySQL hostgroup(s) to include (only applies to '--type hg' checks, accepts comma-separated list)",
                    "value": "$proxysql_include_hostgroup$"
                },
                "--lower": {
                    "description": "Alert if ProxySQL value are LOWER than defined WARN / CRIT thresholds (only applies to 'var' check type)",
                    "value": "$proxysql_lower$"
                },
                "--name": {
                    "description": "ProxySQL variable name to check",
                    "value": "$proxysql_name$"
                },
                "--password": {
                    "description": "ProxySQL admin password (default=admin)",
                    "value": "$proxysql_password$"
                },
                "--port": {
                    "description": "ProxySQL admin port (default=6032)",
                    "value": "$proxysql_port$"
                },
                "--runtime": {
                    "description": "Force ProxySQL Nagios check to query the runtime_mysql_XXX tables rather than the mysql_XXX tables",
                    "value": "$proxysql_runtime$"
                },
                "--type": {
                    "description": "ProxySQL check type (one of conns,hg,rules,status,var)",
                    "required": true,
                    "value": "$proxysql_type$"
                },
                "--user": {
                    "description": "ProxySQL admin username (default=admin)",
                    "value": "$proxysql_user$"
                },
                "--warning": {
                    "description": "Warning threshold",
                    "value": "$proxysql_warning$"
                }
            },
            "command": "check_proxysql",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "proxysql",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000028"
        },
        "nscp-local-pagefile": {
            "arguments": {
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "-a": {
                    "description": "List of arguments (arguments gets -- prefixed automatically (--argument foo=bar is the same as setting '--foo bar')",
                    "repeat_key": true,
                    "value": "$nscp_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-pagefile",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000007e",
            "vars": {
                "nscp_boot": true,
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": [
                    "CheckSystem"
                ],
                "nscp_query": "check_pagefile",
                "nscp_showall": false
            }
        },
        "breeze": {
            "arguments": {
                "-C": {
                    "description": "SNMPv1 community (default public)",
                    "value": "$breeze_community$"
                },
                "-H": {
                    "description": "Name or IP address of host to check",
                    "required": true,
                    "value": "$breeze_hostname$"
                },
                "-c": {
                    "description": "Percentage strength below which a CRITICAL status will result",
                    "required": true,
                    "value": "$breeze_critical$"
                },
                "-w": {
                    "description": "Percentage strength below which a WARNING status will result",
                    "required": true,
                    "value": "$breeze_warning$"
                }
            },
            "command": "check_breeze",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "breeze",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000a1",
            "vars": {
                "breeze_critical": "20",
                "breeze_hostname": "$check_address$",
                "breeze_warning": "50",
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false
            }
        },
        "iostat": {
            "arguments": {
                "-c": {
                    "description": "warning threshold for tps, KB_read/s and KB_written/s",
                    "value": "$iostat_ctps$,$iostat_cread$,$iostat_cwrite$"
                },
                "-d": {
                    "description": "Device to check without path. e.g. sda",
                    "value": "$iostat_disk$"
                },
                "-w": {
                    "description": "warning threshold for tps, KB_read/s and KB_written/s",
                    "value": "$iostat_wtps$,$iostat_wread$,$iostat_wwrite$"
                }
            },
            "command": "check_iostat",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "iostat",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000004",
            "vars": {
                "iostat_cread": 200,
                "iostat_ctps": 200,
                "iostat_cwrite": 200,
                "iostat_disk": "sda",
                "iostat_wread": 100,
                "iostat_wtps": 100,
                "iostat_wwrite": 100
            }
        },
        "vmware-esx-soap-vm-runtime-gueststate": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "gueststate",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-runtime-gueststate",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000006f",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "disk_smb": {
            "arguments": {
                "-H": {
                    "description": "NetBIOS name of the server.",
                    "value": "$disk_smb_hostname$"
                },
                "-P": {
                    "description": "Port to be used to connect to. Some Windows boxes use 139, others 445 (Defaults to smbclient default if omitted).",
                    "value": "$disk_smb_port$"
                },
                "-W": {
                    "description": "Workgroup or Domain used (Defaults to 'WORKGROUP' if omitted).",
                    "value": "$disk_smb_workgroup$"
                },
                "-a": {
                    "description": "IP-address of HOST (only necessary if HOST is in another network).",
                    "value": "$disk_smb_address$"
                },
                "-c": {
                    "description": "Percent of used space at which a critical will be generated (Defaults: 95%)",
                    "value": "$disk_smb_cused$"
                },
                "-p": {
                    "description": "Password to log in to server. (Defaults to an empty password if omitted).",
                    "value": "$disk_smb_password$"
                },
                "-s": {
                    "description": "Share name to be tested.",
                    "value": "$disk_smb_share$"
                },
                "-u": {
                    "description": "Username to log in to server. (Defaults to 'guest' if omitted).",
                    "value": "$disk_smb_username$"
                },
                "-w": {
                    "description": "Percent of used space at which a warning will be generated (Default: 85%).",
                    "value": "$disk_smb_wused$"
                }
            },
            "command": "check_disk_smb",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "disk_smb",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000c3",
            "vars": {
                "disk_smb_cused": "95%",
                "disk_smb_wused": "85%"
            }
        },
        "vmware-esx-soap-vm-mem-memctl": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "mem",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "memctl",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-mem-memctl",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000e0",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "mysql_health": {
            "arguments": {
                "--blacklist": {
                    "description": "Blacklist some (missing/failed) components",
                    "value": "$mysql_health_blacklist$"
                },
                "--commit": {
                    "description": "turns on autocommit for the dbd::* module",
                    "value": "$mysql_health_commit$"
                },
                "--critical": {
                    "description": "the critical range",
                    "value": "$mysql_health_critical$"
                },
                "--criticalx": {
                    "description": "The extended critical thresholds",
                    "value": "$mysql_health_criticalx$"
                },
                "--database": {
                    "description": "the database's name",
                    "value": "$mysql_health_database$"
                },
                "--environment": {
                    "description": "Add a variable to the plugin's environment.",
                    "value": "$mysql_health_environment$"
                },
                "--extra-opts": {
                    "description": "Read command line arguments from an external file.",
                    "value": "$mysql_health_extraopts$"
                },
                "--hostname": {
                    "description": "the database server's hostname",
                    "value": "$mysql_health_hostname$"
                },
                "--isvalidtime": {
                    "description": "Signals the plugin to return OK if now is not a valid check time.",
                    "value": "$mysql_health_isvalidtime$"
                },
                "--labelformat": {
                    "description": "one of pnp4nagios (which is the default) or groundwork",
                    "value": "$mysql_health_labelformat$"
                },
                "--lookback": {
                    "description": "The amount of time you want to look back when calculating average rates.",
                    "value": "$mysql_health_lookback$"
                },
                "--method": {
                    "description": "how the plugin should connect to the database (dbi for using DBD::mysql (default), mysql for using the mysql-Tool)",
                    "value": "$mysql_health_method$"
                },
                "--mitigation": {
                    "description": "The parameter allows you to change a critical error to a warning.",
                    "value": "$mysql_health_mitigation$"
                },
                "--mode": {
                    "description": "the mode of the plugin",
                    "value": "$mysql_health_mode$"
                },
                "--morphmessage": {
                    "description": "Modify the final output message.",
                    "value": "$mysql_health_morphmessage$"
                },
                "--morphperfdata": {
                    "description": "The parameter allows you to change performance data labels.",
                    "value": "$mysql_health_morphperfdata$"
                },
                "--multiline": {
                    "description": "Multiline output.",
                    "value": "$mysql_health_multiline$"
                },
                "--name": {
                    "description": "The name of a specific component to check",
                    "value": "$mysql_health_name$"
                },
                "--name2": {
                    "description": "The secondary name of a component",
                    "value": "$mysql_health_name2$"
                },
                "--name3": {
                    "description": "The tertiary name of a component",
                    "value": "$mysql_health_name3$"
                },
                "--negate": {
                    "description": "Emulate the negate plugin. --negate warning=critical --negate unknown=critical.",
                    "value": "$mysql_health_negate$"
                },
                "--nooffline": {
                    "description": "skip the offline databases",
                    "value": "$mysql_health_nooffline$"
                },
                "--notemp": {
                    "description": "Ignore temporary databases/tablespaces",
                    "value": "$mysql_health_notemp$"
                },
                "--password": {
                    "description": "the mysql db user's password",
                    "value": "$mysql_health_password$"
                },
                "--port": {
                    "description": "the database's port",
                    "value": "$mysql_health_port$"
                },
                "--regexp": {
                    "description": " Parameter name/name2/name3 will be interpreted as (perl) regular expression.",
                    "value": "$mysql_health_regexp$"
                },
                "--report": {
                    "description": "Can be used to shorten the output.",
                    "value": "$mysql_health_report$"
                },
                "--selectedperfdata": {
                    "description": "The parameter allows you to limit the list of performance data.",
                    "value": "$mysql_health_selectedperfdata$"
                },
                "--socket": {
                    "description": "the database's unix socket",
                    "value": "$mysql_health_socket$"
                },
                "--statefilesdir": {
                    "description": "An alternate directory where the plugin can save files.",
                    "value": "$mysql_health_statefilesdir$"
                },
                "--timeout": {
                    "description": "plugin timeout. Default is 60 seconds",
                    "value": "$mysql_health_timeout$"
                },
                "--units": {
                    "description": "This is used for a better output of mode=sql and for specifying thresholds for mode=tablespace-free",
                    "value": "$mysql_health_units$"
                },
                "--username": {
                    "description": "the mysql db user",
                    "value": "$mysql_health_username$"
                },
                "--warning": {
                    "description": "the warning range",
                    "value": "$mysql_health_warning$"
                },
                "--warningx": {
                    "description": "The extended warning thresholds",
                    "value": "$mysql_health_warningx$"
                },
                "--with-mymodules-dyn-dir": {
                    "description": "Add-on modules for the my-modes will be searched in this directory.",
                    "value": "$mysql_health_withmymodulesdyndir$"
                }
            },
            "command": "check_mysql_health",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "mysql_health",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000ea",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "mysql_health_hostname": "$check_address$"
            }
        },
        "lsi-raid": {
            "arguments": {
                "--nocleanlogs": {
                    "description": "Do not clean up the log files after executing storcli checks.",
                    "set_if": "$lsi_nocleanlogs$"
                },
                "--noenclosures": {
                    "description": "Define if enclosures are present.",
                    "set_if": "$lsi_noenclosures$"
                },
                "--nosudo": {
                    "description": "Do not use sudo when running storcli.",
                    "set_if": "$lsi_nosudo$"
                },
                "-BBUTc": {
                    "description": "Battery critical temperature.",
                    "value": "$lsi_bbu_temp_critical$"
                },
                "-BBUTw": {
                    "description": "Battery warning temperature.",
                    "value": "$lsi_bbu_temp_warning$"
                },
                "-C": {
                    "description": "Insert the controller number to be checked.",
                    "value": "$lsi_controller_number$"
                },
                "-CVTc": {
                    "description": "CacheVault critical temperature.",
                    "value": "$lsi_cv_temp_critical$"
                },
                "-CVTw": {
                    "description": "CacheVault warning temperature.",
                    "value": "$lsi_cv_temp_warning$"
                },
                "-EID": {
                    "description": "Enclosure numbers to be checked, comma-separated.",
                    "value": "$lsi_enclosure_id$"
                },
                "-Ib": {
                    "description": "Warning threshold for BBM counter.",
                    "value": "$lsi_ignored_bbm_counters$"
                },
                "-Im": {
                    "description": "Warning threshold for media errors.",
                    "value": "$lsi_ignored_media_errors$"
                },
                "-Io": {
                    "description": "Warning threshold for other errors.",
                    "value": "$lsi_ignored_other_errors$"
                },
                "-Ip": {
                    "description": "Warning threshold for predictive failures.",
                    "value": "$lsi_ignored_predictive_fails$"
                },
                "-Is": {
                    "description": "Warning threshold for shield counter.",
                    "value": "$lsi_ignored_shield_counters$"
                },
                "-LD": {
                    "description": "Logical devices to be checked, comma-separated.",
                    "value": "$lsi_ld_id$"
                },
                "-PD": {
                    "description": "Physical devices to be checked, comma-separated.",
                    "value": "$lsi_pd_id$"
                },
                "-PDTc": {
                    "description": "Disk critical temperature.",
                    "value": "$lsi_pd_temp_critical$"
                },
                "-PDTw": {
                    "description": "Disk warning temperature.",
                    "value": "$lsi_pd_temp_warning$"
                },
                "-Tc": {
                    "description": "RAID controller critical temperature.",
                    "value": "$lsi_temp_critical$"
                },
                "-Tw": {
                    "description": "RAID controller warning temperature.",
                    "value": "$lsi_temp_warning$"
                },
                "-b": {
                    "description": "Define if BBU is present and it's state should be checked.",
                    "value": "$lsi_bbu$"
                },
                "-p": {
                    "description": "Insert the path to storcli (e.g. /usr/sbin/storcli).",
                    "value": "$storcli_path$"
                }
            },
            "command": "check_lsi_raid",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "lsi-raid",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000d9"
        },
        "vmware-esx-soap-host-mem-usage": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "mem",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "usage",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-mem-usage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000ce",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_crit": "90%",
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90",
                "vmware_warn": "80%"
            }
        },
        "vmware-esx-soap-host-uptime": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "uptime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-uptime",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000082",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-vm-runtime": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-runtime",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000d5",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "icinga": {
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "icinga",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000011",
            "vars": {
                "icinga_min_version": ""
            }
        },
        "nscp-local-counter": {
            "arguments": {
                "--counter": {
                    "repeat_key": true,
                    "value": "$nscp_counter_name$"
                },
                "--critical": "value $nscp_counter_op$ $nscp_counter_critical$",
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--perf-syntax": "$nscp_counter_perfsyntax$",
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "--warning": "value $nscp_counter_op$ $nscp_counter_warning$",
                "-a": {
                    "repeat_key": true,
                    "value": "$nscp_counter_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-counter",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000005a",
            "vars": {
                "nscp_boot": true,
                "nscp_counter_less": false,
                "nscp_counter_op": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "nscp_counter_perfsyntax": "$nscp_counter_name$",
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": [
                    "CheckSystem"
                ],
                "nscp_query": "check_pdh",
                "nscp_showall": "$nscp_counter_showall$"
            }
        },
        "nscp-local-version": {
            "arguments": {
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "-a": {
                    "description": "List of arguments (arguments gets -- prefixed automatically (--argument foo=bar is the same as setting '--foo bar')",
                    "repeat_key": true,
                    "value": "$nscp_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-version",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000060",
            "vars": {
                "nscp_boot": true,
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": [
                    "CheckHelpers"
                ],
                "nscp_query": "check_version",
                "nscp_showall": false
            }
        },
        "graphite": {
            "arguments": {
                "-M": {
                    "description": "Text message to output (default: 'metric count:')",
                    "value": "$graphite_message$"
                },
                "-U": {
                    "description": "Adds a text tag to the metric count in the plugin output. Useful to identify the metric units. Doesn't affect data queries.",
                    "value": "$graphite_units$"
                },
                "-c": {
                    "description": "Critical threshold",
                    "required": true,
                    "value": "$graphite_critical$"
                },
                "-d": {
                    "description": "Length, in minute of data to parse (default: 5)",
                    "value": "$graphite_duration$"
                },
                "-f": {
                    "description": "Function applied to metrics for thresholds (default: average)",
                    "value": "$graphite_function$"
                },
                "-l": {
                    "description": "Add a link in the plugin output, showing a 24h graph for this metric in graphite.",
                    "set_if": "$graphite_link_graph$"
                },
                "-m": {
                    "description": "Metric path string",
                    "required": true,
                    "value": "$graphite_metric$"
                },
                "-s": {
                    "description": "Metric short name (used for performance data)",
                    "value": "$graphite_shortname$"
                },
                "-u": {
                    "description": "Target url",
                    "required": true,
                    "value": "$graphite_url$"
                },
                "-w": {
                    "description": "Warning threshold",
                    "required": true,
                    "value": "$graphite_warning$"
                },
                "-z": {
                    "description": "Return 0 on a graphite 500 error",
                    "set_if": "$graphite_zero_on_error$"
                }
            },
            "command": "check_graphite",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "graphite",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000001a",
            "vars": {
                "graphite_duration": "5",
                "graphite_function": "average",
                "graphite_link_graph": false,
                "graphite_message": "metric count:",
                "graphite_zero_on_error": false
            }
        },
        "vmware-esx-dc-runtime-listhost": {
            "arguments": {
                "--alertonly": {
                    "set_if": "$vmware_alertonly$"
                },
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--cluster": {
                    "description": "ESX or ESXi clustername.",
                    "required": false,
                    "value": "$vmware_cluster$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": true,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "listhost",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-dc-runtime-listhost",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000005c",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "hostalive6": {
            "arguments": {
                "-H": {
                    "description": "host to ping",
                    "value": "$ping_address$"
                },
                "-c": {
                    "description": "critical threshold pair",
                    "value": "$ping_crta$,$ping_cpl$%"
                },
                "-p": {
                    "description": "number of ICMP ECHO packets to send (Default: 5)",
                    "value": "$ping_packets$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ping_timeout$"
                },
                "-w": {
                    "description": "warning threshold pair",
                    "value": "$ping_wrta$,$ping_wpl$%"
                }
            },
            "command": "check_ping -6",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "hostalive6",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000065",
            "vars": {
                "ping_address": "$address6$",
                "ping_cpl": 100,
                "ping_crta": 5000,
                "ping_wpl": 80,
                "ping_wrta": 3000
            }
        },
        "nscp-local-disk": {
            "arguments": {
                "--critical": "$nscp_disk_op$ $nscp_disk_critical$",
                "--drive": {
                    "repeat_key": true,
                    "value": "$nscp_disk_drive$"
                },
                "--exclude": {
                    "repeat_key": true,
                    "value": "$nscp_disk_exclude$"
                },
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "--warning": "$nscp_disk_op$ $nscp_disk_warning$",
                "-a": {
                    "repeat_key": true,
                    "value": "$nscp_disk_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-disk",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000055",
            "vars": {
                "nscp_boot": true,
                "nscp_disk_critical": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "nscp_disk_free": false,
                "nscp_disk_op": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "nscp_disk_showall": true,
                "nscp_disk_warning": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": [
                    "CheckDisk"
                ],
                "nscp_query": "check_drivesize",
                "nscp_showall": "$nscp_disk_showall$"
            }
        },
        "cloudera_service_status": {
            "arguments": {
                "-H": {
                    "description": "host",
                    "required": true,
                    "value": "$cloudera_host$"
                },
                "-P": {
                    "description": "port",
                    "required": false,
                    "value": "$cloudera_port$"
                },
                "-c": {
                    "description": "cluster",
                    "required": true,
                    "value": "$cloudera_cluster$"
                },
                "-k": {
                    "description": "verify_ssl",
                    "required": false,
                    "value": "$cloudera_verify_ssl$"
                },
                "-p": {
                    "description": "pass",
                    "required": true,
                    "value": "$cloudera_pass$"
                },
                "-s": {
                    "description": "service",
                    "required": true,
                    "value": "$cloudera_service$"
                },
                "-u": {
                    "description": "user",
                    "required": true,
                    "value": "$cloudera_user$"
                },
                "-v": {
                    "description": "api_version",
                    "required": true,
                    "value": "$cloudera_api_version$"
                }
            },
            "command": "check_cloudera_service_status.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "cloudera_service_status",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000016"
        },
        "vmware-esx-soap-vm-io-read": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "read",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-io-read",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000010",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "rpc": {
            "arguments": {
                "-C": {
                    "description": "Programm name (or number)",
                    "required": true,
                    "value": "$rpc_command$"
                },
                "-H": {
                    "description": "RPC host address",
                    "required": true,
                    "value": "$rpc_address$"
                },
                "-c": {
                    "description": "The version to check",
                    "value": "$rpc_version$"
                },
                "-p": {
                    "description": "RPC port",
                    "value": "$rpc_port$"
                },
                "-t": {
                    "description": "Test TCP",
                    "set_if": "$rpc_tcp$"
                },
                "-u": {
                    "description": "Test UDP",
                    "set_if": "$rpc_udp$"
                },
                "-v": {
                    "description": "Show verbose details",
                    "set_if": "$rpc_verbose$"
                }
            },
            "command": "check_rpc",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "rpc",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000045",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "rpc_address": "$check_address$"
            }
        },
        "printer_health": {
            "arguments": {
                "--authpassword": {
                    "description": "The authentication password for SNMPv3",
                    "value": "$printer_health_authpassword$"
                },
                "--authprotocol": {
                    "description": "The authentication protocol for SNMPv3 (md5|sha)",
                    "value": "$printer_health_authprotocol$"
                },
                "--blacklist": {
                    "description": "Blacklist some (missing/failed) components",
                    "value": "$printer_health_blacklist$"
                },
                "--community": {
                    "description": "SNMP community of the server (SNMP v1/2 only)",
                    "value": "$printer_health_community$"
                },
                "--community2": {
                    "description": "SNMP community which can be used to switch the context during runtime",
                    "value": "$printer_health_community2$"
                },
                "--contextengineid": {
                    "description": "The context engine id for SNMPv3 (10 to 64 hex characters)",
                    "value": "$printer_health_contextengineid$"
                },
                "--contextname": {
                    "description": "The context name for SNMPv3 (empty represents the default context)",
                    "value": "$printer_health_contextname$"
                },
                "--critical": {
                    "description": "The critical threshold",
                    "value": "$printer_health_critical$"
                },
                "--criticalx": {
                    "description": "The extended critical thresholds",
                    "value": "$printer_health_criticalx$"
                },
                "--domain": {
                    "description": "The transport domain to use (default: udp/ipv4, other possible values: udp6, udp/ipv6, tcp, tcp4, tcp/ipv4, tcp6, tcp/ipv6)",
                    "value": "$printer_health_domain$"
                },
                "--hostname": {
                    "description": "Hostname or IP-address of the switch or router",
                    "value": "$printer_health_hostname$"
                },
                "--lookback": {
                    "description": "The amount of time you want to look back when calculating average rates. Use it for mode interface-errors or interface-usage. Without --lookback the time between two runs of check_printer_health is the base for calculations. If you want your checkresult to be based for example on the past hour, use --lookback 3600.",
                    "value": "$printer_health_lookback$"
                },
                "--mitigation": {
                    "description": "The parameter allows you to change a critical error to a warning.",
                    "value": "$printer_health_mitigation$"
                },
                "--mode": {
                    "description": "Which mode should be executed. Available modes: hardware-health, supplies-status and uptime.",
                    "value": "$printer_health_mode$"
                },
                "--morphperfdata": {
                    "description": "The parameter allows you to change performance data labels. It's a perl regexp and a substitution. --morphperfdata '(.*)ISATAP(.*)'='$1patasi$2'",
                    "value": "$printer_health_morphperfdata$"
                },
                "--multiline": {
                    "description": "Multiline output",
                    "set_if": "$printer_health_multiline$"
                },
                "--name": {
                    "description": "The name of an interface (ifDescr)",
                    "value": "$printer_health_name$"
                },
                "--name2": {
                    "description": "The secondary name of a component",
                    "value": "$printer_health_name2$"
                },
                "--name3": {
                    "description": "The teritary name of a component",
                    "value": "$printer_health_name3$"
                },
                "--negate": {
                    "description": "The parameter allows you to map exit levels, such as warning=critical",
                    "value": "$printer_health_negate$"
                },
                "--offline": {
                    "description": "The maximum number of seconds since the last update of cache file before it is considered too old",
                    "value": "$printer_health_offline$"
                },
                "--oids": {
                    "description": "A list of oids which are downloaded and written to a cache file. Use it together with --mode oidcache",
                    "value": "$printer_health_oids$"
                },
                "--port": {
                    "description": "The SNMP port to use (default: 161)",
                    "value": "$printer_health_port$"
                },
                "--privpassword": {
                    "description": "The password for authPriv security level",
                    "value": "$printer_health_privpassword$"
                },
                "--privprotocol": {
                    "description": "The private protocol for SNMPv3 (des|aes|aes128|3des|3desde)",
                    "value": "$printer_health_privprotocol$"
                },
                "--protocol": {
                    "description": "The SNMP protocol to use (default: 2c, other possibilities: 1,3)",
                    "value": "$printer_health_protocol$"
                },
                "--regexp": {
                    "description": "A flag indicating that --name is a regular expression",
                    "set_if": "$printer_health_regexp$"
                },
                "--report": {
                    "description": "Can be used to shorten the output.",
                    "value": "$printer_health_report$"
                },
                "--selectedperfdata": {
                    "description": "The parameter allows you to limit the list of performance data. It's a perl regexp. Only matching perfdata show up in the output.",
                    "value": "$printer_health_selectedperfdata$"
                },
                "--servertype": {
                    "description": "The type of the network device: cisco (default). Use it if auto-detection is not possible",
                    "value": "$printer_health_servertype$"
                },
                "--statefilesdir": {
                    "description": "An alternate directory where the plugin can save files",
                    "value": "$printer_health_statefilesdir$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 15)",
                    "value": "$printer_health_timeout$"
                },
                "--units": {
                    "description": "One of %, B, KB, MB, GB, Bit, KBi, MBi, GBi. (used for e.g. mode interface-usage)",
                    "value": "$printer_health_units$"
                },
                "--username": {
                    "description": "The securityName for the USM security model (SNMPv3 only)",
                    "value": "$printer_health_username$"
                },
                "--warning": {
                    "description": "The warning threshold",
                    "value": "$printer_health_warning$"
                },
                "--warningx": {
                    "description": "The extended warning thresholds",
                    "value": "$printer_health_warningx$"
                },
                "--with-mymodules-dyn-dir": {
                    "description": "A directory where own extensions can be found",
                    "value": "$printer_health_mymodules-dyn-dir$"
                }
            },
            "command": "check_printer_health",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "printer_health",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000e2",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "printer_health_hostname": "$check_address$",
                "printer_health_mode": "supplies-status"
            }
        },
        "hpasm": {
            "arguments": {
                "--authpassword": {
                    "description": "The authentication password for SNMPv3",
                    "value": "$hpasm_authpassword$"
                },
                "--authprotocol": {
                    "description": "The authentication protocol for SNMPv3 (md5|sha)",
                    "value": "$hpasm_authprotocol$"
                },
                "--blacklist": {
                    "description": "Blacklist some (missing/failed) components",
                    "value": "$hpasm_blacklist$"
                },
                "--community": {
                    "description": "SNMP community of the server (SNMP v1/2 only)",
                    "value": "$hpasm_community$"
                },
                "--customthresholds": {
                    "description": "Use custom thresholds for certain temperatures",
                    "value": "$hpasm_customthresholds$"
                },
                "--eval-nics": {
                    "description": "Check network interfaces (and groups). Try it and report me whyt you think about it. I need to build up some know how on this subject. If get an error and you think, it is not justified for your configuration, please tell me about it. (alwasy send the output of \"snmpwalk -On .... 1.3.6.1.4.1.232\" and a description how you setup your nics and why it is correct opposed to the plugins error message",
                    "set_if": "$hpasm_eval-nics$"
                },
                "--eventrange": {
                    "description": "Period of time before critical IML events respecively become warnings or vanish. A range is descibed as a number and a unit (s, m, h, d), e.g. --eventrange 1h/20m.",
                    "value": "$hpasm_eventrange$"
                },
                "--hostname": {
                    "description": "Hostname or IP-address of the server (SNMP mode only)",
                    "set_if": "$hpasm_remote$",
                    "value": "$hpasm_hostname$"
                },
                "--ignore-dimms": {
                    "description": "Ignore \"N/A\"-DIMM status on misc. servers (e.g. older DL320)",
                    "set_if": "$hpasm_ignore-dimms$"
                },
                "--ignore-fan-redundancy": {
                    "description": "Ignore missing redundancy partners",
                    "set_if": "$hpasm_ignore-fan-redundancy$"
                },
                "--perfdata": {
                    "description": "Output performance data. If your performance data string becomes too long and is truncated by Nagios, then you can use --perfdata=short instead. This will output temperature tags without location information",
                    "value": "$hpasm_perfdata$"
                },
                "--port": {
                    "description": "The SNMP port to use (default: 161)",
                    "value": "$hpasm_port$"
                },
                "--privpassword": {
                    "description": "The password for authPriv security level",
                    "value": "$hpasm_privpassword$"
                },
                "--privprotocol": {
                    "description": "The private protocol for SNMPv3 (des|aes|aes128|3des|3desde)",
                    "value": "$hpasm_privprotocol$"
                },
                "--protocol": {
                    "description": "The SNMP protocol to use (default: 2c, other possibilities: 1,3)",
                    "value": "$hpasm_protocol$"
                },
                "--servertype": {
                    "description": "The type of the server: proliant (default) or bladesystem",
                    "value": "$hpasm_servertype$"
                },
                "--username": {
                    "description": "The securityName for the USM security model (SNMPv3 only)",
                    "value": "$hpasm_username$"
                }
            },
            "command": "check_hpasm",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "hpasm",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000d7",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "hpasm_hostname": "$check_address$",
                "hpasm_remote": true
            }
        },
        "elasticsearch": {
            "arguments": {
                "--failure-domain": {
                    "description": "A comma-separated list of ElasticSearch attributes that make up your cluster's failure domain",
                    "value": "$elasticsearch_failuredomain$"
                },
                "--host": {
                    "description": "Hostname or network address to probe, defaults to 'localhost'",
                    "value": "$elasticsearch_host$"
                },
                "--master-nodes": {
                    "description": "Issue a warning if the number of master-eligible nodes in the cluster drops below this number. By default, do not monitor the number of nodes in the cluster",
                    "value": "$elasticsearch_masternodes$"
                },
                "--port": {
                    "description": "TCP port to probe, defaults to 9200",
                    "value": "$elasticsearch_port$"
                },
                "--prefix": {
                    "description": "Optional prefix for the ElasticSearch API, defaults to ''",
                    "value": "$elasticsearch_prefix$"
                },
                "--yellow-critical": {
                    "description": "Instead of issuing a 'warning' for a yellow cluster state, issue a 'critical' alert",
                    "set_if": "$elasticsearch_yellowcritical$",
                    "value": "TRUE"
                }
            },
            "command": "check_elasticsearch",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "elasticsearch",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000023",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "elasticsearch_host": "$check_address$",
                "elasticsearch_yellowcritical": false
            }
        },
        "sar-perf": {
            "arguments": {
                "sar_perf_disk": {
                    "description": "Disk name for the 'disk' profile",
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression",
                    "skip_key": true,
                    "value": "$sar_perf_disk$"
                },
                "sar_perf_profile": {
                    "description": "Define the run profile: pagestat, cpu, memory_util, memory_stat, io_transfer, queueln_load, swap_util, swap_stat, task, kernel, disk <disk>. Can be a string or an array of multiple profiles.",
                    "repeat_key": false,
                    "required": true,
                    "skip_key": true,
                    "value": "$sar_perf_profile$"
                }
            },
            "command": "check_sar_perf.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "sar-perf",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000006d"
        },
        "vmware-esx-soap-host-io-resets": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "resets",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-resets",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000c7",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-runtime-temp": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "temp",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-runtime-temp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000002e",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "ntp_peer": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$ntp_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$ntp_ipv4$"
                },
                "-C": {
                    "description": "Critical threshold for stratum of server's synchronization peer",
                    "value": "$ntp_cstratum$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$ntp_address$"
                },
                "-W": {
                    "description": "Warning threshold for stratum of server's synchronization peer",
                    "value": "$ntp_wstratum$"
                },
                "-c": {
                    "description": "Offset to result in critical status (seconds)",
                    "value": "$ntp_critical$"
                },
                "-j": {
                    "description": "Warning threshold for jitter",
                    "value": "$ntp_wjitter$"
                },
                "-k": {
                    "description": "Critical threshold for jitter",
                    "value": "$ntp_cjitter$"
                },
                "-m": {
                    "description": "Warning threshold for number of usable time sources (truechimers)",
                    "value": "$ntp_wsource$"
                },
                "-n": {
                    "description": "Critical threshold for number of usable time sources (truechimers)",
                    "value": "$ntp_csource$"
                },
                "-p": {
                    "description": "Port number (default: 123)",
                    "value": "$ntp_port$"
                },
                "-q": {
                    "description": "Returns UNKNOWN instead of CRITICAL or WARNING if server isn't synchronized",
                    "set_if": "$ntp_quiet$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ntp_timeout$"
                },
                "-w": {
                    "description": "Offset to result in warning status (seconds)",
                    "value": "$ntp_warning$"
                }
            },
            "command": "check_ntp_peer",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ntp_peer",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000007f",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$ntp_ipv4$",
                "check_ipv6": "$ntp_ipv6$",
                "ntp_address": "$check_address$"
            }
        },
        "nscp-local-uptime": {
            "arguments": {
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "-a": {
                    "description": "List of arguments (arguments gets -- prefixed automatically (--argument foo=bar is the same as setting '--foo bar')",
                    "repeat_key": true,
                    "value": "$nscp_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-uptime",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000005f",
            "vars": {
                "nscp_boot": true,
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": [
                    "CheckSystem"
                ],
                "nscp_query": "check_uptime",
                "nscp_showall": false
            }
        },
        "vmware-esx-soap-vm-net": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "net",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-net",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000c9",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-io-usage": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "usage",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-usage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000e8",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "ping4-windows": {
            "arguments": {
                "-H": {
                    "description": "Address to ping",
                    "required": true,
                    "value": "$ping_win_address$"
                },
                "-c": {
                    "description": "Warning threshold: RTA and package loss seperated by comma",
                    "value": "$ping_win_crta$,$ping_win_cpl$%"
                },
                "-p": {
                    "description": "Number of packages to send",
                    "value": "$ping_win_packets$"
                },
                "-t": {
                    "description": "Timeout in ms",
                    "value": "$ping_win_timeout$"
                },
                "-w": {
                    "description": "Warning threshold: RTA and package loss seperated by comma",
                    "value": "$ping_win_wrta$,$ping_win_wpl$%"
                }
            },
            "command": "check_ping.exe -4",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ping4-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000099",
            "vars": {
                "ping_win_address": "$address$",
                "ping_win_packets": "5",
                "ping_win_timeout": "1000"
            }
        },
        "vmware-esx-soap-host-storage": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "storage",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-storage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000a7",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "squid": {
            "arguments": {
                "--critical": {
                    "description": "Critical threshold. See http://nagiosplug.sourceforge.net/developer-guidelines.html#THRESHOLDFORMAT for the threshold format.",
                    "value": "$squid_critical$"
                },
                "--data": {
                    "description": "Optional data to fetch (default: Connections)    available data : Connections Cache Resources Memory FileDescriptors",
                    "value": "$squid_data$"
                },
                "--host": {
                    "description": "Name of the proxy to check (default: localhost)",
                    "value": "$squid_hostname$"
                },
                "--password": {
                    "description": "WWW password",
                    "value": "$squid_password$"
                },
                "--port": {
                    "description": "Optional port number (default: 3128)",
                    "value": "$squid_port$"
                },
                "--squidclient": {
                    "description": "Path of squidclient (default: /usr/bin/squidclient)",
                    "value": "$squid_client$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 15)",
                    "value": "$squid_timeout$"
                },
                "--user": {
                    "description": "WWW user",
                    "value": "$squid_user$"
                },
                "--warning": {
                    "description": "Warning threshold. See http://nagiosplug.sourceforge.net/developer-guidelines.html#THRESHOLDFORMAT for the threshold format.",
                    "value": "$squid_warning$"
                }
            },
            "command": "check_squid",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "squid",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000048",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "squid_client": "/usr/bin/squidclient",
                "squid_hostname": "$check_address$"
            }
        },
        "rbl": {
            "arguments": {
                "-H": {
                    "description": "Name or IP address of SMTP server to check.",
                    "value": "$rbl_hostname$"
                },
                "-c": {
                    "description": "Number of blacklisting servers for a critical.",
                    "value": "$rbl_critical$"
                },
                "-s": {
                    "description": "List of RBL servers as an array.",
                    "repeat_key": true,
                    "required": true,
                    "value": "$rbl_server$"
                },
                "-t": {
                    "description": "Seconds before plugin times out (default: 15).",
                    "value": "$rbl_timeout$"
                },
                "-w": {
                    "description": "Number of blacklisting servers for a warning.",
                    "value": "$rbl_warning$"
                }
            },
            "command": "check_rbl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "rbl",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000e6",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "rbl_critical": 1,
                "rbl_hostname": "$check_address$",
                "rbl_timeout": 15,
                "rbl_warning": 1
            }
        },
        "adaptec-raid": {
            "arguments": {
                "-C": {
                    "description": "Insert the controller number to be checked.",
                    "required": true,
                    "value": "$adaptec_controller_number$"
                },
                "-p": {
                    "description": "Insert the path to arcconf (e.g. /sbin/arcconf).",
                    "required": true,
                    "value": "$arcconf_path$"
                }
            },
            "command": "check_adaptec_raid",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "adaptec-raid",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000070",
            "vars": {
                "arcconf_path": "/sbin/arcconf"
            }
        },
        "uptime-windows": {
            "arguments": {
                "-c": {
                    "description": "Critical threshold",
                    "value": "$uptime_win_crit$"
                },
                "-u": {
                    "description": "Time unit to use",
                    "value": "$uptime_win_unit$"
                },
                "-w": {
                    "description": "Warning threshold",
                    "value": "$uptime_win_warn$"
                }
            },
            "command": "check_uptime.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "uptime-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000b7",
            "vars": {
                "uptime_win_unit": "s"
            }
        },
        "udp": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$udp_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$udp_ipv4$"
                },
                "-e": {
                    "description": " String to expect in server response",
                    "required": true,
                    "value": "$udp_expect$"
                },
                "-q": {
                    "description": "String to send server to initiate a clean close of the connection",
                    "value": "$udp_quit$"
                },
                "-s": {
                    "description": "String to send to the server",
                    "required": true,
                    "value": "$udp_send$"
                }
            },
            "command": "check_udp -H $udp_address$ -p $udp_port$",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "udp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000063",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$udp_ipv4$",
                "check_ipv6": "$udp_ipv6$",
                "udp_address": "$check_address$"
            }
        },
        "vmware-esx-soap-vm-runtime-con": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "con",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-runtime-con",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000b6",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "hddtemp": {
            "arguments": {
                "--critical": {
                    "description": "critical temperature",
                    "required": true,
                    "value": "$hddtemp_critical$"
                },
                "--devices": {
                    "description": "comma separated devices list, or empty for all devices in hddtemp response",
                    "value": "$hddtemp_devices$"
                },
                "--performance-data": {
                    "description": "return performance data",
                    "set_if": "$hddtemp_performance$"
                },
                "--port": {
                    "description": "port number",
                    "value": "$hddtemp_port$"
                },
                "--quiet": {
                    "description": "be quiet",
                    "set_if": "$hddtemp_quiet$"
                },
                "--separator": {
                    "description": "hddtemp separator",
                    "value": "$hddtemp_separator$"
                },
                "--server": {
                    "description": "server name or address",
                    "required": true,
                    "value": "$hddtemp_server$"
                },
                "--timeout": {
                    "description": "receiving data from hddtemp operation network timeout",
                    "value": "$hddtemp_timeout$"
                },
                "--warning": {
                    "description": "warning temperature",
                    "required": true,
                    "value": "$hddtemp_warning$"
                }
            },
            "command": "check_hddtemp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "hddtemp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000098",
            "vars": {
                "hddtemp_critical": 60,
                "hddtemp_performance": true,
                "hddtemp_server": "127.0.0.1",
                "hddtemp_timeout": 5,
                "hddtemp_warning": 55
            }
        },
        "ping6": {
            "arguments": {
                "-H": {
                    "description": "host to ping",
                    "value": "$ping_address$"
                },
                "-c": {
                    "description": "critical threshold pair",
                    "value": "$ping_crta$,$ping_cpl$%"
                },
                "-p": {
                    "description": "number of ICMP ECHO packets to send (Default: 5)",
                    "value": "$ping_packets$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ping_timeout$"
                },
                "-w": {
                    "description": "warning threshold pair",
                    "value": "$ping_wrta$,$ping_wpl$%"
                }
            },
            "command": "check_ping -6",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ping6",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000a9",
            "vars": {
                "ping_address": "$address6$",
                "ping_cpl": 15,
                "ping_crta": 200,
                "ping_wpl": 5,
                "ping_wrta": 100
            }
        },
        "vmware-esx-soap-host-net-usage": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "net",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "usage",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-net-usage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000057",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "icingacli-businessprocess": {
            "arguments": {
                "--config": {
                    "description": "Configuration file containing your business process without file extension",
                    "value": "$icingacli_businessprocess_config$"
                },
                "--details": {
                    "description": "Get details for root cause analysis",
                    "set_if": "$icingacli_businessprocess_details$"
                },
                "--process": {
                    "description": "Business process to monitor",
                    "required": true,
                    "skip_key": true,
                    "value": "$icingacli_businessprocess_process$",
                    "order": "-1"
                },
                "--state-type": {
                    "description": "Define which state type to look at. Could be either soft or hard, overrides an eventually configured default",
                    "value": "$icingacli_businessprocess_statetype$"
                }
            },
            "command": "/usr/bin/icingacli businessprocess process check",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "icingacli-businessprocess",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000005e",
            "vars": {
                "icingacli_businessprocess_details": false
            }
        },
        "vmware-esx-soap-host-runtime-health-nostoragestatus": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--nostoragestatus": {},
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "health",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-runtime-health-nostoragestatus",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000096",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "interfaces": {
            "arguments": {
                "--aliases": {
                    "description": "Retrieves the interface description.",
                    "set_if": "$interfaces_aliases$"
                },
                "--auth-phrase": {
                    "description": "SNMPv3 Auth Phrase",
                    "value": "$interfaces_auth_phrase$"
                },
                "--auth-proto": {
                    "description": "SNMPv3 Auth Protocol (SHA|MD5)",
                    "value": "$interfaces_auth_proto$"
                },
                "--bandwidth": {
                    "description": "Bandwidth warn level in percent.",
                    "value": "$interfaces_bandwidth$"
                },
                "--community": {
                    "description": "The community string (default public).",
                    "value": "$interfaces_community$"
                },
                "--down-is-ok": {
                    "description": "Disables critical alerts for down interfaces.",
                    "set_if": "$interfaces_down_is_ok$"
                },
                "--errors": {
                    "description": "Number of in errors (CRC errors for cisco) to consider a warning (default 50).",
                    "value": "$interfaces_errors$"
                },
                "--exclude-regex": {
                    "description": "Interface list negative regexp.",
                    "value": "$interfaces_exclude_regex$"
                },
                "--hostname": "$interfaces_address$",
                "--if-names": {
                    "description": "Use ifName instead of ifDescr.",
                    "set_if": "$interfaces_names$"
                },
                "--lastcheck": {
                    "description": "Last checktime (unixtime).",
                    "value": "$interfaces_lastcheck$"
                },
                "--match-aliases": {
                    "description": "Also match against aliases (Option --aliases automatically enabled).",
                    "set_if": "$interfaces_match_aliases$"
                },
                "--mode": {
                    "description": "Special operating mode (default,cisco,nonbulk,bintec).",
                    "value": "$interfaces_mode$"
                },
                "--out-errors": {
                    "description": "Number of out errors (collisions for cisco) to consider a warning (default same as in errors).",
                    "value": "$interface_out_errors$"
                },
                "--perfdata": "$interfaces_perfdata$",
                "--prefix": {
                    "description": "Prefix interface names with this label.",
                    "value": "$interfaces_prefix$"
                },
                "--priv-phrase": {
                    "description": "SNMPv3 Privacy Phrase",
                    "value": "$interfaces_priv_phrase$"
                },
                "--priv-proto": {
                    "description": "SNMPv3 Privacy Protocol (AES|DES)",
                    "value": "$interfaces_priv_proto$"
                },
                "--regex": {
                    "description": "Interface list regexp.",
                    "value": "$interfaces_regex$"
                },
                "--sleep": {
                    "description": "Sleep between every SNMP query (in ms).",
                    "value": "$interfaces_sleep$"
                },
                "--speed": {
                    "description": "Override speed detection with this value (bits per sec).",
                    "value": "$interfaces_speed$"
                },
                "--timeout": {
                    "description": "Sets the SNMP timeout (in ms).",
                    "value": "$interfaces_timeout$"
                },
                "--trim": {
                    "description": "Cut this number of characters from the start of interface descriptions.",
                    "value": "$interfaces_trim$"
                },
                "--user": {
                    "description": "SNMPv3 User",
                    "value": "$interfaces_user$"
                }
            },
            "command": "check_interfaces",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "interfaces",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000006e",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "interfaces_address": "$check_address$",
                "interfaces_aliases": false,
                "interfaces_down_is_ok": false,
                "interfaces_match_aliases": false
            }
        },
        "vmware-esx-soap-host-runtime": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-runtime",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000072",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "apt": {
            "arguments": {
                "--critical": {
                    "description": "If the full package information of any of the upgradable packages match this REGEXP, the plugin will return CRITICAL status. Can be specified multiple times.",
                    "value": "$apt_critical$"
                },
                "--dist-upgrade": {
                    "description": "Perform a dist-upgrade instead of normal upgrade. Like with -U OPTS can be provided to override the default options.",
                    "value": "$apt_dist_upgrade$"
                },
                "--exclude": {
                    "description": "Exclude packages matching REGEXP from the list of packages that would otherwise be included. Can be specified multiple times.",
                    "value": "$apt_exclude$"
                },
                "--extra-opts": {
                    "description": "Read options from an ini file.",
                    "value": "$apt_extra_opts$"
                },
                "--include": {
                    "description": "Include only packages matching REGEXP. Can be specified multiple times the values will be combined together.",
                    "value": "$apt_include$"
                },
                "--list": {
                    "description": "List packages available for upgrade.",
                    "set_if": "$apt_list$"
                },
                "--only-critical": {
                    "description": "Only warn about critical upgrades.",
                    "set_if": "$apt_only_critical$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 10).",
                    "value": "$apt_timeout$"
                },
                "--upgrade": {
                    "description": "[Default] Perform an upgrade. If an optional OPTS argument is provided, apt-get will be run with these command line options instead of the default.",
                    "value": "$apt_upgrade$"
                }
            },
            "command": "check_apt",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "apt",
            "object_type": "external_object",
            "timeout": 300,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000005d"
        },
        "network-windows": {
            "arguments": {
                "-c": {
                    "description": "Critical threshold",
                    "value": "$network_win_crit$"
                },
                "-n": {
                    "description": "Don't show ISATAP interfaces in output",
                    "set_if": "$network_no_isatap$"
                },
                "-w": {
                    "description": "Warning threshold",
                    "value": "$network_win_warn$"
                }
            },
            "command": "check_network.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "network-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000b3",
            "vars": {
                "network_no_isatap": true
            }
        },
        "vmware-esx-soap-host-net-send": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "net",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "send",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-net-send",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000009d",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-cpu-usage": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "cpu",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "usage",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-cpu-usage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000cf",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_crit": "90%",
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90",
                "vmware_warn": "80%"
            }
        },
        "vmware-esx-soap-host-runtime-con": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "con",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-runtime-con",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000004d",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-io-read-latency": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "read_latency",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-read-latency",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000007",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "running_kernel": {
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "running_kernel",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000012"
        },
        "vmware-esx-soap-host-volumes": {
            "arguments": {
                "--alertonly": {
                    "description": "List only alerting volumes.",
                    "set_if": "$vmware_alertonly$"
                },
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--gigabyte": {
                    "description": "Output in GB instead of MB.",
                    "set_if": "$vmware_gigabyte$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "volumes",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--spaceleft": {
                    "set_if": "$vmware_spaceleft$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "$vmware_subselect$",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--usedspace": {
                    "description": "Output used space instead of free.",
                    "set_if": "$vmware_usedspace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-volumes",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000a6",
            "vars": {
                "vmware_alertonly": false,
                "vmware_auth_nosession": false,
                "vmware_crit": "90%",
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90",
                "vmware_usedspace": true,
                "vmware_warn": "80%"
            }
        },
        "logfiles": {
            "arguments": {
                "--config": {
                    "description": "The name of a configuration file.",
                    "value": "$logfiles_config$"
                },
                "--configdir": {
                    "description": "The name of a configuration directory. Configfiles ending in .cfg or .conf are (recursively) imported.",
                    "value": "$logfiles_configdir$"
                },
                "--critical": {
                    "description": "Complex handler-scripts can be provided with a critical-parameter this way. Inside the scripts the value is accessible as the macro CL_CRITICAL.",
                    "value": "$logfiles_critical$"
                },
                "--criticalexception": {
                    "description": "A regular expression, the exceptions which are not counted as critical errors.",
                    "value": "$logfiles_critical_exception$"
                },
                "--criticalpattern": {
                    "description": "A regular expression which will trigger a critical error.",
                    "value": "$logfiles_critical_pattern$"
                },
                "--logfile": {
                    "description": "This is the name of the log file you want to scan.",
                    "value": "$logfiles_logfile$"
                },
                "--maxlength": {
                    "description": "With this parameter long lines are truncated (Default: off). Some programs (e.g. TrueScan) generate entries in the eventlog of such a length, that the output of the plugin becomes longer than 1024 characters. NSClient++ discards these.",
                    "value": "$logfiles_max_length$"
                },
                "--noprotocol": {
                    "description": "Normally all the matched lines are written into a protocol file with this file’s name appearing in the plugin’s output. This option switches this off.",
                    "set_if": "$logfiles_no_protocol$"
                },
                "--okpattern": {
                    "description": "A regular expression which resets the error counters.",
                    "value": "$logfiles_ok_pattern$"
                },
                "--report": {
                    "description": "This option turns on multiline output (Default: off). The setting html generates a table which display the last hits in the service details view. Possible values are: short, long, html or off",
                    "value": "$logfiles_report$"
                },
                "--rotation": {
                    "description": "This is the method how log files are rotated. One of the predefined methods or a regular expression, which helps identify the rotated archives. If this key is missing, check_logfiles assumes that the log file will be simply overwritten instead of rotated.",
                    "value": "$logfiles_rotation$"
                },
                "--rununique": {
                    "description": "This parameter prevents check_logfiles from starting when there’s already another instance using the same config file. (exits with UNKNOWN)",
                    "set_if": "$logfiles_run_unique$"
                },
                "--searches": {
                    "description": "A list of tags of those searches which are to be run. Using this parameter, not all searches listed in the config file are run, but only those selected.",
                    "value": "$logfiles_searches$"
                },
                "--selectedsearches": {
                    "description": "A list of tags of those searches which are to be run. Using this parameter, not all searches listed in the config file are run, but only those selected.",
                    "value": "$logfiles_selectedsearches$"
                },
                "--sticky": {
                    "description": "Errors are propagated through successive runs.",
                    "value": "$logfiles_sticky$"
                },
                "--syslogclient": {
                    "description": "With this option you limit the pattern matching to lines originating from the host named in this option.",
                    "value": "$logfiles_syslog_client$"
                },
                "--syslogserver": {
                    "description": "With this option you limit the pattern matching to lines originating from the host check_logfiles is running on.",
                    "set_if": "$logfiles_syslog_server$"
                },
                "--tag": {
                    "description": "A short unique descriptor for this search. It will appear in the output of the plugin and is used to separare the different services.",
                    "value": "$logfiles_tag$"
                },
                "--timeout": {
                    "description": "This parameter causes an abort of a running search after a defined number of seconds. It is an aborted in a controlled manner, so that the lines which have been read so far, are used for the computation of the final result.",
                    "value": "$logfiles_timeout$"
                },
                "--unstick": {
                    "description": "Resets sticky errors.",
                    "set_if": "$logfiles_unstick$"
                },
                "--warning": {
                    "description": "Complex handler-scripts can be provided with a warning-parameter this way. Inside the scripts the value is accessible as the macro CL_WARNING.",
                    "value": "$logfiles_warning$"
                },
                "--warningexception": {
                    "description": "A regular expression, the exceptions which are not counted as warning errors.",
                    "value": "$logfiles_warning_exception$"
                },
                "--warningpattern": {
                    "description": "A regular expression which will trigger a warning error.",
                    "value": "$logfiles_warning_pattern$"
                },
                "--winwarncrit": {
                    "description": "With this parameter messages in the eventlog are classified by the type WARNING/ERROR (Default: off). Replaces or complements warning/criticalpattern.",
                    "value": "$logfiles_winwarncrit$"
                }
            },
            "command": "check_logfiles",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "logfiles",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000002a"
        },
        "mysql_query": {
            "arguments": {
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$mysql_query_hostname$"
                },
                "-P": {
                    "description": "Port number (default: 3306)",
                    "value": "$mysql_query_port$"
                },
                "-c": {
                    "description": "Critical range",
                    "value": "$mysql_query_critical$"
                },
                "-d": {
                    "description": "Database to check",
                    "value": "$mysql_query_database$"
                },
                "-f": {
                    "description": "Read from the specified client options file",
                    "value": "$mysql_query_file$"
                },
                "-g": {
                    "description": "Use a client options group",
                    "value": "$mysql_query_group$"
                },
                "-p": {
                    "description": "Password to login with",
                    "value": "$mysql_query_password$"
                },
                "-q": {
                    "description": "SQL query to run. Only first column in first row will be read",
                    "value": "$mysql_query_execute$"
                },
                "-u": {
                    "description": "Username to login with",
                    "value": "$mysql_query_username$"
                },
                "-w": {
                    "description": "Warning range (format: start:end). Alert if outside this range",
                    "value": "$mysql_query_warning$"
                }
            },
            "command": "check_mysql_query",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "mysql_query",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000064",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "mysql_query_hostname": "$check_address$"
            }
        },
        "smtp": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$smtp_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$smtp_ipv4$"
                },
                "-A": {
                    "description": "SMTP AUTH type to check (default none, only LOGIN supported)",
                    "value": "$smtp_authtype$"
                },
                "-C": {
                    "description": "SMTP command",
                    "value": "$smtp_command$"
                },
                "-D": {
                    "description": "Minimum number of days a certificate has to be valid",
                    "value": "$smtp_certificate_age$"
                },
                "-F": {
                    "description": "FQDN used for HELO",
                    "value": "$smtp_helo_fqdn$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$smtp_address$"
                },
                "-P": {
                    "description": "SMTP AUTH password",
                    "value": "$smtp_authpass$"
                },
                "-R": {
                    "description": "Expected response to command (may be used repeatedly)",
                    "value": "$smtp_response$"
                },
                "-S": {
                    "description": "Use STARTTLS for the connection.",
                    "set_if": "$smtp_starttls$"
                },
                "-U": {
                    "description": "SMTP AUTH username",
                    "value": "$smtp_authuser$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$smtp_critical$"
                },
                "-e": {
                    "description": "String to expect in first line of server response (default: '220')",
                    "value": "$smtp_expect$"
                },
                "-f": {
                    "description": "FROM-address to include in MAIL command, required by Exchange 2000",
                    "value": "$smtp_mail_from$"
                },
                "-p": {
                    "description": "Port number (default: 25)",
                    "value": "$smtp_port$"
                },
                "-q": {
                    "description": "Ignore failure when sending QUIT command to server",
                    "value": "$smtp_ignore_quit$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$smtp_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$smtp_warning$"
                }
            },
            "command": "check_smtp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "smtp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000bb",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$smtp_ipv4$",
                "check_ipv6": "$smtp_ipv6$",
                "smtp_address": "$check_address$"
            }
        },
        "btrfs": {
            "arguments": {
                "--allocated-critical-gib": {
                    "description": "Exit with CRITICAL status if less than the specified amount of disk space (in GiB) is unallocated",
                    "value": "$btrfs_acg$"
                },
                "--allocated-critical-percent": {
                    "description": "Exit with CRITICAL status if more than the specified percent of disk space is allocated",
                    "value": "$btrfs_acp$"
                },
                "--allocated-warning-gib": {
                    "description": "Exit with WARNING status if less than the specified amount of disk space (in GiB) is unallocated",
                    "value": "$btrfs_awg$"
                },
                "--allocated-warning-percent": {
                    "description": "Exit with WARNING status if more than the specified percent of disk space is allocated",
                    "value": "$btrfs_awp$"
                },
                "--mountpoint": {
                    "description": "Path to the BTRFS mountpoint",
                    "required": true,
                    "value": "$btrfs_mountpoint$"
                }
            },
            "command": "sudo /usr/lib/nagios/plugins/check_btrfs",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "btrfs",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000046",
            "vars": {
                "btrfs_acp": 90,
                "btrfs_awp": 80
            }
        },
        "vmware-esx-soap-host-cpu-ready": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "cpu",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "ready",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-cpu-ready",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000a3",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "snmp-storage": {
            "arguments": {
                "-2": {
                    "description": "Use snmp v2c",
                    "set_if": "$snmp_v2$"
                },
                "-C": {
                    "description": "Community name for the host's SNMP agent (implies v1 protocol)",
                    "set_if": "$snmp_nocrypt$",
                    "value": "$snmp_community$"
                },
                "-H": {
                    "description": "Name or IP address of host to check",
                    "value": "$snmp_address$"
                },
                "-L": {
                    "description": "<authproto>,<privproto> - <Authentication protocol (md5|sha : default md5)>,<Priv protocole (des|aes : default des)>",
                    "set_if": "$snmp_v3_use_authprotocol$",
                    "value": "$snmp_authprotocol$"
                },
                "-X": {
                    "description": "Priv password for snmpv3 (AuthPriv protocol)",
                    "set_if": "$snmp_v3_use_privpass$",
                    "value": "$snmp_privpass$"
                },
                "-c": "$snmp_crit$",
                "-e": {
                    "description": "Select all storages except the one(s) selected by -m. No action on storage type selection.",
                    "set_if": "$snmp_exclude$"
                },
                "-f": {
                    "description": "Perfparse compatible output",
                    "set_if": "$snmp_perf$"
                },
                "-l": {
                    "description": "Login and auth password for snmpv3 authentication",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_login$"
                },
                "-m": {
                    "description": "Name in description OID (can be mounpoints '/home' or 'Swap Space'...)",
                    "value": "$snmp_storage_name$"
                },
                "-o": {
                    "description": "Max-size of the SNMP message, usefull in case of Too Long responses.",
                    "value": "$snmp_storage_olength$"
                },
                "-p": {
                    "description": "SNMP port (Default 161)",
                    "value": "$snmp_port$"
                },
                "-q": {
                    "description": "Storage type: Other, Ram, VirtualMemory, FixedDisk, RemovableDisk, FloppyDisk, CompactDisk, RamDisk, FlashMemory, or NetworkDisk",
                    "value": "$snmp_storage_type$"
                },
                "-t": {
                    "description": "Timeout for SNMP in seconds (Default: 5)",
                    "value": "$snmp_timeout$"
                },
                "-w": "$snmp_warn$",
                "-x": {
                    "description": "Priv password",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_password$"
                }
            },
            "command": "check_snmp_storage.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "snmp-storage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000056",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "snmp_address": "$check_address$",
                "snmp_authprotocol": "md5,des",
                "snmp_community": "public",
                "snmp_crit": 90,
                "snmp_exclude": false,
                "snmp_login": "snmpuser",
                "snmp_nocrypt": true,
                "snmp_perf": true,
                "snmp_storage_name": "^/$$",
                "snmp_timeout": "5",
                "snmp_v2": false,
                "snmp_v3": false,
                "snmp_v3_use_authprotocol": false,
                "snmp_v3_use_privpass": false,
                "snmp_warn": 80
            }
        },
        "ceph": {
            "arguments": {
                "-c": {
                    "description": "alternative ceph conf file",
                    "required": false,
                    "value": "$ceph_conf_file$"
                },
                "-d": {
                    "description": "exec 'ceph health detail'",
                    "set_if": "$ceph_details$"
                },
                "-e": {
                    "description": "ceph executable [/usr/bin/ceph]",
                    "required": false,
                    "value": "$ceph_exec_dir$"
                },
                "-i": {
                    "description": "ceph client id",
                    "required": false,
                    "value": "$ceph_client_id$"
                },
                "-k": {
                    "description": "ceph client keyring file",
                    "required": false,
                    "value": "$ceph_client_key$"
                },
                "-m": {
                    "description": "ceph monitor address[:port]",
                    "required": false,
                    "value": "$ceph_mon_address$"
                },
                "-n": {
                    "description": "ceph client name",
                    "required": false,
                    "value": "$ceph_client_name$"
                },
                "-w": {
                    "description": "whitelist regexp for ceph health warnings",
                    "required": false,
                    "value": "$ceph_whitelist$"
                }
            },
            "command": "check_ceph.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ceph",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000001f"
        },
        "vmware-esx-soap-host-io-write": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "write",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-write",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000026",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "kdc": {
            "arguments": {
                "-H": {
                    "description": "Name or IP address of KDC to check.",
                    "value": "$kdc_address$"
                },
                "-P": {
                    "description": "Port on which KDC runs (default 88).",
                    "value": "$kdc_port$"
                },
                "-k": {
                    "description": "Keytab file containing principal's key.",
                    "required": true,
                    "value": "$kdc_keytab$"
                },
                "-p": {
                    "description": "Principal name to authenticate as (including realm).",
                    "required": true,
                    "value": "$kdc_principal$"
                }
            },
            "command": "check_kdc",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "kdc",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000c4",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "kdc_address": "$check_address$"
            }
        },
        "vmware-esx-soap-vm-mem-usage": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "mem",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "usage",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-mem-usage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000032",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_crit": "90%",
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90",
                "vmware_warn": "80%"
            }
        },
        "mem": {
            "arguments": {
                "-C": {
                    "description": "Count OS caches as FREE memory",
                    "set_if": "$mem_cache$"
                },
                "-c": {
                    "description": "Percent free/used when critical",
                    "value": "$mem_critical$"
                },
                "-f": {
                    "description": "Check FREE memory",
                    "set_if": "$mem_free$"
                },
                "-u": {
                    "description": "Check USED memory",
                    "set_if": "$mem_used$"
                },
                "-w": {
                    "description": "Percent free/used when to warn",
                    "value": "$mem_warning$"
                }
            },
            "command": "check_mem.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "mem",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000061",
            "vars": {
                "mem_cache": false,
                "mem_free": false,
                "mem_used": false
            }
        },
        "dummy": {
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "dummy",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000031",
            "vars": {
                "dummy_state": 0,
                "dummy_text": "Check was successful."
            }
        },
        "ssl_cert": {
            "arguments": {
                "--altnames": {
                    "description": "Matches the pattern specified in -n with alternate",
                    "set_if": "$ssl_cert_altnames$"
                },
                "--clientpass": {
                    "description": "Set passphrase for client certificate",
                    "value": "$ssl_cert_clientpass$"
                },
                "--ecdsa": {
                    "description": "Cipher selection: force ECDSA authentication",
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--ignore-exp": {
                    "description": "Ignore expiration date",
                    "set_if": "$ssl_cert_ignore_expiration$"
                },
                "--ignore-ocsp": {
                    "description": "Do not check revocation with OCSP",
                    "set_if": "$ssl_cert_ignore_ocsp$"
                },
                "--ignore-sig-alg": {
                    "description": "Do not check if the certificate was signed with SHA1 od MD5",
                    "set_if": "$ssl_cert_ignore_signature$"
                },
                "--ignore-ssl-labs-cache": {
                    "description": "Forces a new check by SSL Labs",
                    "set_if": "$ssl_cert_ssllabs_nocache$"
                },
                "--no_ssl2": {
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--no_ssl3": {
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--no_tls1": {
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--no_tls1_1": {
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--no_tls1_2": {
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--rsa": {
                    "description": "Cipher selection: force RSA authentication",
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--serial": {
                    "description": "Pattern to match the serial number",
                    "value": "$ssl_cert_serial$"
                },
                "--sni": {
                    "description": "Sets the TLS SNI (Server Name Indication) extension",
                    "value": "$ssl_cert_sni$"
                },
                "--ssl2": {
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--ssl3": {
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--tls1": {
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--tls1_1": {
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "--tls1_2": {
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression"
                },
                "-A": {
                    "description": "Ignore authority warnings (expiration only)",
                    "set_if": "$ssl_cert_noauth$"
                },
                "-C": {
                    "description": "Use client certificate to authenticate",
                    "value": "$ssl_cert_clientssl_cert$"
                },
                "-H": {
                    "description": "The host's address",
                    "required": true,
                    "value": "$ssl_cert_address$"
                },
                "-L": {
                    "description": "SSL Labs assestment",
                    "value": "$ssl_cert_ssllabs$"
                },
                "-N": {
                    "description": "Match CN with the host name",
                    "set_if": "$ssl_cert_match_host$"
                },
                "-P": {
                    "description": "Use the specific protocol {http|smtp|pop3|imap|ftp|xmpp|irc|ldap} (default: http)",
                    "value": "$ssl_cert_protocol$"
                },
                "-c": {
                    "description": "Minimum number of days a certificate has to be valid to issue a critical status",
                    "value": "$ssl_cert_critical$"
                },
                "-e": {
                    "description": "Pattern to match the email address contained in the certificate",
                    "value": "$ssl_cert_email$"
                },
                "-f": {
                    "description": "Local file path (works with -H localhost only)",
                    "value": "$ssl_cert_file$"
                },
                "-i": {
                    "description": "Pattern to match the issuer of the certificate",
                    "value": "$ssl_cert_issuer$"
                },
                "-n": {
                    "description": "Pattern to match the CN of the certificate",
                    "value": "$ssl_cert_cn$"
                },
                "-o": {
                    "description": "Pattern to match the organization of the certificate",
                    "value": "$ssl_cert_org$"
                },
                "-p": {
                    "description": "TCP port number (default: 443)",
                    "value": "$ssl_cert_port$"
                },
                "-r": {
                    "description": "Root certificate or directory to be used for certificate validation",
                    "value": "$ssl_cert_rootssl_cert$"
                },
                "-s": {
                    "description": "Allow self-signed certificate",
                    "set_if": "$ssl_cert_selfsigned$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 15)",
                    "value": "$ssl_cert_timeout$"
                },
                "-w": {
                    "description": "Minimum number of days a certificate has to be valid",
                    "value": "$ssl_cert_warn$"
                }
            },
            "command": "check_ssl_cert",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ssl_cert",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000bd",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "ssl_cert_address": "$check_address$",
                "ssl_cert_port": 443
            }
        },
        "yum": {
            "arguments": {
                "--all-updates": {
                    "description": "Do not distinguish between security and non-security updates. This may be used if the YUM security plugin is absent.",
                    "set_if": "$yum_all_updates$"
                },
                "--cache-only": {
                    "description": "Run entirely from cache and do not update the cache.",
                    "set_if": "$yum_cache_only$"
                },
                "--disablerepo": {
                    "description": "Explicitly disables a reposity when calling YUM. Can take a comma separated list of repositories.",
                    "value": "$yum_disablerepo$"
                },
                "--enablerepo": {
                    "description": "Explicitly enables a reposity when calling YUM. Can take a comma separated list of repositories.",
                    "value": "$yum_enablerepo$"
                },
                "--installroot": {
                    "description": "Specifies another installation root directory",
                    "value": "$yum_installroot$"
                },
                "--no-warn-on-lock": {
                    "description": "Return OK instead of WARNING when YUM is locked.",
                    "set_if": "$yum_no_warn_on_lock$"
                },
                "--no-warn-on-updates": {
                    "description": "Return OK instead of WARNING even when updates are available.",
                    "set_if": "$yum_no_warn_on_updates$"
                },
                "--timeout": {
                    "description": "Sets a timeout in seconds after which the plugin will exit (defaults to 55 seconds).",
                    "value": "$yum_timeout$"
                },
                "--warn-on-any-update": {
                    "description": "Warns if there are any (non-security) package updates available.",
                    "set_if": "$yum_warn_on_any_update$"
                }
            },
            "command": "check_yum",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "yum",
            "object_type": "external_object",
            "timeout": 300,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000002",
            "vars": {
                "yum_all_updates": false,
                "yum_cache_only": false,
                "yum_no_warn_on_lock": false,
                "yum_no_warn_on_updates": false,
                "yum_warn_on_any_update": false
            }
        },
        "game": {
            "arguments": {
                "-G": {
                    "description": "Field number in raw qstat output that contains game time",
                    "value": "$game_gametime$"
                },
                "-H": {
                    "description": "Name of the host running the game",
                    "value": "$game_hostname$"
                },
                "-P": {
                    "description": "Port to connect to",
                    "value": "$game_port$"
                },
                "-g": {
                    "description": "Field number in raw qstat output that contains game name",
                    "value": "$game_gamefield$"
                },
                "-m": {
                    "description": "Field number in raw qstat output that contains map name",
                    "value": "$game_mapfield$"
                },
                "-p": {
                    "description": "Field number in raw qstat output that contains ping time",
                    "value": "$game_pingfield$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$game_timeout$"
                },
                "game": {
                    "description": "Name of the game",
                    "skip_key": true,
                    "value": "$game_game$",
                    "order": "1"
                },
                "ipaddress": {
                    "description": "Ipaddress of the game server to query",
                    "skip_key": true,
                    "value": "$game_ipaddress$",
                    "order": "2"
                }
            },
            "command": "check_game",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "game",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000d8",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false
            }
        },
        "vmware-esx-soap-host-mem-consumed": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "mem",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "consumed",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-mem-consumed",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000003f",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-dc-runtime-listcluster": {
            "arguments": {
                "--alertonly": {
                    "set_if": "$vmware_alertonly$"
                },
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--cluster": {
                    "description": "ESX or ESXi clustername.",
                    "required": false,
                    "value": "$vmware_cluster$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": true,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "listcluster",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-dc-runtime-listcluster",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000a0",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "ipmi-alive": {
            "arguments": {
                "-H": {
                    "description": "host to ping",
                    "value": "$ping_address$"
                },
                "-c": {
                    "description": "critical threshold pair",
                    "value": "$ping_crta$,$ping_cpl$%"
                },
                "-p": {
                    "description": "number of ICMP ECHO packets to send (Default: 5)",
                    "value": "$ping_packets$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ping_timeout$"
                },
                "-w": {
                    "description": "warning threshold pair",
                    "value": "$ping_wrta$,$ping_wpl$%"
                }
            },
            "command": "check_ping",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ipmi-alive",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000021",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "ping_address": "$check_address$",
                "ping_cpl": 100,
                "ping_crta": 5000,
                "ping_packets": 1,
                "ping_wpl": 100,
                "ping_wrta": 5000
            }
        },
        "nwc_health": {
            "arguments": {
                "--alias": {
                    "description": "The alias name of a 64bit-interface (ifAlias)",
                    "value": "$nwc_health_alias$"
                },
                "--authpassword": {
                    "description": "The authentication password for SNMPv3",
                    "value": "$nwc_health_authpassword$"
                },
                "--authprotocol": {
                    "description": "The authentication protocol for SNMPv3 (md5|sha)",
                    "value": "$nwc_health_authprotocol$"
                },
                "--blacklist": {
                    "description": "Blacklist some (missing/failed) components",
                    "value": "$nwc_health_blacklist$"
                },
                "--community": {
                    "description": "SNMP community of the server (SNMP v1/2 only)",
                    "value": "$nwc_health_community$"
                },
                "--community2": {
                    "description": "SNMP community which can be used to switch the context during runtime",
                    "value": "$nwc_health_community2$"
                },
                "--contextengineid": {
                    "description": "The context engine id for SNMPv3 (10 to 64 hex characters)",
                    "value": "$nwc_health_contextengineid$"
                },
                "--contextname": {
                    "description": "The context name for SNMPv3 (empty represents the default context)",
                    "value": "$nwc_health_contextname$"
                },
                "--critical": {
                    "description": "The critical threshold",
                    "value": "$nwc_health_critical$"
                },
                "--criticalx": {
                    "description": "The extended critical thresholds",
                    "repeat_key": true,
                    "value": "$nwc_health_criticalx$"
                },
                "--domain": {
                    "description": "The transport domain to use (default: udp/ipv4, other possible values: udp6, udp/ipv6, tcp, tcp4, tcp/ipv4, tcp6, tcp/ipv6)",
                    "value": "$nwc_health_domain$"
                },
                "--drecksptkdb": {
                    "description": "This parameter must be used instead of --name, because Devel::ptkdb is stealing the latter from the command line",
                    "value": "$nwc_health_drecksptkdb$"
                },
                "--hostname": {
                    "description": "Hostname or IP-address of the switch or router",
                    "value": "$nwc_health_hostname$"
                },
                "--ifspeed": {
                    "description": "Override the ifspeed oid of an interface",
                    "value": "$nwc_health_ifspeed$"
                },
                "--ifspeedin": {
                    "description": "Override the ifspeed oid of an interface (only inbound)",
                    "value": "$nwc_health_ifspeedin$"
                },
                "--ifspeedout": {
                    "description": "Override the ifspeed oid of an interface (only outbound)",
                    "value": "$nwc_health_ifspeedout$"
                },
                "--lookback": {
                    "description": "The amount of time you want to look back when calculating average rates. Use it for mode interface-errors or interface-usage. Without --lookback the time between two runs of check_nwc_health is the base for calculations. If you want your checkresult to be based for example on the past hour, use --lookback 3600.",
                    "value": "$nwc_health_lookback$"
                },
                "--mitigation": {
                    "description": "The parameter allows you to change a critical error to a warning.",
                    "value": "$nwc_health_mitigation$"
                },
                "--mode": {
                    "description": "Which mode should be executed. A list of all available modes can be found in the plugin documentation",
                    "value": "$nwc_health_mode$"
                },
                "--morphperfdata": {
                    "description": "The parameter allows you to change performance data labels. It's a perl regexp and a substitution. --morphperfdata '(.*)ISATAP(.*)'='$1patasi$2'",
                    "value": "$nwc_health_morphperfdata$"
                },
                "--multiline": {
                    "description": "Multiline output",
                    "set_if": "$nwc_health_multiline$"
                },
                "--name": {
                    "description": "The name of an interface (ifDescr)",
                    "value": "$nwc_health_name$"
                },
                "--name2": {
                    "description": "The secondary name of a component",
                    "value": "$nwc_health_name2$"
                },
                "--name3": {
                    "description": "The tertiary name of a component",
                    "value": "$nwc_health_name3$"
                },
                "--negate": {
                    "description": "The parameter allows you to map exit levels, such as warning=critical",
                    "value": "$nwc_health_negate$"
                },
                "--offline": {
                    "description": "The maximum number of seconds since the last update of cache file before it is considered too old",
                    "value": "$nwc_health_offline$"
                },
                "--oids": {
                    "description": "A list of oids which are downloaded and written to a cache file. Use it together with --mode oidcache",
                    "value": "$nwc_health_oids$"
                },
                "--port": {
                    "description": "The SNMP port to use (default: 161)",
                    "value": "$nwc_health_port$"
                },
                "--privpassword": {
                    "description": "The password for authPriv security level",
                    "value": "$nwc_health_privpassword$"
                },
                "--privprotocol": {
                    "description": "The private protocol for SNMPv3 (des|aes|aes128|3des|3desde)",
                    "value": "$nwc_health_privprotocol$"
                },
                "--protocol": {
                    "description": "The SNMP protocol to use (default: 2c, other possibilities: 1,3)",
                    "value": "$nwc_health_protocol$"
                },
                "--regexp": {
                    "description": "A flag indicating that --name is a regular expression",
                    "set_if": "$nwc_health_regexp$"
                },
                "--report": {
                    "description": "Can be used to shorten the output. Possible values are: 'long' (default), 'short' (to shorten if available), or 'html' (to produce some html outputs if available)",
                    "value": "$nwc_health_report$"
                },
                "--role": {
                    "description": "The role of this device in a hsrp group (active/standby/listen)",
                    "value": "$nwc_health_role$"
                },
                "--selectedperfdata": {
                    "description": "The parameter allows you to limit the list of performance data. It's a perl regexp. Only matching perfdata show up in the output.",
                    "value": "$nwc_health_selectedperfdata$"
                },
                "--servertype": {
                    "description": "The type of the network device: cisco (default). Use it if auto-detection is not possible",
                    "value": "$nwc_health_servertype$"
                },
                "--statefilesdir": {
                    "description": "An alternate directory where the plugin can save files",
                    "value": "$nwc_health_statefilesdir$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 15)",
                    "value": "$nwc_health_timeout$"
                },
                "--units": {
                    "description": "One of %, B, KB, MB, GB, Bit, KBi, MBi, GBi. (used for e.g. mode interface-usage)",
                    "value": "$nwc_health_units$"
                },
                "--username": {
                    "description": "The securityName for the USM security model (SNMPv3 only)",
                    "value": "$nwc_health_username$"
                },
                "--warning": {
                    "description": "The warning threshold",
                    "value": "$nwc_health_warning$"
                },
                "--warningx": {
                    "description": "The extended warning thresholds",
                    "repeat_key": true,
                    "value": "$nwc_health_warningx$"
                },
                "--with-mymodules-dyn-dir": {
                    "description": "A directory where own extensions can be found",
                    "value": "$nwc_health_mymodules-dyn-dir$"
                }
            },
            "command": "check_nwc_health",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nwc_health",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000067",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "nwc_health_hostname": "$check_address$",
                "nwc_health_mode": "hardware-health"
            }
        },
        "vmware-esx-soap-vm-mem": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "mem",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-mem",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000ad",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "phpfpm_status": {
            "arguments": {
                "-H": {
                    "description": "name or IP address of host to check",
                    "required": true,
                    "value": "$phpfpm_status_hostname$"
                },
                "-P": {
                    "description": "Password for basic auth",
                    "value": "$phpfpm_status_pass$"
                },
                "-S": {
                    "description": "Wether we should use HTTPS instead of HTTP. Note that you can give some extra parameters to this settings. Default value is 'TLSv1' but you could use things like 'TLSv1_1' or 'TLSV1_2' (or even 'SSLv23:!SSLv2:!SSLv3' for old stuff).",
                    "set_if": "$phpfpm_status_ssl$"
                },
                "-U": {
                    "description": "Username for basic auth",
                    "value": "$phpfpm_status_user$"
                },
                "-X": {
                    "description": "Full path to the cacert.pem certificate authority used to verify ssl certificates (use with --verifyssl). if not given the cacert from Mozilla::CA cpan plugin will be used.",
                    "value": "$phpfpm_status_cacert$"
                },
                "-c": {
                    "description": "MIN_AVAILABLE_PROCESSES,PROC_MAX_REACHED,QUEUE_MAX_REACHED number of available workers, or max states reached that will cause an error, -1 for no CRITICAL",
                    "value": "$phpfpm_status_critical$"
                },
                "-d": {
                    "description": "Debug mode (show http request response)",
                    "set_if": "$phpfpm_status_debug$"
                },
                "-f": {
                    "description": "Connect directly to php-fpm via network or local socket, using fastcgi protocol instead of HTTP.",
                    "set_if": "$phpfpm_status_fastcgi$"
                },
                "-p": {
                    "description": "Http port, or Fastcgi port when using --fastcgi",
                    "value": "$phpfpm_status_port$"
                },
                "-r": {
                    "description": "Realm for basic auth",
                    "value": "$phpfpm_status_realm$"
                },
                "-s": {
                    "description": "ServerName, (host header of HTTP request) use it if you specified an IP in -H to match the good Virtualhost in your target",
                    "value": "$phpfpm_status_servername$"
                },
                "-t": {
                    "description": "timeout in seconds (Default: 15)",
                    "value": "$phpfpm_status_timeout$"
                },
                "-u": {
                    "description": "Specific URL (only the path part of it in fact) to use, instead of the default /fpm-status",
                    "value": "$phpfpm_status_url$"
                },
                "-w": {
                    "description": "MIN_AVAILABLE_PROCESSES,PROC_MAX_REACHED,QUEUE_MAX_REACHED number of available workers, or max states reached that will cause a warning. -1 for no warning",
                    "value": "$phpfpm_status_warn$"
                },
                "-x": {
                    "description": "verify certificate and hostname from ssl cert, default is 0 (no security), set it to 1 to really make SSL peer name and certificater checks.",
                    "set_if": "$phpfpm_status_verifyssl$"
                }
            },
            "command": "check_phpfpm_status",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "phpfpm_status",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000004e",
            "vars": {
                "phpfpm_status_hostname": "$address$"
            }
        },
        "users-windows": {
            "arguments": {
                "-c": {
                    "description": "Critical threshold",
                    "value": "$users_win_crit$"
                },
                "-w": {
                    "description": "Warning threshold",
                    "value": "$users_win_warn$"
                }
            },
            "command": "check_users.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "users-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000001d"
        },
        "vmware-esx-dc-runtime-info": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--cluster": {
                    "description": "ESX or ESXi clustername.",
                    "required": false,
                    "value": "$vmware_cluster$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": true,
                    "value": "$vmware_datacenter$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": {
                    "description": "Shows all runtime info for the datacenter/Vcenter.",
                    "value": "runtime"
                },
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-dc-runtime-info",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000008e",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-vm-cpu-ready": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "cpu",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "ready",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-cpu-ready",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000079",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "memcached": {
            "arguments": {
                "-E": {
                    "description": "Generate warning if number of evictions exceeds this threshold. 0=disable. (default: 10)",
                    "value": "$memcached_warning_evictions$"
                },
                "-H": {
                    "description": "Hostname or IP address (required) optional ':port' overrides -p",
                    "required": true,
                    "value": "$memcached_hostname$"
                },
                "-K": {
                    "description": "expiry time in seconds for history object (default: 7200)",
                    "value": "$memcached_expiry$"
                },
                "-T": {
                    "description": "Minimum time interval (in minutes) to use to analyse stats. (default: 30)",
                    "value": "$memcached_minimum_stat_interval$"
                },
                "-k": {
                    "description": "key name for history object (default: check_memcached)",
                    "value": "$memcached_key$"
                },
                "-n": {
                    "description": "Keep up to this many items in the history object in memcached (default: 30)",
                    "value": "$memcached_keep$"
                },
                "-p": {
                    "description": "Port number (default: 11211)",
                    "value": "$memcached_port$"
                },
                "-r": {
                    "description": "output performance statistics as rate-per-minute figures (better suited to pnp4nagios)",
                    "set_if": "$memcached_performance_output$"
                },
                "-t": {
                    "description": "timeout in seconds (default: 1.0)",
                    "value": "$memcached_timeout$"
                },
                "-v": {
                    "description": "verbose messages",
                    "set_if": "$memcached_verbose$"
                },
                "-w": {
                    "description": "Generate warning if quotient of hits/misses falls below this value (default: 2.0)",
                    "value": "$memcached_warning_hits_misses$"
                }
            },
            "command": "check_memcached",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "memcached",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000013",
            "vars": {
                "memcached_hostname": "127.0.0.1",
                "memcached_minimum_stat_interval": "10",
                "memcached_performance_output": true
            }
        },
        "snmp-memory": {
            "arguments": {
                "-2": {
                    "description": "Use snmp v2c",
                    "set_if": "$snmp_v2$"
                },
                "-C": {
                    "description": "Community name for the host's SNMP agent (implies v1 protocol)",
                    "set_if": "$snmp_nocrypt$",
                    "value": "$snmp_community$"
                },
                "-E": {
                    "description": "check HP / Procurve memory",
                    "set_if": "$snmp_is_hp$"
                },
                "-H": {
                    "description": "Name or IP address of host to check",
                    "value": "$snmp_address$"
                },
                "-I": {
                    "description": "check cisco memory (sum of all memory pools)",
                    "set_if": "$snmp_is_cisco$"
                },
                "-L": {
                    "description": "<authproto>,<privproto> - <Authentication protocol (md5|sha : default md5)>,<Priv protocole (des|aes : default des)>",
                    "set_if": "$snmp_v3_use_authprotocol$",
                    "value": "$snmp_authprotocol$"
                },
                "-X": {
                    "description": "Priv password for snmpv3 (AuthPriv protocol)",
                    "set_if": "$snmp_v3_use_privpass$",
                    "value": "$snmp_privpass$"
                },
                "-b": {
                    "description": "Exclude buffered memory in used memory",
                    "set_if": "$snmp_membuffer$"
                },
                "-c": "$snmp_crit$",
                "-f": {
                    "description": "Performance data output",
                    "set_if": "$snmp_perf$"
                },
                "-l": {
                    "description": "Login and auth password for snmpv3 authentication",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_login$"
                },
                "-m": {
                    "description": "Include cached memory in used memory",
                    "set_if": "$snmp_memcached$"
                },
                "-p": {
                    "description": "SNMP port (Default 161)",
                    "value": "$snmp_port$"
                },
                "-t": {
                    "description": "Timeout for SNMP in seconds (Default: 5)",
                    "value": "$snmp_timeout$"
                },
                "-w": "$snmp_warn$",
                "-x": {
                    "description": "Priv password",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_password$"
                }
            },
            "command": "check_snmp_mem.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "snmp-memory",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000d4",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "snmp_address": "$check_address$",
                "snmp_authprotocol": "md5,des",
                "snmp_community": "public",
                "snmp_crit": "98,80",
                "snmp_is_cisco": false,
                "snmp_login": "snmpuser",
                "snmp_membuffer": false,
                "snmp_memcached": false,
                "snmp_nocrypt": true,
                "snmp_perf": true,
                "snmp_timeout": "5",
                "snmp_v2": false,
                "snmp_v3": false,
                "snmp_v3_use_authprotocol": false,
                "snmp_v3_use_privpass": false,
                "snmp_warn": "94,50"
            }
        },
        "vmware-esx-soap-host-net-receive": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "net",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "receive",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-net-receive",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000033",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "nscp-local-service": {
            "arguments": {
                "--critical": "$nscp_service_ctype$='$nscp_service_critical$'",
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--ok": "$nscp_service_otype$='$nscp_service_ok$'",
                "--service": {
                    "repeat_key": true,
                    "value": "$nscp_service_name$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "--warning": "$nscp_service_wtype$='$nscp_service_warning$'",
                "-a": {
                    "repeat_key": true,
                    "value": "$nscp_service_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-service",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000009c",
            "vars": {
                "nscp_boot": true,
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": [
                    "CheckSystem"
                ],
                "nscp_query": "check_service",
                "nscp_service_ctype": "state",
                "nscp_service_otype": "state",
                "nscp_service_showall": true,
                "nscp_service_type": "state",
                "nscp_service_wtype": "state",
                "nscp_showall": "$nscp_service_showall$"
            }
        },
        "radius": {
            "arguments": {
                "-F": {
                    "description": "Configuration file",
                    "value": "$radius_config_file$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$radius_address$"
                },
                "-N": {
                    "description": "NAS IP Address",
                    "value": "$radius_nas_address$"
                },
                "-P": {
                    "description": "Port number (default: 1645)",
                    "value": "$radius_port$"
                },
                "-e": {
                    "description": "Response string to expect from the server",
                    "value": "$radius_expect$"
                },
                "-n": {
                    "description": "NAS identifier",
                    "value": "$radius_nas_id$"
                },
                "-p": {
                    "description": "Password for authentication",
                    "value": "$radius_password$"
                },
                "-r": {
                    "description": "Number of times to retry a failed connection",
                    "value": "$radius_retries$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10) Optional :<timeout state> can be a state integer (0,1,2,3) or a state STRING",
                    "value": "$radius_timeout$"
                },
                "-u": {
                    "description": "The user to authenticate",
                    "value": "$radius_username$"
                }
            },
            "command": "check_radius",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "radius",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000000f",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "radius_address": "$check_address$"
            }
        },
        "vmware-esx-soap-host-runtime-status": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "status",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-runtime-status",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000059",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-dc-runtime-issues": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--cluster": {
                    "description": "ESX or ESXi clustername.",
                    "required": false,
                    "value": "$vmware_cluster$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": true,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "issues",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-dc-runtime-issues",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000b5",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "mysql": {
            "arguments": {
                "-C": {
                    "description": "Path to CA signing the cert",
                    "value": "$mysql_cacert$"
                },
                "-D": {
                    "description": "Path to CA directory",
                    "value": "$mysql_cadir$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$mysql_hostname$"
                },
                "-L": {
                    "description": "List of valid SSL ciphers",
                    "value": "$mysql_ciphers$"
                },
                "-P": {
                    "description": "Port number (default: 3306)",
                    "value": "$mysql_port$"
                },
                "-S": {
                    "description": "Check if the slave thread is running properly",
                    "set_if": "$mysql_check_slave$"
                },
                "-a": {
                    "description": "Path to SSL certificate",
                    "value": "$mysql_cert$"
                },
                "-c": {
                    "description": "Exit with CRITICAL status if slave server is more then INTEGER seconds behind master",
                    "value": "$mysql_critical$"
                },
                "-d": {
                    "description": "Check database with indicated name",
                    "value": "$mysql_database$"
                },
                "-f": {
                    "description": "Read from the specified client options file",
                    "value": "$mysql_file$"
                },
                "-g": {
                    "description": "Use a client options group",
                    "value": "$mysql_group$"
                },
                "-k": {
                    "description": "Path to private SSL key",
                    "value": "$mysql_key$"
                },
                "-l": {
                    "description": "Use ssl encryptation",
                    "set_if": "$mysql_ssl$"
                },
                "-n": {
                    "description": "Ignore authentication failure and check for mysql connectivity only",
                    "set_if": "$mysql_ignore_auth$"
                },
                "-p": {
                    "description": "Use the indicated password to authenticate the connection",
                    "value": "$mysql_password$"
                },
                "-s": {
                    "description": "Use the specified socket",
                    "value": "$mysql_socket$"
                },
                "-u": {
                    "description": "Connect using the indicated username",
                    "value": "$mysql_username$"
                },
                "-w": {
                    "description": "Exit with WARNING status if slave server is more than INTEGER seconds behind master",
                    "value": "$mysql_warning$"
                }
            },
            "command": "check_mysql",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "mysql",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000b0",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "mysql_hostname": "$check_address$"
            }
        },
        "vmware-esx-soap-host-net-nic": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "net",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "nic",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-net-nic",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000004f",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "uptime": {
            "arguments": {
                "--critical": {
                    "description": "Min. number of uptime to generate critical alert ( w < c )",
                    "required": true,
                    "value": "$uptime_critical$"
                },
                "--for": {
                    "description": "Show uptime in a pretty format (Running for x weeks, x days, ...)",
                    "set_if": "$uptime_for$"
                },
                "--since": {
                    "description": "Show last boot in yyyy-mm-dd HH:MM:SS format (output from 'uptime -s')",
                    "set_if": "$uptime_since$"
                },
                "--warning": {
                    "description": "Min. number of uptime to generate warning",
                    "required": true,
                    "value": "$uptime_warning$"
                }
            },
            "command": "check_uptime",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "uptime",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000036",
            "vars": {
                "uptime_critical": "15m",
                "uptime_warning": "30m"
            }
        },
        "vmware-esx-soap-host-io": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000008f",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-vm-net-usage": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "net",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "usage",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-net-usage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000c1",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "nscp-local-os-version": {
            "arguments": {
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "-a": {
                    "description": "List of arguments (arguments gets -- prefixed automatically (--argument foo=bar is the same as setting '--foo bar')",
                    "repeat_key": true,
                    "value": "$nscp_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-os-version",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000008b",
            "vars": {
                "nscp_boot": true,
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": [
                    "CheckSystem"
                ],
                "nscp_query": "check_os_version",
                "nscp_showall": false
            }
        },
        "vmware-esx-soap-host-storage-path": {
            "arguments": {
                "--alertonly": {
                    "set_if": "$vmware_alertonly$"
                },
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "storage",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--standbyok": {
                    "set_if": "$vmware_standbyok$"
                },
                "--subselect": "path",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-storage-path",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000b8",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "nscp-local-memory": {
            "arguments": {
                "--critical": "$nscp_memory_op$ $nscp_memory_critical$",
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "--type=committed": {
                    "description": "Total memory (RAM+PAGE)",
                    "set_if": "$nscp_memory_committed$"
                },
                "--type=physical": {
                    "description": "Physical memory (RAM)",
                    "set_if": "$nscp_memory_physical$"
                },
                "--warning": "$nscp_memory_op$ $nscp_memory_warning$",
                "-a": {
                    "repeat_key": true,
                    "value": "$nscp_memory_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-memory",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000000a",
            "vars": {
                "nscp_boot": true,
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_memory_committed": false,
                "nscp_memory_critical": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "nscp_memory_free": true,
                "nscp_memory_op": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "nscp_memory_physical": true,
                "nscp_memory_showall": false,
                "nscp_memory_warning": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "nscp_modules": [
                    "CheckSystem"
                ],
                "nscp_query": "check_memory",
                "nscp_showall": "$nscp_memory_showall$"
            }
        },
        "smart": {
            "arguments": {
                "-d": {
                    "description": "Name of a local hard drive to monitor",
                    "required": true,
                    "value": "$smart_device$"
                }
            },
            "command": "check_ide_smart",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "smart",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000076"
        },
        "haproxy_status": {
            "arguments": {
                "--backends": {
                    "description": "Enable checks for the backends in HAProxy (that they have the required quorum of servers, and that the session limits haven't been reached).",
                    "set_if": "$haproxy_status_backends$"
                },
                "--defaults": {
                    "description": "Set/Override the defaults which will be applied to all checks (unless specifically set by --overrides).",
                    "value": "$haproxy_status_default$"
                },
                "--frontends": {
                    "description": "Enable checks for the frontends in HAProxy (that they're marked as OPEN and the session limits haven't been reached).",
                    "set_if": "$haproxy_status_frontends$"
                },
                "--nobackends": {
                    "description": "Disable checks for the backends in HAProxy (that they have the required quorum of servers, and that the session limits haven't been reached).",
                    "set_if": "$haproxy_status_nobackends$"
                },
                "--nofrontends": {
                    "description": "Disable checks for the frontends in HAProxy (that they're marked as OPEN and the session limits haven't been reached).",
                    "set_if": "$haproxy_status_nofrontends$"
                },
                "--noservers": {
                    "description": "Disable checks for the servers in HAProxy (that they haven't reached the limits for the sessions or for queues).",
                    "set_if": "$haproxy_status_noservers$"
                },
                "--overrides": {
                    "description": "Override the defaults for a particular frontend or backend, in the form {name}:{override}, where {override} is the same format as --defaults above.",
                    "value": "$haproxy_status_overrides$"
                },
                "--servers": {
                    "description": "Enable checks for the servers in HAProxy (that they haven't reached the limits for the sessions or for queues).",
                    "set_if": "$haproxy_status_servers$"
                },
                "--socket": {
                    "description": "Path to the socket check_haproxy should connect to",
                    "required": true,
                    "value": "$haproxy_status_socket$"
                }
            },
            "command": "check_haproxy_status",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "haproxy_status",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000029"
        },
        "exception": {
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "exception",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000000c"
        },
        "vmware-esx-soap-host-runtime-storagehealth": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "storagehealth",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-runtime-storagehealth",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000cd",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "fping6": {
            "arguments": {
                "-I": {
                    "description": "source interface name",
                    "value": "$fping_source_interface$"
                },
                "-S": {
                    "description": "name or IP Address of sourceip",
                    "value": "$fping_source_ip$"
                },
                "-T": {
                    "description": "Target timeout (ms) (default: fping's default for -t)",
                    "value": "$fping_target_timeout$"
                },
                "-b": {
                    "description": "size of ICMP packet (default: 56)",
                    "value": "$fping_bytes$"
                },
                "-c": {
                    "description": "critical threshold pair",
                    "value": "$fping_crta$,$fping_cpl$%"
                },
                "-i": {
                    "description": "Interval (ms) between sending packets (default: fping's default for -p)",
                    "value": "$fping_interval$"
                },
                "-n": {
                    "description": "number of ICMP packets to send (default: 1)",
                    "value": "$fping_number$"
                },
                "-w": {
                    "description": "warning threshold pair",
                    "value": "$fping_wrta$,$fping_wpl$%"
                }
            },
            "command": "check_fping $fping_address$ -6",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "fping6",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000c2",
            "vars": {
                "fping_address": "$address6$",
                "fping_cpl": 15,
                "fping_crta": 200,
                "fping_interval": 500,
                "fping_number": 5,
                "fping_wpl": 5,
                "fping_wrta": 100
            }
        },
        "vmware-esx-soap-host-storage-lun": {
            "arguments": {
                "--alertonly": {
                    "set_if": "$vmware_alertonly$"
                },
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "storage",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "lun",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-storage-lun",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000004c",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "imap": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$imap_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$imap_ipv4$"
                },
                "-A": {
                    "description": "All expect strings need to occur in server response. Default is any.",
                    "set_if": "$imap_all$"
                },
                "-D": {
                    "description": "Minimum number of days a certificate has to be valid",
                    "value": "$imap_certificate_age$"
                },
                "-E": {
                    "description": "Can use \n, \r, \t or \\ in send or quit string. Must come before send or quit option. Default: nothing added to send, \r\n added to end of quit",
                    "value": "$imap_escape$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$imap_address$"
                },
                "-M": {
                    "description": "Accept expected string mismatches with states ok, warn, crit (default: warn)",
                    "value": "$imap_mismatch$"
                },
                "-S": {
                    "description": "Use SSL for the connection.",
                    "set_if": "$imap_ssl$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$imap_critical$"
                },
                "-d": {
                    "description": "Seconds to wait between sending string and polling for response",
                    "value": "$imap_delay$"
                },
                "-e": {
                    "description": "String to expect in server response (may be repeated)",
                    "value": "$imap_expect$"
                },
                "-j": {
                    "description": "Hide output from TCP socket.",
                    "set_if": "$imap_jail$"
                },
                "-m": {
                    "description": "Close connection once more than this number of bytes are received",
                    "value": "$imap_maxbytes$"
                },
                "-p": {
                    "description": "Port number (default: none)",
                    "value": "$imap_port$"
                },
                "-q": {
                    "description": "String to send server to initiate a clean close of the connection",
                    "value": "$imap_quit$"
                },
                "-r": {
                    "description": "Accept TCP refusals with states ok, warn, crit (default: crit)",
                    "value": "$imap_refuse$"
                },
                "-s": {
                    "description": "String to send to the server",
                    "value": "$imap_send$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$imap_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$imap_warning$"
                }
            },
            "command": "check_imap",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "imap",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000009b",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$imap_ipv4$",
                "check_ipv6": "$imap_ipv6$",
                "imap_address": "$check_address$"
            }
        },
        "snmp-load": {
            "arguments": {
                "-2": {
                    "description": "Use snmp v2c",
                    "set_if": "$snmp_v2$"
                },
                "-C": {
                    "description": "Community name for the host's SNMP agent (implies v1 protocol)",
                    "set_if": "$snmp_nocrypt$",
                    "value": "$snmp_community$"
                },
                "-H": {
                    "description": "Name or IP address of host to check",
                    "value": "$snmp_address$"
                },
                "-L": {
                    "description": "<authproto>,<privproto> - <Authentication protocol (md5|sha : default md5)>,<Priv protocole (des|aes : default des)>",
                    "set_if": "$snmp_v3_use_authprotocol$",
                    "value": "$snmp_authprotocol$"
                },
                "-T": {
                    "description": "CPU check",
                    "value": "$snmp_load_type$"
                },
                "-X": {
                    "description": "Priv password for snmpv3 (AuthPriv protocol)",
                    "set_if": "$snmp_v3_use_privpass$",
                    "value": "$snmp_privpass$"
                },
                "-c": "$snmp_crit$",
                "-f": {
                    "description": "Perfparse compatible output",
                    "set_if": "$snmp_perf$"
                },
                "-l": {
                    "description": "Login and auth password for snmpv3 authentication",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_login$"
                },
                "-p": {
                    "description": "SNMP port (Default 161)",
                    "value": "$snmp_port$"
                },
                "-t": {
                    "description": "Timeout for SNMP in seconds (Default: 5)",
                    "value": "$snmp_timeout$"
                },
                "-w": "$snmp_warn$",
                "-x": {
                    "description": "Priv password",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_password$"
                }
            },
            "command": "check_snmp_load.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "snmp-load",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000005b",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "snmp_address": "$check_address$",
                "snmp_authprotocol": "md5,des",
                "snmp_community": "public",
                "snmp_crit": 95,
                "snmp_load_type": "stand",
                "snmp_login": "snmpuser",
                "snmp_nocrypt": true,
                "snmp_perf": true,
                "snmp_timeout": "5",
                "snmp_v2": false,
                "snmp_v3": false,
                "snmp_v3_use_authprotocol": false,
                "snmp_v3_use_privpass": false,
                "snmp_warn": 85
            }
        },
        "random": {
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "random",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000054"
        },
        "vmware-esx-soap-host-io-total-latency": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "total_latency",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-total-latency",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000077",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "jmx4perl": {
            "arguments": {
                "--alias": {
                    "description": "Alias name for attribute (e.g. MEMORY_HEAP_USED)",
                    "value": "$jmx4perl_alias$"
                },
                "--base-attribute": {
                    "description": "Base attribute for a relative check. Used together with base-mbean",
                    "value": "$jmx4perl_base_attribute$"
                },
                "--base-mbean": {
                    "description": "Base MBean name, interprets critical and warning values as relative in the range 0 .. 100%. Requires a base-attribute, too",
                    "value": "$jmx4perl_base_mbean$"
                },
                "--base-path": {
                    "description": "Base path for relative checks, where this path is used on the base attribute's value",
                    "value": "$jmx4perl_base_path$"
                },
                "--check": {
                    "description": "Name of a check configuration as defined in the configuration file, use array if you need arguments.",
                    "repeat_key": false,
                    "value": "$jmx4perl_check$",
                    "order": "1"
                },
                "--config": {
                    "description": "Path to configuration file.",
                    "value": "$jmx4perl_config$"
                },
                "--delta": {
                    "description": "Switches on incremental mode. Optional argument are seconds used for normalizing.",
                    "value": "$jmx4perl_delta$"
                },
                "--method": {
                    "description": "HTTP method to use. Either get or post",
                    "value": "$jmx4perl_method$"
                },
                "--null": {
                    "description": "Value which should be used in case of a null return value of an operation or attribute. Is null by default",
                    "value": "$jmx4perl_null$"
                },
                "--numeric": {
                    "description": "Force numeric comparison for critical and warning checks",
                    "set_if": "$jmx4perl_numeric$"
                },
                "--password": {
                    "description": "Password for HTTP authentication",
                    "value": "$jmx4perl_password$"
                },
                "--perfdata": {
                    "description": "Whether performance data should be omitted, which are included by default.",
                    "value": "$jmx4perl_perfdata$"
                },
                "--product": {
                    "description": "Name of app server product (e.g. jboss)",
                    "value": "$jmx4perl_product$"
                },
                "--proxy": {
                    "description": "Proxy to use",
                    "value": "$jmx4perl_proxy$"
                },
                "--server": {
                    "description": "Symbolic name of server url to use, which needs to be configured in the configuration file.",
                    "value": "$jmx4perl_server$"
                },
                "--string": {
                    "description": "Force string comparison for critical and warning checks",
                    "set_if": "$jmx4perl_string$"
                },
                "--target": {
                    "description": "JSR-160 Service URL specifing the target server",
                    "value": "$jmx4perl_target$"
                },
                "--target-password": {
                    "description": "Password to use for JSR-160 connection",
                    "value": "$jmx4perl_target_password$"
                },
                "--target-user": {
                    "description": "Username to use for JSR-160 connection",
                    "value": "$jmx4perl_target_user$"
                },
                "--unit": {
                    "description": "Unit of measurement of the data retreived. Recognized values are [B|KB|MN|GB|TB] for memory values and [us|ms|s|m|h|d] for time values",
                    "value": "$jmx4perl_unit$"
                },
                "--unknown-is-critical": {
                    "description": "Map UNKNOWN errors to errors with a CRITICAL status",
                    "set_if": "$jmx4perl_unknown_is_critical$"
                },
                "--user": {
                    "description": "User for HTTP authentication",
                    "value": "$jmx4perl_user$"
                },
                "--value": {
                    "description": "Shortcut for specifying mbean/attribute/path. Slashes within names must be escaped with backslash",
                    "value": "$jmx4perl_value$"
                },
                "-a": {
                    "description": "Attribute name (e.g. HeapMemoryUsage)",
                    "value": "$jmx4perl_attribute$"
                },
                "-b": {
                    "description": "Base name, which when given, interprets critical and warning values as relative in the range 0 .. 100%. Must be given in the form mbean/attribute/path",
                    "value": "$jmx4perl_base$"
                },
                "-c": {
                    "description": "Critical threshold for value",
                    "value": "$jmx4perl_critical$"
                },
                "-l": {
                    "description": "Label to be used for printing out the result of the check. Placeholders can be used.",
                    "value": "$jmx4perl_label$"
                },
                "-m": {
                    "description": "MBean name (e.g. java.lang:type=Memory)",
                    "value": "$jmx4perl_mbean$"
                },
                "-n": {
                    "description": "Name to use for output. Optional, by default a standard value based on the MBean and attribute will be used",
                    "value": "$jmx4perl_name$"
                },
                "-o": {
                    "description": "Operation to execute",
                    "value": "$jmx4perl_operation$"
                },
                "-p": {
                    "description": "Inner path for extracting a single value from a complex attribute or return value (e.g. used)",
                    "value": "$jmx4perl_path$"
                },
                "-t": {
                    "description": "Seconds before plugin times out (default: 15)",
                    "value": "$jmx4perl_timeout$"
                },
                "-u": {
                    "description": "URL to agent web application (e.g. http://server:8080/jolokia/)",
                    "value": "$jmx4perl_url$"
                },
                "-w": {
                    "description": "Warning threshold for value",
                    "value": "$jmx4perl_warning$"
                }
            },
            "command": "check_jmx4perl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "jmx4perl",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000075",
            "vars": {
                "jmx4perl_numeric": false,
                "jmx4perl_string": false,
                "jmx4perl_unknown_is_critical": false,
                "jmx4perl_url": "http://$address$:8080/jolokia"
            }
        },
        "simap": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$simap_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$simap_ipv4$"
                },
                "-A": {
                    "description": "All expect strings need to occur in server response. Default is any.",
                    "set_if": "$simap_all$"
                },
                "-D": {
                    "description": "Minimum number of days a certificate has to be valid",
                    "value": "$simap_certificate_age$"
                },
                "-E": {
                    "description": "Can use \n, \r, \t or \\ in send or quit string. Must come before send or quit option. Default: nothing added to send, \r\n added to end of quit",
                    "value": "$simap_escape$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$simap_address$"
                },
                "-M": {
                    "description": "Accept expected string mismatches with states ok, warn, crit (default: warn)",
                    "value": "$simap_mismatch$"
                },
                "-S": {
                    "description": "Use SSL for the connection.",
                    "set_if": "$simap_ssl$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$simap_critical$"
                },
                "-d": {
                    "description": "Seconds to wait between sending string and polling for response",
                    "value": "$simap_delay$"
                },
                "-e": {
                    "description": "String to expect in server response (may be repeated)",
                    "value": "$simap_expect$"
                },
                "-j": {
                    "description": "Hide output from TCP socket.",
                    "set_if": "$simap_jail$"
                },
                "-m": {
                    "description": "Close connection once more than this number of bytes are received",
                    "value": "$simap_maxbytes$"
                },
                "-p": {
                    "description": "Port number (default: none)",
                    "value": "$simap_port$"
                },
                "-q": {
                    "description": "String to send server to initiate a clean close of the connection",
                    "value": "$simap_quit$"
                },
                "-r": {
                    "description": "Accept TCP refusals with states ok, warn, crit (default: crit)",
                    "value": "$simap_refuse$"
                },
                "-s": {
                    "description": "String to send to the server",
                    "value": "$simap_send$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$simap_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$simap_warning$"
                }
            },
            "command": "check_simap",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "simap",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000003c",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$simap_ipv4$",
                "check_ipv6": "$simap_ipv6$",
                "simap_address": "$check_address$"
            }
        },
        "cloudera_hdfs_space": {
            "arguments": {
                "-H": {
                    "description": "Namenode host",
                    "required": true,
                    "value": "$cloudera_hdfs_space_host$"
                },
                "-P": {
                    "description": "Namenode port (default 50070)",
                    "required": false,
                    "value": "$cloudera_hdfs_space_port$"
                },
                "-c": {
                    "description": "Critical threshold in percent",
                    "required": true,
                    "value": "$cloudera_hdfs_space_crit$"
                },
                "-d": {
                    "description": "HDFS disk to check",
                    "required": true,
                    "value": "$cloudera_hdfs_space_disk$"
                },
                "-w": {
                    "description": "Warning threshold in percent",
                    "required": true,
                    "value": "$cloudera_hdfs_space_warn$"
                }
            },
            "command": "check_cloudera_hdfs_space.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "cloudera_hdfs_space",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000030"
        },
        "oracle_health": {
            "arguments": {
                "--commit": {
                    "description": "turns on autocommit for the dbd::oracle module",
                    "set_if": "$oracle_health_commit$"
                },
                "--connect": {
                    "description": "the connect string",
                    "value": "$oracle_health_connect$"
                },
                "--critical": {
                    "description": "the critical range",
                    "value": "$oracle_health_critical$"
                },
                "--ident": {
                    "description": "outputs instance and database names",
                    "set_if": "$oracle_health_ident$"
                },
                "--method": {
                    "description": "how the plugin should connect to the database (dbi for using DBD::Oracle (default), sqlplus for using the sqlplus-Tool)",
                    "value": "$oracle_health_method$"
                },
                "--mode": {
                    "description": "the mode of the plugin",
                    "value": "$oracle_health_mode$"
                },
                "--name": {
                    "description": "the name of the tablespace, datafile, wait event, latch, enqueue, or sql statement depending on the mode",
                    "value": "$oracle_health_name$"
                },
                "--name2": {
                    "description": "if name is a sql statement, name2 can be used to appear in the output and the performance data",
                    "value": "$oracle_health_name2$"
                },
                "--noperfdata": {
                    "description": "do not output performance data",
                    "set_if": "$oracle_health_noperfdata$"
                },
                "--notemp": {
                    "description": "exclude temporary and system tables",
                    "set_if": "$oracle_health_notemp$"
                },
                "--password": {
                    "description": "the oracle user's password",
                    "value": "$oracle_health_password$"
                },
                "--regexp": {
                    "description": "name will be interpreted as a regular expression",
                    "set_if": "$oracle_health_regexp$"
                },
                "--report": {
                    "description": "select the plugin output format. Can be short, long or html. Default is long",
                    "value": "$oracle_health_report$"
                },
                "--timeout": {
                    "description": "plugin timeout. Default is 60 seconds",
                    "value": "$oracle_health_timeout$"
                },
                "--units": {
                    "description": "This is used for a better output of mode=sql and for specifying thresholds for mode=tablespace-free",
                    "value": "$oracle_health_units$"
                },
                "--username": {
                    "description": "the oracle user",
                    "value": "$oracle_health_username$"
                },
                "--warning": {
                    "description": "the warning range",
                    "value": "$oracle_health_warning$"
                }
            },
            "command": "check_oracle_health",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "oracle_health",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000095",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "oracle_health_commit": false,
                "oracle_health_ident": false,
                "oracle_health_noperfdata": false,
                "oracle_health_notemp": false,
                "oracle_health_regexp": false,
                "oracle_health_report": "long",
                "oracle_home": "/usr/lib/oracle/11.2/client64/lib",
                "oracle_ld_library_path": "/usr/lib/oracle/11.2/client64/lib",
                "oracle_tns_admin": "/etc/icinga2/plugin-configs"
            }
        },
        "fping4": {
            "arguments": {
                "-I": {
                    "description": "source interface name",
                    "value": "$fping_source_interface$"
                },
                "-S": {
                    "description": "name or IP Address of sourceip",
                    "value": "$fping_source_ip$"
                },
                "-T": {
                    "description": "Target timeout (ms) (default: fping's default for -t)",
                    "value": "$fping_target_timeout$"
                },
                "-b": {
                    "description": "size of ICMP packet (default: 56)",
                    "value": "$fping_bytes$"
                },
                "-c": {
                    "description": "critical threshold pair",
                    "value": "$fping_crta$,$fping_cpl$%"
                },
                "-i": {
                    "description": "Interval (ms) between sending packets (default: fping's default for -p)",
                    "value": "$fping_interval$"
                },
                "-n": {
                    "description": "number of ICMP packets to send (default: 1)",
                    "value": "$fping_number$"
                },
                "-w": {
                    "description": "warning threshold pair",
                    "value": "$fping_wrta$,$fping_wpl$%"
                }
            },
            "command": "check_fping $fping_address$ -4",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "fping4",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000c5",
            "vars": {
                "fping_address": "$address$",
                "fping_cpl": 15,
                "fping_crta": 200,
                "fping_interval": 500,
                "fping_number": 5,
                "fping_wpl": 5,
                "fping_wrta": 100
            }
        },
        "apache-status": {
            "arguments": {
                "-H": {
                    "description": "name or IP address of host to check",
                    "value": "$apache_status_address$"
                },
                "-N": {
                    "description": "do not validate the SSL certificate chain",
                    "set_if": "$apache_status_no_validate$"
                },
                "-P": {
                    "description": "password for basic auth",
                    "value": "$apache_status_password$"
                },
                "-R": {
                    "description": "CRITICAL if socket timed out or http code >= 500",
                    "set_if": "$apache_status_unreachable$"
                },
                "-U": {
                    "description": "username for basic auth",
                    "value": "$apache_status_username$"
                },
                "-c": {
                    "description": "number of open slots, busy workers and idle workers that will cause a CRITICAL",
                    "value": "$apache_status_critical$"
                },
                "-p": {
                    "description": "the http port",
                    "value": "$apache_status_port$"
                },
                "-s": {
                    "description": "Whether we should use HTTPS instead of HTTP",
                    "set_if": "$apache_status_ssl$"
                },
                "-t": {
                    "description": "timeout in seconds",
                    "value": "$apache_status_timeout$"
                },
                "-u": {
                    "description": "Specific URL to use, instead of the default 'http://<apache_status_address>/server-status'",
                    "value": "$apache_status_uri$"
                },
                "-w": {
                    "description": "number of open slots, busy workers and idle workers that will cause a WARNING",
                    "value": "$apache_status_warning$"
                }
            },
            "command": "check_apache_status.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "apache-status",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000008a",
            "vars": {
                "apache_status_address": "$check_address$",
                "apache_status_ssl": false,
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false
            }
        },
        "ssmtp": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$ssmtp_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$ssmtp_ipv4$"
                },
                "-A": {
                    "description": "All expect strings need to occur in server response. Default is any.",
                    "set_if": "$ssmtp_all$"
                },
                "-D": {
                    "description": "Minimum number of days a certificate has to be valid",
                    "value": "$ssmtp_certificate_age$"
                },
                "-E": {
                    "description": "Can use \n, \r, \t or \\ in send or quit string. Must come before send or quit option. Default: nothing added to send, \r\n added to end of quit",
                    "value": "$ssmtp_escape$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$ssmtp_address$"
                },
                "-M": {
                    "description": "Accept expected string mismatches with states ok, warn, crit (default: warn)",
                    "value": "$ssmtp_mismatch$"
                },
                "-S": {
                    "description": "Use SSL for the connection.",
                    "set_if": "$ssmtp_ssl$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$ssmtp_critical$"
                },
                "-d": {
                    "description": "Seconds to wait between sending string and polling for response",
                    "value": "$ssmtp_delay$"
                },
                "-e": {
                    "description": "String to expect in server response (may be repeated)",
                    "value": "$ssmtp_expect$"
                },
                "-j": {
                    "description": "Hide output from TCP socket.",
                    "set_if": "$ssmtp_jail$"
                },
                "-m": {
                    "description": "Close connection once more than this number of bytes are received",
                    "value": "$ssmtp_maxbytes$"
                },
                "-p": {
                    "description": "Port number (default: none)",
                    "value": "$ssmtp_port$"
                },
                "-q": {
                    "description": "String to send server to initiate a clean close of the connection",
                    "value": "$ssmtp_quit$"
                },
                "-r": {
                    "description": "Accept TCP refusals with states ok, warn, crit (default: crit)",
                    "value": "$ssmtp_refuse$"
                },
                "-s": {
                    "description": "String to send to the server",
                    "value": "$ssmtp_send$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$ssmtp_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$ssmtp_warning$"
                }
            },
            "command": "check_ssmtp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ssmtp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000066",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$ssmtp_ipv4$",
                "check_ipv6": "$ssmtp_ipv6$",
                "ssmtp_address": "$check_address$"
            }
        },
        "vmware-esx-soap-vm-cpu": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "cpu",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-cpu",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000087",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "icingacli-elasticsearch": {
            "arguments": {
                "--crit": {
                    "description": "Critical threshold",
                    "value": "$icingacli_elasticsearch_critical$"
                },
                "--filter": {
                    "description": "Filter for events",
                    "value": "$icingacli_elasticsearch_filter$"
                },
                "--from": {
                    "description": "Negative value of time to search from now",
                    "value": "$icingacli_elasticsearch_from$"
                },
                "--index": {
                    "description": "Index pattern to use when searching",
                    "value": "$icingacli_elasticsearch_index$"
                },
                "--instance": {
                    "description": "Elasticsearch instance to connect to",
                    "value": "$icingacli_elasticsearch_instance$"
                },
                "--warn": {
                    "description": "Warning threshold",
                    "value": "$icingacli_elasticsearch_warning$"
                }
            },
            "command": "/usr/bin/icingacli elasticsearch check",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "icingacli-elasticsearch",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000b1"
        },
        "http": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$http_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$http_ipv4$"
                },
                "--invert-regex": {
                    "description": "Return CRITICAL if found, OK if not",
                    "set_if": "$http_invertregex$"
                },
                "--no-body": {
                    "description": "Don't wait for document body: stop reading after headers",
                    "set_if": "$http_ignore_body$"
                },
                "--sni": {
                    "description": "Enable SSL/TLS hostname extension support (SNI)",
                    "set_if": "$http_sni$"
                },
                "-A": {
                    "description": "String to be sent in http header as User Agent",
                    "value": "$http_useragent$"
                },
                "-C": {
                    "description": "Minimum number of days a certificate has to be valid. This parameter explicitely sets the port to 443 and ignores the URL if passed.",
                    "value": "$http_certificate$"
                },
                "-E": {
                    "description": "Print additional perfdata",
                    "set_if": "$http_extendedperfdata$"
                },
                "-H": {
                    "description": "Host name argument for servers using host headers (virtual host)",
                    "value": "$http_vhost$"
                },
                "-I": {
                    "description": "IP address or name (use numeric address if possible to bypass DNS lookup)",
                    "value": "$http_address$"
                },
                "-J": {
                    "description": "Name of file contains the client certificate (PEM format)",
                    "value": "$http_clientcert$"
                },
                "-K": {
                    "description": "Name of file contains the private key (PEM format)",
                    "value": "$http_privatekey$"
                },
                "-L": {
                    "description": "Wrap output in HTML link",
                    "set_if": "$http_link$"
                },
                "-M": {
                    "description": "Warn if document is more than seconds old",
                    "value": "$http_maxage$"
                },
                "-P": {
                    "description": "URL encoded http POST data",
                    "value": "$http_post$"
                },
                "-R": {
                    "description": "Search page for case-insensitive regex",
                    "value": "$http_expect_body_eregi$",
                    "order": "2"
                },
                "-S": {
                    "description": "Connect via SSL",
                    "set_if": "$http_ssl$"
                },
                "-S1": {
                    "description": "Connect via SSL version TLSv1",
                    "set_if": "$http_ssl_force_tlsv1$"
                },
                "-S1+": {
                    "description": "Connect via SSL version TLSv1 and newer",
                    "set_if": "$http_ssl_force_tlsv1_or_higher$"
                },
                "-S1.1": {
                    "description": "Connect via SSL version TLSv1.1",
                    "set_if": "$http_ssl_force_tlsv1_1$"
                },
                "-S1.1+": {
                    "description": "Connect via SSL version TLSv1.1 and newer",
                    "set_if": "$http_ssl_force_tlsv1_1_or_higher$"
                },
                "-S1.2": {
                    "description": "Connect via SSL version TLSv1.2",
                    "set_if": "$http_ssl_force_tlsv1_2$"
                },
                "-S1.2+": {
                    "description": "Connect via SSL version TLSv1.2 and newer",
                    "set_if": "$http_ssl_force_tlsv1_2_or_higher$"
                },
                "-S2": {
                    "description": "Connect via SSL version SSLv2",
                    "set_if": "$http_ssl_force_sslv2$"
                },
                "-S2+": {
                    "description": "Connect via SSL version SSLv2 and newer",
                    "set_if": "$http_ssl_force_sslv2_or_higher$"
                },
                "-S3": {
                    "description": "Connect via SSL version SSLv3",
                    "set_if": "$http_ssl_force_sslv3$"
                },
                "-S3+": {
                    "description": "Connect via SSL version SSLv3 and newer",
                    "set_if": "$http_ssl_force_sslv3_or_higher$"
                },
                "-T": {
                    "description": "Specify Content-Type header when POSTing",
                    "value": "$http_contenttype$"
                },
                "-a": {
                    "description": "Username:password on sites with basic authentication",
                    "value": "$http_auth_pair$"
                },
                "-b": {
                    "description": "Username:password on proxy-servers with basic authentication",
                    "value": "$http_proxy_auth_pair$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$http_critical_time$"
                },
                "-d": {
                    "description": "String to expect in the response headers",
                    "value": "$http_headerstring$"
                },
                "-e": {
                    "description": "Comma-delimited list of strings, at least one of them is expected in the first (status) line of the server response (default: HTTP/1.)",
                    "value": "$http_expect$"
                },
                "-f": {
                    "description": "How to handle redirect pages",
                    "value": "$http_onredirect$"
                },
                "-j": {
                    "description": "Set http method (for example: HEAD, OPTIONS, TRACE, PUT, DELETE)",
                    "value": "$http_method$"
                },
                "-k": {
                    "description": "Any other tags to be sent in http header",
                    "value": "$http_header$"
                },
                "-l": {
                    "description": "Allow regex to span newline",
                    "set_if": "$http_linespan$",
                    "order": "1"
                },
                "-m": {
                    "description": "Minim page size required:Maximum page size required",
                    "value": "$http_pagesize$"
                },
                "-p": {
                    "description": "Port number (default: 80)",
                    "value": "$http_port$"
                },
                "-r": {
                    "description": "Search page for regex",
                    "value": "$http_expect_body_regex$",
                    "order": "2"
                },
                "-s": {
                    "description": "String to expect in the content",
                    "value": "$http_string$"
                },
                "-t": {
                    "description": "Seconds before connection times out",
                    "value": "$http_timeout$"
                },
                "-u": {
                    "description": "URL to GET or POST (default: /)",
                    "value": "$http_uri$"
                },
                "-v": {
                    "description": "Show details for command-line debugging",
                    "set_if": "$http_verbose$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$http_warn_time$"
                }
            },
            "command": "check_http",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "http",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000069",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$http_ipv4$",
                "check_ipv6": "$http_ipv6$",
                "http_address": "$check_address$",
                "http_invertregex": false,
                "http_linespan": false,
                "http_link": false,
                "http_sni": false,
                "http_ssl": false,
                "http_verbose": false
            }
        },
        "vmware-esx-dc-runtime-listvms": {
            "arguments": {
                "--alertonly": {
                    "set_if": "$vmware_alertonly$"
                },
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--cluster": {
                    "description": "ESX or ESXi clustername.",
                    "required": false,
                    "value": "$vmware_cluster$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": true,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "listvms",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-dc-runtime-listvms",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000e3",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "perfmon-windows": {
            "arguments": {
                "--fmt-countertype": {
                    "description": "Performance counter type",
                    "value": "$perfmon_win_type$"
                },
                "--perf-syntax": {
                    "description": "Use this instead of the counter name in the perfomance data",
                    "value": "$perfmon_win_syntax$"
                },
                "--performance-wait": {
                    "description": "Wait time between two counter collections in ms",
                    "value": "$perfmon_win_wait$"
                },
                "-P": {
                    "description": "The Performance Counter string",
                    "required": true,
                    "value": "$perfmon_win_counter$"
                },
                "-c": {
                    "description": "Critical threshold",
                    "value": "$perfmon_win_crit$"
                },
                "-w": {
                    "description": "Warning threshold",
                    "value": "$perfmon_win_warn$"
                }
            },
            "command": "check_perfmon.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "perfmon-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000008d",
            "vars": {
                "perfmon_win_type": "double",
                "performance_win_wait": 1000
            }
        },
        "flexlm": {
            "arguments": {
                "-F": {
                    "description": "Name of license file (usually license.dat)",
                    "required": true,
                    "value": "$flexlm_licensefile$"
                },
                "-t": {
                    "description": "Plugin time out in seconds (default = 15)",
                    "value": "$flexlm_timeout$"
                }
            },
            "command": "check_flexlm",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "flexlm",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000002c"
        },
        "varnish": {
            "arguments": {
                "-c": {
                    "description": "Set critical threshold: [@][lo:]hi",
                    "value": "$varnish_critical$"
                },
                "-n": {
                    "description": "Specify the Varnish instance name",
                    "value": "$varnish_name$"
                },
                "-p": {
                    "description": "Specify the parameter to check (see below). The default is 'ratio'.",
                    "value": "$varnish_param$"
                },
                "-w": {
                    "description": "Set warning threshold: [@][lo:]hi",
                    "value": "$varnish_warning$"
                }
            },
            "command": "check_varnish",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "varnish",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000006"
        },
        "vmware-esx-soap-host-cpu": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "cpu",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-cpu",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000015",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_crit": "90%",
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90",
                "vmware_warn": "80%"
            }
        },
        "vmware-esx-soap-vm-net-send": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "net",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "send",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-net-send",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000ca",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-storage-adapter": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "storage",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "adapter",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-storage-adapter",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000014",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "lsyncd": {
            "arguments": {
                "-c": {
                    "description": "Critical if more then N delays (default: 100).",
                    "value": "$lsyncd_critical$"
                },
                "-s": {
                    "description": "Set status file path (default: /var/run/lsyncd.status).",
                    "value": "$lsyncd_statfile$"
                },
                "-w": {
                    "description": "Warning if more than N delays (default: 10).",
                    "value": "$lsyncd_warning$"
                }
            },
            "command": "check_lsyncd",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "lsyncd",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000002f"
        },
        "vmware-esx-soap-vm-net-receive": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "net",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "receive",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-net-receive",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000008c",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "mssql_health": {
            "arguments": {
                "--blacklist": {
                    "description": "Blacklist some (missing/failed) components",
                    "value": "$mssql_health_blacklist$"
                },
                "--commit": {
                    "description": "turns on autocommit for the dbd::sybase module",
                    "set_if": "$mssql_health_commit$"
                },
                "--critical": {
                    "description": "the critical range",
                    "value": "$mssql_health_critical$"
                },
                "--criticalx": {
                    "description": "The extended critical thresholds",
                    "value": "$mssql_health_criticalx$"
                },
                "--currentdb": {
                    "description": "the name of a database which is used as the current database for the connection",
                    "value": "$mssql_health_currentdb$"
                },
                "--dbthresholds": {
                    "description": "Read thresholds from a database table",
                    "value": "$mssql_health_dbthresholds$"
                },
                "--environment": {
                    "description": "Add a variable to the plugin's environment.",
                    "value": "$mssql_health_environment$"
                },
                "--extra-opts": {
                    "description": "read command line arguments from an external file",
                    "value": "$mssql_health_extraopts$"
                },
                "--hostname": {
                    "description": "the database server's hostname",
                    "value": "$mssql_health_hostname$"
                },
                "--isvalidtime": {
                    "description": "Signals the plugin to return OK if now is not a valid check time.",
                    "value": "$mssql_health_isvalidtime$"
                },
                "--lookback": {
                    "description": "The amount of time you want to look back when calculating average rates",
                    "value": "$mssql_health_lookback$"
                },
                "--method": {
                    "description": "how the plugin should connect to the database (dbi for using DBD::Sybase (default), sqlrelay for the SQLRelay proxy)",
                    "value": "$mssql_health_method$"
                },
                "--mitigation": {
                    "description": "The parameter allows you to change a critical error to a warning.",
                    "value": "$mssql_health_mitigation$"
                },
                "--mode": {
                    "description": "the mode of the plugin",
                    "value": "$mssql_health_mode$"
                },
                "--morphmessage": {
                    "description": "Modify the final output message.",
                    "value": "$mssql_health_morphmessage$"
                },
                "--morphperfdata": {
                    "description": "The parameter allows you to change performance data labels.",
                    "value": "$mssql_health_morphperfdata$"
                },
                "--multiline": {
                    "description": "Multiline output.",
                    "value": "$mssql_health_multiline$"
                },
                "--name": {
                    "description": "the name of the database etc depending on the mode",
                    "value": "$mssql_health_name$"
                },
                "--name2": {
                    "description": "if name is a sql statement, name2 can be used to appear in the output and the performance data",
                    "value": "$mssql_health_name2$"
                },
                "--name3": {
                    "description": "The tertiary name of a component",
                    "value": "$mssql_health_name3$"
                },
                "--negate": {
                    "description": "Emulate the negate plugin. --negate warning=critical --negate unknown=critical.",
                    "value": "$mssql_health_negate$"
                },
                "--nooffline": {
                    "description": "Skip the offline databases",
                    "set_if": "$mssql_health_nooffline$"
                },
                "--notemp": {
                    "description": "Ignore temporary databases/tablespaces",
                    "set_if": "$mssql_health_notemp$"
                },
                "--offlineok": {
                    "description": "if offline databases are perfectly ok for you",
                    "set_if": "$mssql_health_offlineok$"
                },
                "--password": {
                    "description": "the mssql db user's password",
                    "value": "$mssql_health_password$"
                },
                "--port": {
                    "description": "the database's port",
                    "value": "$mssql_health_port$"
                },
                "--regexp": {
                    "description": "name will be interpreted as a regular expression",
                    "set_if": "$mssql_health_regexp$"
                },
                "--report": {
                    "description": "Report can be used to output only the bad news (short,long,html)",
                    "value": "$mssql_health_report$"
                },
                "--selectedperfdata": {
                    "description": "The parameter allows you to limit the list of performance data.",
                    "value": "$mssql_health_selectedperfdata$"
                },
                "--server": {
                    "description": "the name of a predefined connection",
                    "value": "$mssql_health_server$"
                },
                "--statefilesdir": {
                    "description": "An alternate directory where the plugin can save files.",
                    "value": "$mssql_health_statefilesdir$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 15)",
                    "value": "$mssql_health_timeout$"
                },
                "--units": {
                    "description": "This is used for a better output of mode=sql and for specifying thresholds for mode=tablespace-free",
                    "value": "$mssql_health_units$"
                },
                "--username": {
                    "description": "the mssql db user",
                    "value": "$mssql_health_username$"
                },
                "--warning": {
                    "description": "the warning range",
                    "value": "$mssql_health_warning$"
                },
                "--warningx": {
                    "description": "The extended warning thresholds",
                    "value": "$mssql_health_warningx$"
                },
                "--with-mymodules-dyn-dir": {
                    "description": "Add-on modules for the my-modes will be searched in this directory.",
                    "value": "$mssql_health_withmymodulesdyndir$"
                }
            },
            "command": "check_mssql_health",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "mssql_health",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000004a",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "mssql_health_commit": false,
                "mssql_health_nooffline": false,
                "mssql_health_notemp": false,
                "mssql_health_offlineok": false,
                "mssql_health_regexp": false,
                "mssql_health_report": "short"
            }
        },
        "dig": {
            "arguments": {
                "-6": {
                    "description": "Force dig to only use IPv6 query transport",
                    "set_if": "$dig_ipv6$"
                },
                "-4": {
                    "description": "Force dig to only use IPv4 query transport",
                    "set_if": "$dig_ipv4$"
                },
                "-A": {
                    "description": "Pass STRING as argument(s) to dig",
                    "value": "$dig_arguments$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$dig_server$"
                },
                "-T": {
                    "description": "Record type to lookup (default: A)",
                    "value": "$dig_record_type$"
                },
                "-a": {
                    "description": "An address expected to be in the answer section",
                    "value": "$dig_expected_address$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$dig_critical$"
                },
                "-l": {
                    "description": "Machine name to lookup",
                    "required": true,
                    "value": "$dig_lookup$"
                },
                "-p": {
                    "description": "Port number (default: 53)",
                    "value": "$dig_port$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$dig_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$dig_warning$"
                }
            },
            "command": "check_dig",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "dig",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000043",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$dig_ipv4$",
                "check_ipv6": "$dig_ipv6$",
                "dig_server": "$check_address$"
            }
        },
        "file_age": {
            "arguments": {
                "-C": {
                    "description": "File must be at least this many bytes long (default: 0B)",
                    "value": "$file_age_critical_size$"
                },
                "-W": {
                    "description": "File must be at least this many bytes long",
                    "value": "$file_age_warning_size$"
                },
                "-c": {
                    "description": "File must be no more than this many seconds old (default: 600s)",
                    "value": "$file_age_critical_time$"
                },
                "-f": {
                    "description": "File to monitor",
                    "value": "$file_age_file$"
                },
                "-i": {
                    "description": "return OK if the file does not exist",
                    "set_if": "$file_age_ignoremissing$"
                },
                "-w": {
                    "description": "File must be no more than this many seconds old (default: 240s)",
                    "value": "$file_age_warning_time$"
                }
            },
            "command": "check_file_age",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "file_age",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000019",
            "vars": {
                "file_age_ignoremissing": false
            }
        },
        "ipmi-sensor": {
            "arguments": {
                "--fru": {
                    "description": "Print the product serial number got by ipmi-fru",
                    "set_if": "$ipmi_show_fru$"
                },
                "--noentityabsent": {
                    "description": "Skip sensor checks for sensors that have 'noentityabsent' as event state",
                    "set_if": "$ipmi_noentityabsent$"
                },
                "--nosel": {
                    "description": "Turn off system event log checking via ipmi-sel",
                    "set_if": "$ipmi_no_sel_checking$"
                },
                "--nothresholds": {
                    "description": "Turn off performance data thresholds from output-sensor-thresholds",
                    "set_if": "$ipmi_no_thresholds$"
                },
                "-D": {
                    "description": "Change the protocol LAN version (default: LAN_2_0)",
                    "value": "$ipmi_protocol_lan_version$"
                },
                "-H": {
                    "description": "Hostname or ip address of the IPMI interface (default: host.address or host.address6)",
                    "value": "$ipmi_address$"
                },
                "-L": {
                    "description": "Privilege level of the user",
                    "value": "$ipmi_privilege_level$"
                },
                "-P": {
                    "description": "Password to use",
                    "value": "$ipmi_password$"
                },
                "-ST": {
                    "description": "Limit SEL entries to specific types. (seperated by comma)",
                    "value": "$ipmi_sel_type$"
                },
                "-T": {
                    "description": "Limit sensors to query based on IPMI sensor type (seperated by comma)",
                    "value": "$ipmi_sensor_type$"
                },
                "-U": {
                    "description": "Username to connect with",
                    "value": "$ipmi_username$"
                },
                "-b": {
                    "description": "Enable backward compatibility mode (for FreeIPMI 0.5.*)",
                    "set_if": "$ipmi_backward_compatibility_mode$"
                },
                "-f": {
                    "description": "Path to the FreeIPMI configuration file",
                    "value": "$ipmi_config_file$"
                },
                "-fc": {
                    "description": "Number of fans that should be active",
                    "value": "$ipmi_number_of_active_fans$"
                },
                "-i": {
                    "description": "Include sensor matching ipmi_sensor_id",
                    "value": "$ipmi_sensor_id$"
                },
                "-us": {
                    "description": "Path to the unify file to unify sensor names.",
                    "value": "$ipmi_unify_file$"
                },
                "-vv": {
                    "description": "Be Verbose multi line output, also with additional details for warnings",
                    "set_if": "$ipmi_verbose$"
                },
                "-vvv": {
                    "description": "Be Verbose debugging output, followed by normal multi line output",
                    "set_if": "$ipmi_debug$"
                },
                "-x": {
                    "description": "Exclude sensor matching ipmi_sensor_id",
                    "value": "$ipmi_exclude_sensor_id$"
                },
                "-xST": {
                    "description": "Exclude SEL entries of specific sensor types. (seperated by comma)",
                    "value": "$ipmi_exclude_sel$"
                },
                "-xT": {
                    "description": "Exclude sensors based on IPMI sensor type. (seperated by comma)",
                    "value": "$ipmi_exclude_sensor$"
                }
            },
            "command": "check_ipmi_sensor",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ipmi-sensor",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000008",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "ipmi_address": "$check_address$",
                "ipmi_protocol_lan_version": "LAN_2_0"
            }
        },
        "db2_health": {
            "arguments": {
                "--critical": {
                    "description": "the critical range",
                    "value": "$db2_health_critical$",
                    "order": "6"
                },
                "--database": {
                    "description": "the database to connect",
                    "value": "$db2_health_database$",
                    "order": "0"
                },
                "--hostname": {
                    "description": "the host to connect",
                    "set_if": "$db2_health_not_catalogued$",
                    "value": "$db2_health_hostname$",
                    "order": "-2"
                },
                "--lookback": {
                    "description": "How many days iin the past db2_health check should look back to calculate exitcode.",
                    "value": "$db2_health_lookback$"
                },
                "--maxinactivity": {
                    "description": "used for the maximum amount of time a certain event has not happened.",
                    "value": "$db2_health_maxinactivity$"
                },
                "--mitigation": {
                    "description": "let you classify the severity of an offline tablespace.",
                    "value": "$db2_health_mitigation$"
                },
                "--mode": {
                    "description": "the mode of the plugin",
                    "value": "$db2_health_mode$",
                    "order": "3"
                },
                "--name": {
                    "description": "the name of the tablespace, datafile, wait event, latch, enqueue, or sql statement depending on the mode",
                    "value": "$db2_health_name$",
                    "order": "4"
                },
                "--name2": {
                    "description": "if name is a sql statement, name2 can be used to appear in the output and the performance data",
                    "value": "$db2_health_name2$",
                    "order": "7"
                },
                "--password": {
                    "description": "the db2 user's password",
                    "value": "$db2_health_password$",
                    "order": "2"
                },
                "--port": {
                    "description": "the db2 port for connection",
                    "value": "$db2_health_port$",
                    "order": "-1"
                },
                "--regexp": {
                    "description": "name will be interpreted as a regular expression",
                    "set_if": "$db2_health_regexp$"
                },
                "--report": {
                    "description": "Report can be used to output only the bad news (short,long,html)",
                    "value": "$db2_health_report$"
                },
                "--units": {
                    "description": "This is used for a better output of mode=sql and for specifying thresholds for mode=tablespace-free",
                    "value": "$db2_health_units$"
                },
                "--username": {
                    "description": "the db2 user",
                    "value": "$db2_health_username$",
                    "order": "1"
                },
                "--warning": {
                    "description": "the warning range",
                    "value": "$db2_health_warning$",
                    "order": "5"
                }
            },
            "command": "check_db2_health",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "db2_health",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000b4",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "db2_health_env_db2_home": "/opt/ibm/db2/V10.5",
                "db2_health_env_db2_version": "10.5",
                "db2_health_hostname": "$check_address$",
                "db2_health_not_catalogued": true,
                "db2_health_regexp": false,
                "db2_health_report": "short"
            }
        },
        "cluster-zone": {
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "cluster-zone",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000040",
            "vars": {
                "cluster_zone": "$host.name$"
            }
        },
        "vmware-esx-soap-host-check": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": {
                    "description": "Simple check to verify a successfull connection to VMWare SOAP API.",
                    "value": "soap"
                },
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-check",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000005",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "icingacli-x509": {
            "arguments": {
                "--allow-self-signed": {
                    "description": "Ignore if a certificate or its issuer has been self-signed",
                    "set_if": "$icingacli_x509_allow_self_signed$"
                },
                "--critical": {
                    "description": "Less remaining time results in state CRITICAL",
                    "value": "$icingacli_x509_critical$"
                },
                "--host": {
                    "description": "A hosts name",
                    "value": "$icingacli_x509_host$"
                },
                "--ip": {
                    "description": "A hosts IP address",
                    "value": "$icingacli_x509_ip$"
                },
                "--port": {
                    "description": "The port to check in particular",
                    "value": "$icingacli_x509_port$"
                },
                "--warning": {
                    "description": "Less remaining time results in state WARNING",
                    "value": "$icingacli_x509_warning$"
                }
            },
            "command": "/usr/bin/icingacli x509 check host",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "icingacli-x509",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000004b"
        },
        "swap": {
            "arguments": {
                "-a": {
                    "description": "Conduct comparisons for all swap partitions, one by one",
                    "set_if": "$swap_allswaps$"
                },
                "-c": {
                    "type": "Function",
                    "body": "/* Unable to fetch function body through API */"
                },
                "-n": {
                    "description": "Resulting state when there is no swap regardless of thresholds. Possible values are \"ok\", \"warning\", \"critical\", \"unknown\". Defaults to \"critical\"",
                    "value": "$swap_noswap$"
                },
                "-w": {
                    "type": "Function",
                    "body": "/* Unable to fetch function body through API */"
                }
            },
            "command": "check_swap",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "swap",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000085",
            "vars": {
                "swap_allswaps": false,
                "swap_cfree": 25,
                "swap_integer": false,
                "swap_wfree": 50
            }
        },
        "webinject": {
            "arguments": {
                "-c": {
                    "description": "There is a configuration file named 'config.xml' that is used to store configuration settings for your project. You can use this to specify which test case files to run and to set some constants and settings to be used by WebInject.",
                    "value": "$webinject_config_file$"
                },
                "-n": {
                    "description": "Suppresses all output to STDOUT except the results summary.",
                    "set_if": "$webinject_no_output$"
                },
                "-o": {
                    "description": "This option is followed by a directory name or a prefix to prepended to the output files. This is used to specify the location for writing output files (http.log, results.html, and results.xml). If a directory name is supplied (use either an absolute or relative path and make sure to add the trailing slash), all output files are written to this directory. If the trailing slash is ommitted, it is assumed to a prefix and this will be prepended to the output files. You may also use a combination of a directory and prefix.",
                    "value": "$webinject_output$"
                },
                "-r": {
                    "description": "This setting is used to enable output formatting that is compatible for use with specific external programs. The available values you can set this to are: nagios, mrtg, external and standard",
                    "value": "$webinject_report_type$"
                },
                "-s": {
                    "description": "key=value",
                    "value": "$webinject_key_value$"
                },
                "-t": {
                    "description": "The value [given in seconds] will be compared to the global time elapsed to run all the tests. If the tests have all been successful, but have taken more time than the 'globaltimeout' value, a warning message is sent back to Icinga.",
                    "value": "$webinject_timeout$"
                },
                "testcase_file": {
                    "description": "When you launch WebInject in console mode, you can optionally supply an argument for a testcase file to run. It will look for this file in the directory that webinject.pl resides in. If no filename is passed from the command line, it will look in config.xml for testcasefile declarations. If no files are specified, it will look for a default file named 'testcases.xml' in the current [webinject] directory. If none of these are found, the engine will stop and give you an error.",
                    "skip_key": true,
                    "value": "$webinject_testcase_file$",
                    "order": "1"
                }
            },
            "command": "check_webinject",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "webinject",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000d2"
        },
        "vmware-esx-soap-host-mem-overhead": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "mem",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "overhead",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-mem-overhead",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000a4",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-io-write-latency": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "write_latency",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-write-latency",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000042",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "iftraffic": {
            "arguments": {
                "-C": {
                    "description": "SNMP community. Defaults to 'public' if omitted.",
                    "value": "$iftraffic_community$"
                },
                "-H": {
                    "description": "Check interface on the indicated host.",
                    "required": true,
                    "value": "$iftraffic_address$"
                },
                "-M": {
                    "description": "Max counter value of net devices in kilo/mega/giga/bytes.",
                    "value": "$iftraffic_max_counter$"
                },
                "-V": {
                    "description": "SNMP version. Defaults to '1' if omitted.",
                    "value": "$iftraffic_version$"
                },
                "-b": {
                    "description": "Interface maximum speed in kilo/mega/giga/bits per second.",
                    "required": true,
                    "value": "$iftraffic_bandwidth$"
                },
                "-c": {
                    "description": "% of bandwidth usage necessary to result in critical status (default: 98)",
                    "value": "$iftraffic_crit$"
                },
                "-i": {
                    "description": "Interface name.",
                    "required": true,
                    "value": "$iftraffic_interface$"
                },
                "-u": {
                    "description": "g=gigabits/s,m=megabits/s,k=kilobits/s,b=bits/s.",
                    "value": "$iftraffic_units$"
                },
                "-w": {
                    "description": "% of bandwidth usage necessary to result in warning status (default: 85)",
                    "value": "$iftraffic_warn$"
                }
            },
            "command": "check_iftraffic.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "iftraffic",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000de",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "iftraffic_address": "$check_address$",
                "iftraffic_crit": "98",
                "iftraffic_warn": "85"
            }
        },
        "vmware-esx-soap-host-runtime-listvms": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "listvms",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-runtime-listvms",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000073",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-runtime-health": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "health",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-runtime-health",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000e1",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-io-read": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "read",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-read",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000001e",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-mem-memctl": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "mem",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "memctl",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-mem-memctl",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000091",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "mongodb": {
            "arguments": {
                "--all-databases": {
                    "description": "Check all databases (action database_size)",
                    "set_if": "$mongodb_alldatabases$"
                },
                "--database": {
                    "description": "Specify the database to check",
                    "value": "$mongodb_database$"
                },
                "--mapped-memory": {
                    "description": "Get mapped memory instead of resident (if resident memory can not be read)",
                    "set_if": "$mongodb_mappedmemory$"
                },
                "--max-lag": {
                    "description": "Get max replication lag (for replication_lag action only)",
                    "set_if": "$mongodb_maxlag$"
                },
                "--replicaset": {
                    "description": "Connect to replicaset",
                    "set_if": "$mongodb_replcheck$",
                    "value": "$mongodb_replicaset$"
                },
                "--ssl": {
                    "description": "Connect using SSL",
                    "set_if": "$mongodb_ssl$"
                },
                "-A": {
                    "description": "The action you want to take",
                    "value": "$mongodb_action$"
                },
                "-C": {
                    "description": "The critical threshold we want to set",
                    "value": "$mongodb_critical$"
                },
                "-D": {
                    "description": "Enable output of Nagios performance data",
                    "set_if": "$mongodb_perfdata$"
                },
                "-H": {
                    "description": "The hostname you want to connect to",
                    "value": "$mongodb_host$"
                },
                "-P": {
                    "description": "The port mongodb is runnung on",
                    "value": "$mongodb_port$"
                },
                "-T": {
                    "description": "Time used to sample number of pages faults",
                    "value": "$mongodb_sampletime$"
                },
                "-W": {
                    "description": "The warning threshold we want to set",
                    "value": "$mongodb_warning$"
                },
                "-a": {
                    "description": "The database you want to authenticate against",
                    "value": "$mongodb_authdb$"
                },
                "-c": {
                    "description": "Specify the collection to check",
                    "value": "$mongodb_collection$"
                },
                "-p": {
                    "description": "The password you want to use for that user",
                    "value": "$mongodb_passwd$"
                },
                "-q": {
                    "description": "The query type to check [query|insert|update|delete|getmore|command] from queries_per_second",
                    "value": "$mongodb_querytype$"
                },
                "-u": {
                    "description": "The username you want to login as",
                    "value": "$mongodb_user$"
                }
            },
            "command": "check_mongodb.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "mongodb",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000eb",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "mongodb_action": "connections",
                "mongodb_host": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "mongodb_perfdata": true
            }
        },
        "nscp-local-cpu": {
            "arguments": {
                "--critical": "load>$nscp_cpu_critical$",
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "--time": {
                    "description": "The time to check",
                    "repeat_key": true,
                    "value": "$nscp_cpu_time$"
                },
                "--warning": "load>$nscp_cpu_warning$",
                "-a": {
                    "repeat_key": true,
                    "value": "$nscp_cpu_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-cpu",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000018",
            "vars": {
                "nscp_boot": true,
                "nscp_cpu_critical": 90,
                "nscp_cpu_showall": true,
                "nscp_cpu_time": [
                    "1m",
                    "5m",
                    "15m"
                ],
                "nscp_cpu_warning": 80,
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": [
                    "CheckSystem"
                ],
                "nscp_query": "check_cpu",
                "nscp_showall": "$nscp_cpu_showall$"
            }
        },
        "redis": {
            "arguments": {
                "--credentials": {
                    "description": "Credentials file to read for Redis authentication.",
                    "value": "$redis_credentials$"
                },
                "--crit": {
                    "description": "This option can only be used if redis_variables is used and number of values listed here must exactly match number of variables specified.",
                    "value": "$redis_crit$"
                },
                "--database": {
                    "description": "Optional database name (usually a number), needed for redis_query.",
                    "value": "$redis_database$"
                },
                "--hitrate": {
                    "description": "Calculates Hitrate.",
                    "value": "$redis_hitrate$"
                },
                "--hostname": {
                    "description": "Hostname or IP Address to check.",
                    "value": "$redis_hostname$"
                },
                "--memory_utilization": {
                    "description": "This calculates percent of total memory on system used by redis.",
                    "value": "$redis_memory_utilization$"
                },
                "--option": {
                    "description": "Specifiers are separated by , and must include NAME or PATTERN. See the help output of the plugin for the detailed format.",
                    "repeat_key": true,
                    "value": "$redis_option$"
                },
                "--password": {
                    "description": "Password for Redis authentication. Safer alternative is to put them in a file and use redis_credentials.",
                    "value": "$redis_password$"
                },
                "--perfparse": {
                    "description": "This should only be used with variables and causes variable data not only to be printed as part of main status line but also as perfparse compatible output.",
                    "set_if": "$redis_perfparse$"
                },
                "--perfvars": {
                    "description": "This allows to list variables which values will go only into perfparse output (and not for threshold checking).",
                    "value": "$redis_perfvars$"
                },
                "--port": {
                    "description": "Port number (default: 6379).",
                    "value": "$redis_port$"
                },
                "--prev_perfdata": {
                    "description": "Previous performance data used to calculate rate of change for counter statistics variables and for proper calculation of hitrate.",
                    "set_if": "$redis_prev_perfdata$",
                    "value": "$service.perfdata$"
                },
                "--query": {
                    "description": "Option specifies key to query and optional variable name to assign the results to after. See the help output of the plugin for the detailed format.",
                    "repeat_key": true,
                    "value": "$redis_query$"
                },
                "--rate_label": {
                    "description": "Prefix or Suffix label used to create a new variable which has rate of change of another base variable.",
                    "value": "$redis_rate_label$"
                },
                "--replication_delay": {
                    "description": "Allows to set threshold on replication delay info.",
                    "value": "$redis_replication_delay$"
                },
                "--response_time": {
                    "description": "If this is used plugin will measure and output connection response time in seconds. With perfparse this would also be provided on perf variables.",
                    "value": "$redis_response_time$"
                },
                "--timeout": {
                    "description": "Allows to set timeout for execution of this plugin.",
                    "value": "$redis_timeout$"
                },
                "--total_memory": {
                    "description": "Amount of memory on a system for memory utilization calculations above.",
                    "value": "$redis_total_memory$"
                },
                "--variables": {
                    "description": "List of variables from info data to do threshold checks on.",
                    "value": "$redis_variables$"
                },
                "--warn": {
                    "description": "This option can only be used if redis_variables is used and number of values listed here must exactly match number of variables specified.",
                    "value": "$redis_warn$"
                }
            },
            "command": "check_redis.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "redis",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000bf",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "redis_hostname": "$check_address$",
                "redis_perfparse": false,
                "redis_prev_perfdata": false
            }
        },
        "swap-windows": {
            "arguments": {
                "-U": {
                    "description": "Show used swap instead of the free swap",
                    "set_if": "$swap_win_show_used$"
                },
                "-c": {
                    "description": "Critical threshold",
                    "value": "$swap_win_crit$"
                },
                "-u": {
                    "description": "Unit to display swap in",
                    "value": "$swap_win_unit$"
                },
                "-w": {
                    "description": "Warning threshold",
                    "value": "$swap_win_warn$"
                }
            },
            "command": "check_swap.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "swap-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000081",
            "vars": {
                "swap_win_crit": "5%",
                "swap_win_unit": "mb",
                "swap_win_warn": "10%"
            }
        },
        "tcp": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$tcp_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$tcp_ipv4$"
                },
                "-A": {
                    "description": "All expect strings need to occur in server response. Defaults to false.",
                    "set_if": "$tcp_all$"
                },
                "-D": {
                    "description": "Minimum number of days a certificate has to be valid. 1st value is number of days for warning, 2nd is critical (if not specified: 0) - seperated by comma.",
                    "value": "$tcp_certificate$"
                },
                "-E_quit": {
                    "description": "Enable usage of \n, \r, \t or \\ in quit string.",
                    "set_if": "$tcp_escape_quit$",
                    "order": "3"
                },
                "-E_send": {
                    "description": "Enable usage of \n, \r, \t or \\ in send string.",
                    "set_if": "$tcp_escape_send$",
                    "order": "1"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path).",
                    "value": "$tcp_address$"
                },
                "-M": {
                    "description": "Accept expected string mismatches with states ok, warn, crit. Defaults to warn.",
                    "value": "$tcp_mismatch$"
                },
                "-S": {
                    "description": "Use SSL for the connection.",
                    "set_if": "$tcp_ssl$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds).",
                    "value": "$tcp_ctime$"
                },
                "-d": {
                    "description": "Seconds to wait between sending string and polling for response.",
                    "value": "$tcp_delay$"
                },
                "-e": {
                    "description": "String to expect in server response (may be repeated).",
                    "value": "$tcp_expect$"
                },
                "-j": {
                    "description": "Hide output from TCP socket.",
                    "set_if": "$tcp_jail$"
                },
                "-m": {
                    "description": "Close connection once more than this number of bytes are received.",
                    "value": "$tcp_maxbytes$"
                },
                "-p": {
                    "description": "The TCP port number.",
                    "value": "$tcp_port$"
                },
                "-q": {
                    "description": "String to send server to initiate a clean close of the connection.",
                    "value": "$tcp_quit$",
                    "order": "4"
                },
                "-r": {
                    "description": "Accept TCP refusals with states ok, warn, crit. Defaults to crit.",
                    "value": "$tcp_refuse$"
                },
                "-s": {
                    "description": "String to send to the server.",
                    "value": "$tcp_send$",
                    "order": "2"
                },
                "-t": {
                    "description": "Seconds before connection times out. Defaults to 10.",
                    "value": "$tcp_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds).",
                    "value": "$tcp_wtime$"
                }
            },
            "command": "check_tcp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "tcp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000c8",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$tcp_ipv4$",
                "check_ipv6": "$tcp_ipv6$",
                "tcp_address": "$check_address$",
                "tcp_all": false,
                "tcp_mismatch": "warn",
                "tcp_refuse": "crit",
                "tcp_timeout": 10
            }
        },
        "snmp-interface": {
            "arguments": {
                "-2": {
                    "description": "Use snmp v2c",
                    "set_if": "$snmp_v2$"
                },
                "--64bits": {
                    "description": "Use 64 bits counters instead of the standard counters when checking bandwidth & performance data for interface >= 1Gbps",
                    "set_if": "$snmp_interface_64bit$"
                },
                "--label": {
                    "description": "Add label before speed in output : in=, out=, errors-out=, etc...",
                    "value": "$snmp_interface_label$"
                },
                "-A": {
                    "set_if": "$snmp_interface_ifalias$"
                },
                "-B": {
                    "description": "Make the warning and critical levels in K|M|G Bits/s instead of K|M|G Bytes/s",
                    "set_if": "$snmp_interface_kbits$"
                },
                "-C": {
                    "description": "Community name for the host's SNMP agent (implies v1 protocol)",
                    "set_if": "$snmp_nocrypt$",
                    "value": "$snmp_community$"
                },
                "-H": {
                    "description": "Name or IP address of host to check",
                    "value": "$snmp_address$"
                },
                "-L": {
                    "description": "<authproto>,<privproto> - <Authentication protocol (md5|sha : default md5)>,<Priv protocole (des|aes : default des)>",
                    "set_if": "$snmp_v3_use_authprotocol$",
                    "value": "$snmp_authprotocol$"
                },
                "-M": {
                    "description": "Make the warning and critical levels in Mbps",
                    "set_if": "$snmp_interface_megabytes$"
                },
                "-N": {
                    "set_if": "$snmp_interface_ifname$"
                },
                "-W": {
                    "description": "Include 'weathermap' data for NagVis in performance data",
                    "set_if": "$snmp_interface_weathermap$"
                },
                "-X": {
                    "description": "Priv password for snmpv3 (AuthPriv protocol)",
                    "set_if": "$snmp_v3_use_privpass$",
                    "value": "$snmp_privpass$"
                },
                "-Y": {
                    "description": "Output performance data in bits/s or Bytes/s",
                    "set_if": "$snmp_interface_bits_bytes$"
                },
                "-c": "$snmp_crit$",
                "-d": {
                    "description": "Make an average of <delta> seconds (default 300=5min)",
                    "value": "$snmp_interface_delta$"
                },
                "-e": {
                    "description": "Add error & discard to Perfparse output",
                    "set_if": "$snmp_interface_errors$"
                },
                "-f": {
                    "description": "Perfparse compatible output (no output when interface is down)",
                    "set_if": "$snmp_perf$"
                },
                "-i": {
                    "description": "Make critical when up",
                    "set_if": "$snmp_interface_inverse$"
                },
                "-k": {
                    "description": "Check the input/ouput bandwidth of the interface",
                    "set_if": "$snmp_interface_perf$"
                },
                "-l": {
                    "description": "Login and auth password for snmpv3 authentication",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_login$"
                },
                "-n": {
                    "description": "Name in description OID (eth0, ppp0 ...). This is treated as a regexp : -n eth will match eth0,eth1,...",
                    "value": "$snmp_interface$"
                },
                "-p": {
                    "description": "SNMP port (Default 161)",
                    "value": "$snmp_port$"
                },
                "-q": {
                    "description": "Also check the error and discard input/output. When enabled format of snmp_warn and snmp_crit changes to <In bytes>,<Out bytes>,<In error>,<Out error>,<In disc>,<Out disc>",
                    "set_if": "$snmp_interface_extended_checks$"
                },
                "-r": {
                    "description": "Do not use regexp to match NAME in description OID",
                    "set_if": "$snmp_interface_noregexp$"
                },
                "-t": {
                    "description": "Timeout for SNMP in seconds (Default: 5)",
                    "value": "$snmp_timeout$"
                },
                "-u": {
                    "description": "Make the warning and critical levels in % of reported interface speed",
                    "set_if": "$snmp_interface_warncrit_percent$"
                },
                "-w": "$snmp_warn$",
                "-x": {
                    "description": "Priv password",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_password$"
                },
                "-y": {
                    "description": "Output performance data in % of max speed",
                    "set_if": "$snmp_interface_percent$"
                }
            },
            "command": "check_snmp_int.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "snmp-interface",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000006c",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "snmp_address": "$check_address$",
                "snmp_authprotocol": "md5,des",
                "snmp_community": "public",
                "snmp_crit": "0,600",
                "snmp_interface": "eth0",
                "snmp_interface_64bit": false,
                "snmp_interface_bits_bytes": true,
                "snmp_interface_delta": 300,
                "snmp_interface_errors": true,
                "snmp_interface_extended_checks": false,
                "snmp_interface_ifalias": false,
                "snmp_interface_ifname": false,
                "snmp_interface_kbits": true,
                "snmp_interface_megabytes": true,
                "snmp_interface_noregexp": false,
                "snmp_interface_percent": false,
                "snmp_interface_perf": true,
                "snmp_interface_warncrit_percent": false,
                "snmp_login": "snmpuser",
                "snmp_nocrypt": true,
                "snmp_perf": true,
                "snmp_timeout": "5",
                "snmp_v2": false,
                "snmp_v3": false,
                "snmp_v3_use_authprotocol": false,
                "snmp_v3_use_privpass": false,
                "snmp_warn": "300,400"
            }
        },
        "clamd": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 only",
                    "set_if": "$clamd_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 only",
                    "set_if": "$clamd_ipv4$"
                },
                "-A": {
                    "description": "All expect strings need to occur in server response. Default is any.",
                    "set_if": "$clamd_all$"
                },
                "-D": {
                    "description": "Minimum number of days a certificate has to be valid. 1st value is number of days for warning, 2nd is critical (if not specified: 0) - seperated by comma.",
                    "value": "$clamd_certificate$"
                },
                "-E_quit": {
                    "description": "Can use \n, \r, \t or \\ in quit string. Default is \r\n added to end of quit.",
                    "set_if": "$clamd_escape_quit$",
                    "order": "3"
                },
                "-E_send": {
                    "description": "Enable usage of \n, \r, \t or \\ in send string. Default is nothing.",
                    "set_if": "$clamd_escape_send$",
                    "order": "1"
                },
                "-H": {
                    "description": "The host's address or unix socket (must be an absolute path).",
                    "required": true,
                    "value": "$clamd_address$"
                },
                "-M": {
                    "description": "Accept expected string mismatches with states ok, warn, crit. Defaults to warn.",
                    "value": "$clamd_mismatch$"
                },
                "-S": {
                    "description": "Use SSL for the connection.",
                    "set_if": "$clamd_ssl$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds).",
                    "value": "$clamd_ctime$"
                },
                "-d": {
                    "description": "Seconds to wait between sending string and polling for response.",
                    "value": "$clamd_delay$"
                },
                "-e": {
                    "description": "String to expect in server response (may be repeated).",
                    "repeat_key": true,
                    "value": "$clamd_expect$"
                },
                "-j": {
                    "description": "Hide output from TCP socket.",
                    "set_if": "$clamd_jail$"
                },
                "-m": {
                    "description": "Close connection once more than this number of bytes are received.",
                    "value": "$clamd_maxbytes$"
                },
                "-p": {
                    "description": "Port number (default: none).",
                    "value": "$clamd_port$"
                },
                "-q": {
                    "description": "String to send server to initiate a clean close of the connection.",
                    "value": "$clamd_quit$",
                    "order": "4"
                },
                "-r": {
                    "description": "Accept TCP refusals with states ok, warn, crit. Defaults to crit.",
                    "value": "$clamd_refuse$"
                },
                "-s": {
                    "description": "String to send to the server.",
                    "value": "$clamd_send$",
                    "order": "2"
                },
                "-t": {
                    "description": "Seconds before connection times out. Defaults to 10.",
                    "value": "$clamd_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds).",
                    "value": "$clamd_wtime$"
                }
            },
            "command": "check_clamd",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "clamd",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000af",
            "vars": {
                "check_ipv4": "$clamd_ipv4$",
                "check_ipv6": "$clamd_ipv6$",
                "clamd_mismatch": "warn",
                "clamd_refuse": "crit",
                "clamd_ssl": false,
                "clamd_timeout": 10
            }
        },
        "nscp-local-tasksched": {
            "arguments": {
                "--critical": {
                    "description": "Filter which marks items which generates a critical state.",
                    "value": "$nscp_tasksched_critical$"
                },
                "--detail-syntax": {
                    "description": "Detail level syntax.",
                    "value": "$nscp_tasksched_detailsyntax$"
                },
                "--empty-state": {
                    "description": "Return status to use when nothing matched filter.",
                    "value": "$nscp_tasksched_emptystate$"
                },
                "--filter": {
                    "description": "Name of the task to check.",
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression",
                    "value": "title='$nscp_tasksched_name$'"
                },
                "--folder": {
                    "description": "The folder in which the tasks to check reside.",
                    "value": "$nscp_tasksched_folder$"
                },
                "--hidden": {
                    "description": "Look for hidden tasks.",
                    "set_if": "$nscp_tasksched_hidden$"
                },
                "--load-all": {
                    "description": "Load all plugins (currently only used with generate)",
                    "set_if": "$nscp_load_all$"
                },
                "--log": {
                    "description": "The log level to use",
                    "value": "$nscp_log_level$"
                },
                "--module": {
                    "description": "Specify which NSClient++ modules are required. 'nscp client' just needs 'CheckSystem' by default.",
                    "repeat_key": true,
                    "value": "$nscp_modules$"
                },
                "--perf-syntax": {
                    "description": "Performance alias syntax.",
                    "value": "$nscp_tasksched_perfsyntax$"
                },
                "--recursive": {
                    "description": "Recurse sub folder (defaults to true).",
                    "value": "$nscp_tasksched_recursive$"
                },
                "--show-all": {
                    "set_if": "$nscp_showall$"
                },
                "--warning": {
                    "description": "Filter which marks items which generates a warning state.",
                    "value": "$nscp_tasksched_warning$"
                },
                "-a": {
                    "repeat_key": true,
                    "value": "$nscp_tasksched_arguments$"
                },
                "-b": {
                    "description": "Boot the client before executing command (similar as running the command from test mode)",
                    "set_if": "$nscp_boot$"
                },
                "-q": {
                    "description": "Run a query with a given name",
                    "required": true,
                    "value": "$nscp_query$"
                }
            },
            "command": "\\nscp.exe client",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "nscp-local-tasksched",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000035",
            "vars": {
                "nscp_boot": true,
                "nscp_load_all": false,
                "nscp_log_level": "critical",
                "nscp_modules": "CheckTaskSched",
                "nscp_query": "check_tasksched",
                "nscp_showall": "$nscp_tasksched_showall$",
                "nscp_tasksched_critical": "exit_code < 0",
                "nscp_tasksched_detailsyntax": "%(folder)/%(title): %(exit_code) != 0",
                "nscp_tasksched_perfsyntax": "%(title)",
                "nscp_tasksched_recursive": true,
                "nscp_tasksched_warning": "exit_code != 0"
            }
        },
        "vmware-esx-soap-host-io-device-latency": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--critical": "$vmware_crit$",
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "io",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "device_latency",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                },
                "--warning": "$vmware_warn$"
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-io-device-latency",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000a2",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "vmware-esx-soap-host-cpu-wait": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "cpu",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "wait",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-cpu-wait",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000093",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "openmanage": {
            "arguments": {
                "--all": {
                    "description": "Check everything, even log content",
                    "set_if": "$openmanage_all$"
                },
                "--blacklist": {
                    "description": "Blacklist missing and/or failed components",
                    "repeat_key": true,
                    "value": "$openmanage_blacklist$"
                },
                "--check": {
                    "description": "Fine-tune which components are checked",
                    "value": "$openmanage_check$"
                },
                "--community": {
                    "description": "SNMP community string [default=public]",
                    "value": "$openmanage_community$"
                },
                "--config": {
                    "description": "Specify configuration file",
                    "value": "$openmanage_config$"
                },
                "--critical": {
                    "description": "Custom temperature critical limits",
                    "value": "$openmanage_critical$"
                },
                "--extinfo": {
                    "description": "Append system info to alerts",
                    "set_if": "$openmanage_extinfo$"
                },
                "--fahrenheit": {
                    "description": "Use Fahrenheit as temperature unit",
                    "set_if": "$openmanage_fahrenheit$"
                },
                "--hostname": {
                    "description": "Hostname or IP (required for SNMP)",
                    "value": "$openmanage_hostname$"
                },
                "--htmlinfo": {
                    "description": "HTML output with clickable links",
                    "set_if": "$openmanage_htmlinfo$"
                },
                "--info": {
                    "description": "Prefix any alerts with the service tag",
                    "set_if": "$openmanage_info$"
                },
                "--ipv6": {
                    "description": "Use IPv6 instead of IPv4 [default=no]",
                    "set_if": "$openmanage_ipv6$"
                },
                "--legacy-perfdata": {
                    "description": "legacy performance data output",
                    "set_if": "$openmanage_legacy_perfdata$"
                },
                "--no-storage": {
                    "description": "Don't check storage",
                    "set_if": "$openmanage_no_storage$"
                },
                "--only": {
                    "description": "Only check a certain component or alert type",
                    "value": "$openmanage_only$"
                },
                "--perfdata": {
                    "description": "Output performance data [default=no]",
                    "set_if": "$openmanage_perfdata$"
                },
                "--port": {
                    "description": "SNMP port number [default=161]",
                    "value": "$openmanage_port$"
                },
                "--protocol": {
                    "description": "SNMP protocol version [default=2c]",
                    "value": "$openmanage_protocol$"
                },
                "--short-state": {
                    "description": "Prefix alerts with alert state abbreviated",
                    "set_if": "$openmanage_short_state$"
                },
                "--show-blacklist": {
                    "description": "Show blacklistings in OK output",
                    "set_if": "$openmanage_show_blacklist$"
                },
                "--state": {
                    "description": "Prefix alerts with alert state",
                    "set_if": "$openmanage_state$"
                },
                "--tcp": {
                    "description": "Use TCP instead of UDP [default=no]",
                    "set_if": "$openmanage_tcp$"
                },
                "--timeout": {
                    "description": "Plugin timeout in seconds [default=30]",
                    "value": "$openmanage_timeout$"
                },
                "--vdisk-critical": {
                    "description": "Make any alerts on virtual disks critical",
                    "set_if": "$openmanage_vdisk_critical$"
                },
                "--warning": {
                    "description": "Custom temperature warning limits",
                    "value": "$openmanage_warning$"
                }
            },
            "command": "check_openmanage",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "openmanage",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000c0"
        },
        "icingacli-director": {
            "arguments": {
                "--check": {
                    "description": "Run only a specific test suite",
                    "value": "$icingacli_director_check$"
                },
                "--db": {
                    "description": "Use a specific Icinga Web DB resource",
                    "value": "$icingacli_director_db$"
                }
            },
            "command": "/usr/bin/icingacli director health check",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "icingacli-director",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000003d"
        },
        "negate": {
            "arguments": {
                "--wrapped-plugin": {
                    "skip_key": true,
                    "value": {
                        "type": "Function",
                        "body": "/* Unable to fetch function body through API */"
                    },
                    "order": "1"
                },
                "-T": {
                    "description": "Custom result on Negate timeouts",
                    "value": "$negate_timeout_result$"
                },
                "-c": "$negate_critical$",
                "-o": "$negate_ok$",
                "-s": {
                    "description": "Substitute output text as well. Will only substitute text in CAPITALS",
                    "set_if": "$negate_substitute$"
                },
                "-t": {
                    "description": "Seconds before plugin times out (default: 11)",
                    "value": "$negate_timeout$"
                },
                "-u": "$negate_unknown$",
                "-w": "$negate_warning$"
            },
            "command": "negate",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "negate",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000009",
            "vars": {
                "negate_timeout_result": "UNKNOWN"
            }
        },
        "dns": {
            "arguments": {
                "-A": {
                    "description": "Optionally expect the DNS server to be authoritative for the lookup",
                    "set_if": "$dns_authoritative$"
                },
                "-H": {
                    "description": "The name or address you want to query.",
                    "value": "$dns_lookup$"
                },
                "-a": {
                    "description": "Optional ip address or host you expect the DNS server to return. Host must end with a dot (.). This option can be repeated multiple times (Returns OK if any value match). If multiple addresses are returned at once, you have to match the whole string of addresses separated with commas (sorted alphabetically).",
                    "value": "$dns_expected_answers$"
                },
                "-c": {
                    "description": "Return critical if elapsed time exceeds value.",
                    "value": "$dns_ctime$"
                },
                "-n": {
                    "description": "Optionally accept cname responses as a valid result to a query. The default is to ignore cname responses as part of the result",
                    "set_if": "$dns_accept_cname$"
                },
                "-q": {
                    "description": "Optional DNS record query type where TYPE =(A, AAAA, SRV, TXT, MX, ANY). The default query type is 'A' (IPv4 host entry)",
                    "value": "$dns_query_type$"
                },
                "-s": {
                    "description": "Optional DNS server you want to use for the lookup.",
                    "value": "$dns_server$"
                },
                "-t": {
                    "description": "Seconds before connection times out. Defaults to 10.",
                    "value": "$dns_timeout$"
                },
                "-w": {
                    "description": "Return warning if elapsed time exceeds value.",
                    "value": "$dns_wtime$"
                }
            },
            "command": "check_dns",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "dns",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000009f",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "dns_lookup": "$host.name$",
                "dns_timeout": 10
            }
        },
        "by_ssh": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 only",
                    "set_if": "$by_ssh_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 only",
                    "set_if": "$by_ssh_ipv4$"
                },
                "-C": {
                    "type": "Function",
                    "body": "/* Unable to fetch function body through API */"
                },
                "-E": {
                    "description": "Ignore all or (if specified) first n lines on STDERR [optional]",
                    "value": "$by_ssh_skip_stderr$"
                },
                "-H": {
                    "description": "Host name, IP Address, or unix socket (must be an absolute path)",
                    "value": "$by_ssh_address$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds)",
                    "value": "$by_ssh_crit$"
                },
                "-i": {
                    "description": "identity of an authorized key [optional]",
                    "value": "$by_ssh_identity$"
                },
                "-l": {
                    "description": "SSH user name on remote host [optional]",
                    "value": "$by_ssh_logname$"
                },
                "-o": {
                    "description": "Provide ssh options (may be repeated)",
                    "value": "$by_ssh_options$"
                },
                "-p": {
                    "description": "Port number (default: none)",
                    "value": "$by_ssh_port$"
                },
                "-q": {
                    "description": "Tell ssh to suppress warning and diagnostic messages [optional]",
                    "set_if": "$by_ssh_quiet$"
                },
                "-t": {
                    "description": "Seconds before connection times out (default: 10)",
                    "value": "$by_ssh_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds)",
                    "value": "$by_ssh_warn$"
                }
            },
            "command": "check_by_ssh",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "by_ssh",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000dd",
            "vars": {
                "by_ssh_address": "$check_address$",
                "by_ssh_quiet": false,
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$by_ssh_ipv4$",
                "check_ipv6": "$by_ssh_ipv6$"
            }
        },
        "vmware-esx-soap-host-runtime-issues": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "required": false,
                    "value": "$vmware_datacenter$"
                },
                "--exclude": "$vmware_exclude$",
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "required": true,
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--include": "$vmware_include$",
                "--isregexp": {
                    "set_if": "$vmware_isregexp$"
                },
                "--multiline": {
                    "set_if": "$vmware_multiline$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "issues",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-host-runtime-issues",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000020",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "hpjd": {
            "arguments": {
                "-C": {
                    "description": "The SNMP community name (default=public)",
                    "value": "$hpjd_community$"
                },
                "-H": {
                    "description": "Host address",
                    "value": "$hpjd_address$"
                },
                "-p": {
                    "description": "Specify the port to check (default=161)",
                    "value": "$hpjd_port$"
                }
            },
            "command": "check_hpjd",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "hpjd",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000007a",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "hpjd_address": "$check_address$"
            }
        },
        "ftp": {
            "arguments": {
                "-6": {
                    "description": "Use IPv6 connection",
                    "set_if": "$ftp_ipv6$"
                },
                "-4": {
                    "description": "Use IPv4 connection",
                    "set_if": "$ftp_ipv4$"
                },
                "-A": {
                    "description": "All expect strings need to occur in server response. Default is any.",
                    "set_if": "$ftp_all$"
                },
                "-D": {
                    "description": "Minimum number of days a certificate has to be valid. 1st value is number of days for warning, 2nd is critical (if not specified: 0) - seperated by comma.",
                    "value": "$ftp_certificate$"
                },
                "-E_quit": {
                    "description": "Can use \n, \r, \t or \\ in quit string. Default is \r\n added to end of quit.",
                    "set_if": "$ftp_escape_quit$",
                    "order": "3"
                },
                "-E_send": {
                    "description": "Enable usage of \n, \r, \t or \\ in send string. Default is nothing.",
                    "set_if": "$ftp_escape_send$",
                    "order": "1"
                },
                "-H": {
                    "description": "The host's address. Defaults to $address$ or $address6$ if the address attribute is not set.",
                    "value": "$ftp_address$"
                },
                "-M": {
                    "description": "Accept expected string mismatches with states ok, warn, crit. Defaults to warn.",
                    "value": "$ftp_mismatch$"
                },
                "-S": {
                    "description": "Use SSL for the connection.",
                    "set_if": "$ftp_ssl$"
                },
                "-c": {
                    "description": "Response time to result in critical status (seconds).",
                    "value": "$ftp_ctime$"
                },
                "-d": {
                    "description": "Seconds to wait between sending string and polling for response.",
                    "value": "$ftp_delay$"
                },
                "-e": {
                    "description": "String to expect in server response (may be repeated).",
                    "value": "$ftp_expect$"
                },
                "-j": {
                    "description": "Hide output from TCP socket.",
                    "set_if": "$ftp_jail$"
                },
                "-m": {
                    "description": "Close connection once more than this number of bytes are received.",
                    "value": "$ftp_maxbytes$"
                },
                "-p": {
                    "description": "The FTP port number. Defaults to none",
                    "value": "$ftp_port$"
                },
                "-q": {
                    "description": "String to send server to initiate a clean close of the connection.",
                    "value": "$ftp_quit$",
                    "order": "4"
                },
                "-r": {
                    "description": "Accept TCP refusals with states ok, warn, crit. Defaults to crit.",
                    "value": "$ftp_refuse$"
                },
                "-s": {
                    "description": "String to send to the server.",
                    "value": "$ftp_send$",
                    "order": "2"
                },
                "-t": {
                    "description": "Seconds before connection times out. Defaults to 10.",
                    "value": "$ftp_timeout$"
                },
                "-w": {
                    "description": "Response time to result in warning status (seconds).",
                    "value": "$ftp_wtime$"
                }
            },
            "command": "check_ftp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "ftp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000089",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": "$ftp_ipv4$",
                "check_ipv6": "$ftp_ipv6$",
                "ftp_address": "$check_address$",
                "ftp_mismatch": "warn",
                "ftp_refuse": "crit",
                "ftp_ssl": false,
                "ftp_timeout": 10
            }
        },
        "load": {
            "arguments": {
                "-c": {
                    "description": "Exit with CRITICAL status if load average exceed CLOADn; the load average format is the same used by 'uptime' and 'w'",
                    "value": "$load_cload1$,$load_cload5$,$load_cload15$"
                },
                "-r": {
                    "description": "Divide the load averages by the number of CPUs (when possible)",
                    "set_if": "$load_percpu$"
                },
                "-w": {
                    "description": "Exit with WARNING status if load average exceeds WLOADn",
                    "value": "$load_wload1$,$load_wload5$,$load_wload15$"
                }
            },
            "command": "check_load",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "load",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000cb",
            "vars": {
                "load_cload1": 10,
                "load_cload15": 4,
                "load_cload5": 6,
                "load_percpu": false,
                "load_wload1": 5,
                "load_wload15": 3,
                "load_wload5": 4
            }
        },
        "icmp": {
            "arguments": {
                "-H": {
                    "description": "Host address",
                    "repeat_key": false,
                    "value": "$icmp_address$",
                    "order": "1"
                },
                "-I": {
                    "description": "max target interval (currently 0.000ms)",
                    "value": "$icmp_target_interval$"
                },
                "-b": {
                    "description": "Number of icmp data bytes to send. Packet size will be data bytes + icmp header (currently 68 + 8)",
                    "value": "$icmp_data_bytes$"
                },
                "-c": {
                    "description": "critical threshold (currently 500.000ms,80%)",
                    "value": "$icmp_crta$,$icmp_cpl$%"
                },
                "-i": {
                    "description": "max packet interval (currently 80.000ms)",
                    "value": "$icmp_packet_interval$"
                },
                "-l": {
                    "description": "TTL on outgoing packets (currently 0)",
                    "value": "$icmp_ttl$"
                },
                "-m": {
                    "description": "number of alive hosts required for success",
                    "value": "$icmp_hosts_alive$"
                },
                "-n": {
                    "description": "number of packets to send (currently 5)",
                    "value": "$icmp_packets$"
                },
                "-s": {
                    "description": "specify a source IP address or device name",
                    "value": "$icmp_source$"
                },
                "-t": {
                    "description": "timeout value (seconds, currently  10)",
                    "value": "$icmp_timeout$"
                },
                "-w": {
                    "description": "warning threshold (currently 200.000ms,40%)",
                    "value": "$icmp_wrta$,$icmp_wpl$%"
                }
            },
            "command": "check_icmp",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "icmp",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000db",
            "vars": {
                "icmp_address": "$address$",
                "icmp_cpl": 15,
                "icmp_crta": 200,
                "icmp_wpl": 5,
                "icmp_wrta": 100
            }
        },
        "postgres": {
            "arguments": {
                "--action": {
                    "description": "determines the test executed",
                    "value": "$postgres_action$"
                },
                "--assume-prod": {
                    "description": "assume that server in production mode",
                    "set_if": "$postgres_production$"
                },
                "--assume-standby-mode": {
                    "description": "assume that server in continious WAL recovery mode",
                    "set_if": "$postgres_standby$"
                },
                "--dbpass": {
                    "description": "database password(s); use a .pgpass file instead when possible",
                    "value": "$postgres_dbpass$"
                },
                "--dbservice": {
                    "description": "service name to use inside of pg_service.conf",
                    "value": "$postgres_dbservice$"
                },
                "--exclude": {
                    "description": "name(s) items to specifically exclude (e.g. tables), depends on the action",
                    "value": "$postgres_exclude$"
                },
                "--excludeuser": {
                    "description": "exclude objects owned by certain users",
                    "value": "$postgres_excludeuser$"
                },
                "--include": {
                    "description": "name(s) items to specifically include (e.g. tables), depends on the action",
                    "value": "$postgres_include$"
                },
                "--includeuser": {
                    "description": "include objects owned by certain users",
                    "value": "$postgres_includeuser$"
                },
                "--query": {
                    "description": "query for custom_query action",
                    "value": "$postgres_query$"
                },
                "--reverse": {
                    "description": "reverses warning and critical for custom_query action",
                    "set_if": "$postgres_reverse$"
                },
                "--tempdir": {
                    "description": "specify directory for temporary files. default depends on the OS",
                    "value": "$postgres_tempdir$"
                },
                "--valtype": {
                    "description": "determines the result type for custom_query action",
                    "value": "$postgres_valtype$"
                },
                "-H": {
                    "description": "hostname(s) to connect to; defaults to none (Unix socket)",
                    "set_if": "/* Unable to fetch function body through API */",
                    "set_if_format": "expression",
                    "value": "$postgres_host$"
                },
                "-c": {
                    "description": "the critical threshold, range depends on the action",
                    "value": "$postgres_critical$"
                },
                "-db": {
                    "description": "database name(s) to connect to; defaults to 'postgres' or 'template1'",
                    "value": "$postgres_dbname$"
                },
                "-p": {
                    "description": "port(s) to connect to; defaults to 5432",
                    "value": "$postgres_port$"
                },
                "-u": {
                    "description": "database user(s) to connect as; defaults to 'postgres'",
                    "value": "$postgres_dbuser$"
                },
                "-w": {
                    "description": "the warning threshold, range depends on the action",
                    "value": "$postgres_warning$"
                }
            },
            "command": "/usr/bin/check_postgres",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "postgres",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000092",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "postgres_host": "$check_address$",
                "postgres_production": false,
                "postgres_standby": false,
                "postgres_unixsocket": false
            }
        },
        "snmp-process": {
            "arguments": {
                "-2": {
                    "description": "Use snmp v2c",
                    "set_if": "$snmp_v2$"
                },
                "-A": {
                    "description": "Add parameters to select processes (ex : 'named.*-t /var/named/chroot' will only select named process with this parameter)",
                    "set_if": "$snmp_process_use_params$"
                },
                "-C": {
                    "description": "Community name for the host's SNMP agent (implies v1 protocol)",
                    "set_if": "$snmp_nocrypt$",
                    "value": "$snmp_community$"
                },
                "-F": {
                    "description": "Add performance output (outputs : memory_usage, num_process, cpu_usage)",
                    "set_if": "$snmp_perf$"
                },
                "-H": {
                    "description": "Name or IP address of host to check",
                    "value": "$snmp_address$"
                },
                "-L": {
                    "description": "<authproto>,<privproto> - <Authentication protocol (md5|sha : default md5)>,<Priv protocole (des|aes : default des)>",
                    "set_if": "$snmp_v3_use_authprotocol$",
                    "value": "$snmp_authprotocol$"
                },
                "-X": {
                    "description": "Priv password for snmpv3 (AuthPriv protocol)",
                    "set_if": "$snmp_v3_use_privpass$",
                    "value": "$snmp_privpass$"
                },
                "-c": "$snmp_crit$",
                "-l": {
                    "description": "Login and auth password for snmpv3 authentication",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_login$"
                },
                "-m": {
                    "description": "Checks memory usage. Values warning and critical in Mb eg. 512,1024",
                    "set_if": "$snmp_process_mem_usage$",
                    "value": "$snmp_process_mem_threshold$"
                },
                "-n": {
                    "description": "Regex service name eg. ^apache2$",
                    "value": "$snmp_process_name$"
                },
                "-p": {
                    "description": "SNMP port (Default 161)",
                    "value": "$snmp_port$"
                },
                "-t": {
                    "description": "Timeout for SNMP in seconds (Default: 5)",
                    "value": "$snmp_timeout$"
                },
                "-u": {
                    "description": "Checks CPU usage. Values warning and critical in % (value can be > 100% : 100%=1 CPU) eg. 15,50",
                    "set_if": "$snmp_process_cpu_usage$",
                    "value": "$snmp_process_cpu_threshold$"
                },
                "-w": "$snmp_warn$",
                "-x": {
                    "description": "Priv password",
                    "set_if": "$snmp_v3$",
                    "value": "$snmp_password$"
                }
            },
            "command": "check_snmp_process.pl",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "snmp-process",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000b2",
            "vars": {
                "check_address": {
                    "arguments": [],
                    "deprecated": false,
                    "name": "<anonymous>",
                    "side_effect_free": false,
                    "type": "Function"
                },
                "check_ipv4": false,
                "check_ipv6": false,
                "snmp_address": "$check_address$",
                "snmp_authprotocol": "md5,des",
                "snmp_community": "public",
                "snmp_crit": 0,
                "snmp_login": "snmpuser",
                "snmp_nocrypt": true,
                "snmp_perf": true,
                "snmp_process_cpu_threshold": "0,0",
                "snmp_process_cpu_usage": false,
                "snmp_process_mem_threshold": "0,0",
                "snmp_process_mem_usage": false,
                "snmp_process_name": ".*",
                "snmp_process_use_params": false,
                "snmp_timeout": "5",
                "snmp_v2": false,
                "snmp_v3": false,
                "snmp_v3_use_authprotocol": false,
                "snmp_v3_use_privpass": false,
                "snmp_warn": 0
            }
        },
        "vmware-esx-soap-vm-runtime-status": {
            "arguments": {
                "--authfile": {
                    "description": "Autentication file content: \n\t\t\t\t\t\t\t\tusername=<username>  \n\t\t\t\t\t\t\t\tpassword=<password>",
                    "value": "$vmware_authfile$"
                },
                "--datacenter": {
                    "description": "Datacenter/Vcenter hostname.",
                    "value": "$vmware_datacenter$"
                },
                "--host": {
                    "description": "ESX or ESXi hostname.",
                    "value": "$vmware_host$"
                },
                "--ignore_unknown": {
                    "description": "Sometimes 3 (unknown) is returned from a component. But the check itself is ok. With this option the plugin will return OK (0) instead of UNKNOWN (3).",
                    "set_if": "$vmware_ignoreunknown$"
                },
                "--ignore_warning": {
                    "description": "Sometimes 2 (warning) is returned from a component. But the check itself is ok (from an operator view).",
                    "set_if": "$vmware_ignorewarning$"
                },
                "--name": {
                    "description": "Virtual machine name.",
                    "required": true,
                    "value": "$vmware_vmname$"
                },
                "--nosession": {
                    "description": "No auth session - IT SHOULD BE USED FOR TESTING PURPOSES ONLY!.",
                    "set_if": "$vmware_nosession$"
                },
                "--password": {
                    "description": "Password to use with the username.",
                    "value": "$vmware_password$"
                },
                "--select": "runtime",
                "--sessionfile": {
                    "description": "Vmware auth session file - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfile$"
                },
                "--sessionfiledir": {
                    "description": "Vmware auth session file directory - no efect if $vmware_nosession$ var is true.",
                    "value": "$vmware_sessionfiledir$"
                },
                "--sslport": {
                    "description": "If a SSL port different from 443 is used.",
                    "value": "$vmware_sslport$"
                },
                "--subselect": "status",
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 90).",
                    "value": "$vmware_timeout$"
                },
                "--trace": {
                    "description": "Set verbosity level of vSphere API request/respond trace.",
                    "set_if": "$vmware_trace$"
                },
                "--username": {
                    "description": "Username to connect with.",
                    "value": "$vmware_username$"
                }
            },
            "command": "check_vmware_esx",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "vmware-esx-soap-vm-runtime-status",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000ab",
            "vars": {
                "vmware_auth_nosession": false,
                "vmware_host": "$address$",
                "vmware_ignorewarning": false,
                "vmware_sessionfiledir": "/var/spool/icinga2/tmp",
                "vmware_sslport": "443",
                "vmware_timeout": "90"
            }
        },
        "esxi_hardware": {
            "arguments": {
                "--no-current": {
                    "description": "don't collect current performance data",
                    "set_if": "$esxi_hardware_nocurrent$"
                },
                "--no-fan": {
                    "description": "don't collect fan performance data",
                    "set_if": "$esxi_hardware_nofan$"
                },
                "--no-lcd": {
                    "description": "don't collect lcd/display status data",
                    "set_if": "$esxi_hardware_nolcd$"
                },
                "--no-power": {
                    "description": "don't collect power performance data",
                    "set_if": "$esxi_hardware_nopower$"
                },
                "--no-temp": {
                    "description": "don't collect temperature performance data",
                    "set_if": "$esxi_hardware_notemp$"
                },
                "--no-volts": {
                    "description": "don't collect voltage performance data",
                    "set_if": "$esxi_hardware_novolts$"
                },
                "-C": {
                    "description": "cim port",
                    "value": "$esxi_hardware_port$"
                },
                "-H": {
                    "description": "report on HOST",
                    "value": "$esxi_hardware_host$"
                },
                "-I": {
                    "description": "generate html links for country XX",
                    "value": "$esxi_hardware_html$"
                },
                "-P": {
                    "description": "password",
                    "value": "$esxi_hardware_pass$"
                },
                "-U": {
                    "description": "user to connect as",
                    "value": "$esxi_hardware_user$"
                },
                "-V": {
                    "description": "Vendor code: auto, dell, hp, ibm, intel, or unknown",
                    "value": "$esxi_hardware_vendor$"
                },
                "-i": {
                    "description": "comma-separated list of elements to ignore",
                    "value": "$esxi_hardware_ignore$"
                },
                "-p": {
                    "description": "collect performance data for pnp4nagios",
                    "set_if": "$esxi_hardware_perfdata$"
                },
                "-r": {
                    "description": "Allow regular expression lookups of elements in ignore list",
                    "set_if": "$esxi_hardware_regex$"
                }
            },
            "command": "check_esxi_hardware.py",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "esxi_hardware",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000e4",
            "vars": {
                "esxi_hardware_host": "$address$",
                "esxi_hardware_nocurrent": false,
                "esxi_hardware_nofan": false,
                "esxi_hardware_nolcd": false,
                "esxi_hardware_nopower": false,
                "esxi_hardware_notemp": false,
                "esxi_hardware_novolts": false,
                "esxi_hardware_perfdata": false,
                "esxi_hardware_port": 5989,
                "esxi_hardware_regex": false
            }
        },
        "disk-windows": {
            "arguments": {
                "-U": {
                    "description": "Work with used instead of free space",
                    "set_if": "$disk_win_show_used$"
                },
                "-c": {
                    "description": "Critical threshold",
                    "value": "$disk_win_crit$"
                },
                "-p": {
                    "description": "Optional paths to check",
                    "repeat_key": true,
                    "value": "$disk_win_path$"
                },
                "-u": {
                    "description": "Use this unit to display disk space",
                    "value": "$disk_win_unit$"
                },
                "-w": {
                    "description": "Warning threshold",
                    "value": "$disk_win_warn$"
                },
                "-x": {
                    "description": "Exclude these drives from check",
                    "value": "$disk_win_exclude$"
                }
            },
            "command": "check_disk.exe",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "disk-windows",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c0000007d",
            "vars": {
                "disk_win_crit": "10%",
                "disk_win_unit": "mb",
                "disk_win_warn": "20%"
            }
        },
        "mailq": {
            "arguments": {
                "-C": {
                    "description": "Min. number of messages for same domain in queue to generate critical alert ( W < C )",
                    "value": "$mailq_domain_critical$"
                },
                "-M": {
                    "description": "[ sendmail | qmail | postfix | exim | nullmailer ] (default = autodetect)",
                    "value": "$mailq_servertype$"
                },
                "-W": {
                    "description": "Min. number of messages for same domain in queue to generate warning",
                    "value": "$mailq_domain_warning$"
                },
                "-c": {
                    "description": "Min. number of messages in queue to generate critical alert ( w < c )",
                    "required": true,
                    "value": "$mailq_critical$"
                },
                "-s": {
                    "description": "Use sudo for mailq command",
                    "set_if": "$mailq_sudo$"
                },
                "-t": {
                    "description": "Plugin timeout in seconds (default = 15)",
                    "value": "$mailq_timeout$"
                },
                "-w": {
                    "description": "Min. number of messages in queue to generate warning",
                    "required": true,
                    "value": "$mailq_warning$"
                }
            },
            "command": "check_mailq",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "mailq",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c00000094"
        },
        "haproxy": {
            "arguments": {
                "--password": {
                    "description": "Password for HTTP Auth",
                    "value": "$haproxy_password$"
                },
                "--timeout": {
                    "description": "Seconds before plugin times out (default: 10)",
                    "value": "$haproxy_timeout$"
                },
                "--url": {
                    "description": "URL of the HAProxy csv statistics page",
                    "required": true,
                    "value": "$haproxy_url$"
                },
                "--username": {
                    "description": "Username for HTTP Auth",
                    "value": "$haproxy_username$"
                },
                "-c": {
                    "description": "Critical request time threshold (in seconds)",
                    "value": "$haproxy_critical$"
                },
                "-w": {
                    "description": "Warning request time threshold (in seconds)",
                    "value": "$haproxy_warning$"
                }
            },
            "command": "check_haproxy",
            "fields": [],
            "methods_execute": "PluginCheck",
            "object_name": "haproxy",
            "object_type": "external_object",
            "timeout": 60,
            "uuid": "b7633c2a-06a8-46cc-8f56-a74c000000c6"
        }
    },
    "CommandTemplate": {
        "dmu-command-template": {
            "arguments": {
                "-hlcd": "$highLevelCriticalDownlink$",
                "-hlcu": "$highLevelCriticalUplink$",
                "-hlwd": "$highLevelWarningDownlink$",
                "-hlwu": "$highLevelWarningUplink$"
            },
            "command": "/usr/lib/monitoring-plugins/dmu_check_rs485.py",
            "fields": [
                {
                    "datafield_id": 3,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 4,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 5,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 6,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "methods_execute": "PluginCheck",
            "object_name": "dmu-command-template",
            "object_type": "template",
            "timeout": 5,
            "uuid": "21b2a585-c088-4910-858f-268ec298bb97",
            "vars": {
                "highLevelCriticalDownlink": "41",
                "highLevelCriticalUplink": "38",
                "highLevelWarningDownlink": "41",
                "highLevelWarningUplink": "38"
            }
        },
        "dmu-dru-command-template": {
            "arguments": {
                "-d": {
                    "required": true,
                    "value": "$dru$"
                },
                "-hlcd": "$highLevelCriticalDownlink$",
                "-hlcu": "$highLevelCriticalUplink$",
                "-hltc": "$highLevelTemperatureCritical$",
                "-hltw": "$highLevelTemperatureWarning$",
                "-hlwd": "$highLevelWarningDownlink$",
                "-hlwu": "$highLevelWarningUplink$",
                "-m": "$mac$",
                "-o": {
                    "required": true,
                    "value": "$opt$"
                },
                "-s": "$sn$"
            },
            "command": "/usr/lib/monitoring-plugins/dru_check_rs485.py",
            "fields": [
                {
                    "datafield_id": 12,
                    "is_required": "y",
                    "var_filter": null
                },
                {
                    "datafield_id": 3,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 4,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 13,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 14,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 5,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 6,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 15,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 16,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "methods_execute": "PluginCheck",
            "object_name": "dmu-dru-command-template",
            "object_type": "template",
            "timeout": 5,
            "uuid": "12df8e04-938c-4733-ae30-501a4b0441d1",
            "vars": {
                "highLevelCriticalDownlink": "41",
                "highLevelCriticalUplink": "38",
                "highLevelTemperatureCritical": "50",
                "highLevelTemperatureWarning": "45",
                "highLevelWarningDownlink": "41",
                "highLevelWarningUplink": "38"
            }
        }
    },
    "HostTemplate": {
        "localhost-host-template": {
            "check_command": "hostalive",
            "check_interval": 60,
            "check_timeout": 5,
            "enable_active_checks": true,
            "enable_flapping": true,
            "enable_passive_checks": true,
            "fields": [
                {
                    "datafield_id": 17,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 18,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "flapping_threshold_high": "80",
            "flapping_threshold_low": "20",
            "has_agent": false,
            "max_check_attempts": "5",
            "object_name": "localhost-host-template",
            "object_type": "template",
            "retry_interval": 15,
            "uuid": "b5f74c10-c16f-4322-9ce0-be68b55c6795",
            "vars": {
                "addToMap": true,
                "device": "dmu",
                "highLevelCriticalDL": "41",
                "highLevelCriticalUL": "41",
                "highLevelWaningUL": "38",
                "highLevelWarningDL": "38",
                "parents": [
                    "Uqommweb"
                ]
            },
            "zone": "master"
        },
        "drs-alive-host-template": {
            "check_command": "check_eth",
            "check_interval": 60,
            "check_timeout": 5,
            "enable_active_checks": true,
            "enable_flapping": true,
            "enable_notifications": true,
            "enable_passive_checks": true,
            "fields": [
                {
                    "datafield_id": 17,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 19,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 18,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "flapping_threshold_high": "80",
            "flapping_threshold_low": "20",
            "has_agent": false,
            "max_check_attempts": "5",
            "object_name": "drs-alive-host-template",
            "object_type": "template",
            "retry_interval": 15,
            "uuid": "54356c72-adf6-451e-93fe-fc2187a009f3",
            "vars": {
                "addToMap": true,
                "highLevelCriticalDL": "41",
                "highLevelCriticalUL": "41",
                "highLevelWaningUL": "38",
                "highLevelWarningDL": "38",
                "parents": [
                    "Uqommweb"
                ]
            },
            "zone": "master"
        },
        "ethernet-host-template": {
            "check_command": "hostalive",
            "fields": [],
            "imports": [
                "drs-alive-host-template"
            ],
            "object_name": "ethernet-host-template",
            "object_type": "template",
            "uuid": "cbfe3250-8ad1-4f7a-ad67-6d20650e00f3"
        },
        "serial-host-template": {
            "check_interval": 15,
            "fields": [
                {
                    "datafield_id": 20,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 21,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 11,
                    "is_required": "n",
                    "var_filter": "host.vars.device=%22dru_serial_host%22"
                }
            ],
            "imports": [
                "drs-alive-host-template"
            ],
            "object_name": "serial-host-template",
            "object_type": "template",
            "uuid": "9916d017-1778-467d-ad48-3f3215a7adc1",
            "vars": {
                "cmd_name": "167",
                "cmd_type": "single_query",
                "device": "dmu_serial"
            }
        }
    },
    "ServiceTemplate": {
        "monitor-service-template": {
            "check_interval": 10,
            "check_timeout": 65,
            "enable_flapping": true,
            "fields": [
                {
                    "datafield_id": 17,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 18,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "flapping_threshold_high": "30",
            "flapping_threshold_low": "25",
            "max_check_attempts": "10",
            "object_name": "monitor-service-template",
            "object_type": "template",
            "retry_interval": 1,
            "use_agent": false,
            "uuid": "60a907b9-61e0-4738-945b-4fef480bfc5e",
            "vars": {
                "addToMap": false
            },
            "zone": "master"
        },
        "discovery-service-template": {
            "check_command": "check_eth",
            "check_interval": 15,
            "check_timeout": 10,
            "enable_active_checks": true,
            "enable_flapping": true,
            "enable_notifications": false,
            "enable_passive_checks": true,
            "fields": [
                {
                    "datafield_id": 17,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 21,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 19,
                    "is_required": "y",
                    "var_filter": null
                }
            ],
            "flapping_threshold_high": "30",
            "flapping_threshold_low": "25",
            "max_check_attempts": "1",
            "object_name": "discovery-service-template",
            "object_type": "template",
            "retry_interval": 10,
            "use_agent": false,
            "uuid": "be71a930-211e-4d7e-8520-cc86ae9f7553",
            "vars": {
                "addToMap": false,
                "cmd_type": "group_query"
            },
            "zone": "master"
        },
        "check-service-template": {
            "check_command": "check_eth",
            "check_interval": 120,
            "check_timeout": 10,
            "enable_active_checks": true,
            "enable_flapping": true,
            "enable_notifications": false,
            "enable_passive_checks": true,
            "fields": [
                {
                    "datafield_id": 17,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 22,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 23,
                    "is_required": "n",
                    "var_filter": "service.vars.device=%5B%22dmu_ethernet%22%2C%22dmu_serial%22%5D"
                },
                {
                    "datafield_id": 24,
                    "is_required": "n",
                    "var_filter": "service.vars.device=%5B%22dmu_ethernet%22%2C%22dmu_serial%22%5D"
                },
                {
                    "datafield_id": 21,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 19,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "flapping_threshold_high": "30",
            "flapping_threshold_low": "25",
            "max_check_attempts": "1",
            "object_name": "check-service-template",
            "object_type": "template",
            "retry_interval": 10,
            "use_agent": false,
            "uuid": "60a32d00-efe7-4412-98fa-c142a32a5cb5",
            "vars": {
                "addToMap": false
            },
            "zone": "master"
        },
        "dru_check_serial--service-template": {
            "check_command": "dru_check_rs485",
            "check_interval": 120,
            "check_timeout": 10,
            "enable_active_checks": true,
            "enable_flapping": true,
            "enable_notifications": false,
            "enable_passive_checks": true,
            "fields": [
                {
                    "datafield_id": 17,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 10,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 11,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "flapping_threshold_high": "30",
            "flapping_threshold_low": "25",
            "max_check_attempts": "1",
            "object_name": "dru_check_serial--service-template",
            "object_type": "template",
            "retry_interval": 10,
            "use_agent": false,
            "uuid": "6195e5c5-6b76-4d58-adc1-89abb75d21f8",
            "vars": {
                "addToMap": false
            },
            "zone": "master"
        }
    },
    "ServiceSet": {
        "localhost-monitor": {
            "assign_filter": "\"localhost-host-template\"=host.templates",
            "object_name": "localhost-monitor",
            "object_type": "template",
            "services": [
                {
                    "check_command": "check_disk",
                    "fields": [],
                    "imports": [
                        "monitor-service-template"
                    ],
                    "object_name": "disk",
                    "object_type": "object",
                    "uuid": "1ae9c311-7edb-43c1-9afc-9acb991e441d"
                },
                {
                    "check_command": "check_load",
                    "fields": [],
                    "imports": [
                        "monitor-service-template"
                    ],
                    "object_name": "load",
                    "object_type": "object",
                    "uuid": "a6e2ef3b-38a4-49cf-b16d-13550fbb625b"
                },
                {
                    "check_command": "check_memory",
                    "fields": [],
                    "imports": [
                        "monitor-service-template"
                    ],
                    "object_name": "memory",
                    "object_type": "object",
                    "uuid": "6c92a17b-a1e3-4ed2-b7cb-78435ad32aca"
                }
            ],
            "uuid": "3d5e5e7f-6161-4281-8a8f-e0f5184d3ffd"
        },
        "dmu-ethernet-service-set": {
            "assign_filter": "\"ethernet-host-template\"=host.templates&host.vars.device=%22dmu_ethernet%22",
            "object_name": "dmu-ethernet-service-set",
            "object_type": "template",
            "services": [
                {
                    "fields": [],
                    "imports": [
                        "discovery-service-template"
                    ],
                    "object_name": "discovery",
                    "object_type": "object",
                    "uuid": "919589ed-df75-48d8-8eab-a6f5bedd6d97",
                    "vars": {
                        "device": "discovery_ethernet"
                    }
                }
            ],
            "uuid": "99c1ea43-8fdf-4595-bdba-a659871f6037"
        },
        "dru-service-set": {
            "assign_filter": "\"drs-alive-host-template\"=host.templates&host.vars.device=%22dru%22",
            "object_name": "dru-service-set",
            "object_type": "template",
            "services": [],
            "uuid": "3a9c7081-368f-44c0-a6e0-2f1a08a48478"
        },
        "dru-ethernet-service-set": {
            "assign_filter": "\"ethernet-host-template\"=host.templates&host.vars.device=%22dru_ethernet%22",
            "object_name": "dru-ethernet-service-set",
            "object_type": "template",
            "services": [
                {
                    "fields": [],
                    "imports": [
                        "check-service-template"
                    ],
                    "object_name": "Status",
                    "object_type": "object",
                    "uuid": "00b37b7d-c572-4ded-8085-181c7c25e864",
                    "vars": {
                        "bandwidth": "15",
                        "cmd_type": "group_query",
                        "device": "dru_ethernet"
                    }
                }
            ],
            "uuid": "e79ba594-2bd5-4aab-818d-5f9a24c474c0"
        },
        "dmu-serial-service-set": {
            "assign_filter": "\"serial-host-template\"=host.templates&host.vars.device=%22dmu_serial%22",
            "object_name": "dmu-serial-service-set",
            "object_type": "template",
            "services": [
                {
                    "fields": [],
                    "imports": [
                        "discovery-service-template"
                    ],
                    "object_name": "Discovery",
                    "object_type": "object",
                    "uuid": "e6f71513-5bbd-4f93-93a6-09583075fd03",
                    "vars": {
                        "device": "discovery_serial"
                    }
                },
                {
                    "fields": [],
                    "imports": [
                        "check-service-template"
                    ],
                    "object_name": "Status",
                    "object_type": "object",
                    "uuid": "f7a13d2b-8b7f-4aee-94ee-7aebbe56ea72",
                    "vars": {
                        "bandwidth": "15",
                        "center_downlink_frequency": "152.5",
                        "center_uplink_frequency": "172.5",
                        "cmd_type": "group_query",
                        "device": "dmu_serial"
                    }
                }
            ],
            "uuid": "697558f4-f99c-45cf-bcab-e15771441b1a"
        },
        "dru_serial_service_set": {
            "assign_filter": "\"serial-host-template\"=host.templates&host.vars.device=%22dru_serial_host%22",
            "object_name": "dru_serial_service_set",
            "object_type": "template",
            "services": [
                {
                    "fields": [],
                    "imports": [
                        "dru_check_serial--service-template"
                    ],
                    "object_name": "Status",
                    "object_type": "object",
                    "uuid": "96172e01-3fa8-4108-8ea9-26ef6b4a07b1"
                }
            ],
            "uuid": "66096b5b-b6a1-4210-b228-55d389d24dad"
        }
    },
    "UserTemplate": {
        "user-email-template": {
            "enable_notifications": true,
            "fields": [],
            "object_name": "user-email-template",
            "object_type": "template",
            "states": [
                "Down"
            ],
            "types": [
                "Problem"
            ],
            "uuid": "7ef1ab98-b8e1-414c-927f-911d35b70be0"
        }
    },
    "User": {
        "arturo": {
            "display_name": "Arturo",
            "email": "arturo@uqomm.com",
            "fields": [],
            "imports": [
                "user-email-template"
            ],
            "object_name": "arturo",
            "object_type": "object",
            "states": [
                "Critical",
                "Down",
                "OK",
                "Unknown",
                "Up",
                "Warning"
            ],
            "types": [
                "Custom",
                "Problem",
                "Recovery"
            ],
            "uuid": "532abc0d-9ae7-4a3e-bd1e-ce8fe50bdeb1"
        },
        "admin": {
            "display_name": "admin",
            "email": "admin@uqomm.com",
            "enable_notifications": false,
            "fields": [],
            "imports": [
                "user-email-template"
            ],
            "object_name": "admin",
            "object_type": "object",
            "states": [
                "Critical",
                "Down",
                "OK",
                "Unknown",
                "Up",
                "Warning"
            ],
            "types": [
                "Custom",
                "Problem",
                "Recovery"
            ],
            "uuid": "3cda355e-3e84-47f2-87c3-bfc3117f2e20"
        }
    },
    "NotificationTemplate": {
        "mail-host-notification-template": {
            "command": "mail-host-notification-command",
            "fields": [
                {
                    "datafield_id": 7,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 9,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "notification_interval": 0,
            "object_name": "mail-host-notification-template",
            "object_type": "template",
            "users": [
                "admin"
            ],
            "uuid": "4a2f12ad-fa36-418d-85ab-9240b6993ce5"
        },
        "mail-service-notification-template": {
            "command": "mail-service-notification-command",
            "fields": [
                {
                    "datafield_id": 7,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 8,
                    "is_required": "n",
                    "var_filter": null
                },
                {
                    "datafield_id": 9,
                    "is_required": "n",
                    "var_filter": null
                }
            ],
            "object_name": "mail-service-notification-template",
            "object_type": "template",
            "users": [
                "admin"
            ],
            "uuid": "0ef2b63f-f189-41da-a7da-336282cd5cfc"
        }
    },
    "Notification": {
        "mail-dmu-notification": {
            "apply_to": "host",
            "assign_filter": "host.templates=%22dmu%2A%22",
            "fields": [],
            "imports": [
                "mail-host-notification-template"
            ],
            "object_name": "mail-dmu-notification",
            "object_type": "apply",
            "states": [
                "Down"
            ],
            "types": [
                "FlappingEnd",
                "FlappingStart"
            ],
            "users": [
                "admin",
                "arturo"
            ],
            "uuid": "f72f49ac-6c1c-4632-aac2-1c39fd0aa1a2",
            "vars": {
                "notification_mailfrom": "notification@uqomm.com"
            }
        },
        "mail-host-notification": {
            "apply_to": "host",
            "assign_filter": "host.templates!=%22dmu%2A%22",
            "fields": [],
            "imports": [
                "mail-host-notification-template"
            ],
            "notification_interval": 0,
            "object_name": "mail-host-notification",
            "object_type": "apply",
            "states": [
                "Down"
            ],
            "types": [
                "FlappingEnd",
                "FlappingStart"
            ],
            "users": [
                "admin",
                "arturo"
            ],
            "uuid": "b0fafac0-2639-4724-b28e-e9d7f6d894ea",
            "vars": {
                "notification_mailfrom": "notification@uqomm.com"
            }
        },
        "mail-service-notification": {
            "apply_to": "service",
            "assign_filter": "service.check_command=%22dmu%2A%22",
            "fields": [],
            "imports": [
                "mail-service-notification-template"
            ],
            "notification_interval": 0,
            "object_name": "mail-service-notification",
            "object_type": "apply",
            "states": [
                "Critical",
                "Unknown",
                "Warning"
            ],
            "types": [
                "FlappingEnd",
                "Problem"
            ],
            "users": [
                "admin",
                "arturo"
            ],
            "uuid": "e63996cc-2d10-4b03-89a5-73e75b3759f9",
            "vars": {
                "notification_mailfrom": "notification@uqomm.com"
            }
        }
    },
    "DataList": {
        "deviceDataList": {
            "entries": [
                {
                    "entry_name": "discovery_ethernet",
                    "entry_value": "Discovery Ethernet",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "discovery_serial",
                    "entry_value": "Discovery Serial",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "dmu_ethernet",
                    "entry_value": "Device Master Unit Ethernet",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "dmu_serial",
                    "entry_value": "Device Master Unit Serial",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "dru_ethernet",
                    "entry_value": "Device Remote Unit Ethernet",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "dru_serial",
                    "entry_value": "Device Remote Unit Serial",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "dru_serial_host",
                    "entry_value": "Device Remote Unit Serial Host",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "dru_serial_service",
                    "entry_value": "Device Remote Unit Serial Service",
                    "format": "string",
                    "allowed_roles": null
                }
            ],
            "list_name": "deviceDataList",
            "owner": "admin",
            "uuid": "08e90640-0485-403d-810e-438100000002"
        },
        "center_frequencies": {
            "entries": [
                {
                    "entry_name": "171",
                    "entry_value": "vhf wideband",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "177.5",
                    "entry_value": "vhf narrowband",
                    "format": "string",
                    "allowed_roles": null
                }
            ],
            "list_name": "center_frequencies",
            "owner": "admin",
            "uuid": "556f1262-3e12-421a-90b3-ffd97238e9ae"
        },
        "command_type": {
            "entries": [
                {
                    "entry_name": "group_query",
                    "entry_value": "Group Query",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "single_query",
                    "entry_value": "Single Query",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "single_set",
                    "entry_value": "Single Set",
                    "format": "string",
                    "allowed_roles": null
                }
            ],
            "list_name": "command_type",
            "owner": "admin",
            "uuid": "f3237487-503e-44cd-ae20-dd6b8801c480"
        },
        "cmd_name_list": {
            "entries": [
                {
                    "entry_name": "1",
                    "entry_value": "version_number",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "151",
                    "entry_value": "query_device_id",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "167",
                    "entry_value": "query_optical_module_hardware_parameters",
                    "format": "string",
                    "allowed_roles": null
                }
            ],
            "list_name": "cmd_name_list",
            "owner": "admin",
            "uuid": "ea35d20e-2d19-4935-9683-e26842edfd34"
        },
        "opt_port_list": {
            "entries": [
                {
                    "entry_name": "1",
                    "entry_value": "opt1",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "2",
                    "entry_value": "opt2",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "3",
                    "entry_value": "opt3",
                    "format": "string",
                    "allowed_roles": null
                },
                {
                    "entry_name": "4",
                    "entry_value": "opt4",
                    "format": "string",
                    "allowed_roles": null
                }
            ],
            "list_name": "opt_port_list",
            "owner": "admin",
            "uuid": "3db408eb-d1b3-45c6-a9f2-4158218f5451"
        }
    },
    "DirectorJob": {
        "Deploy config": {
            "disabled": "n",
            "job_class": "Icinga\\Module\\Director\\Job\\ConfigJob",
            "job_name": "Deploy config",
            "run_interval": "600",
            "settings": {
                "deploy_when_changed": "y",
                "force_generate": "n",
                "grace_period": "60"
            }
        }
    },
    "Basket": {
        "all-items-basket": {
            "basket_name": "all-items-basket",
            "objects": {
                "Command": true,
                "ExternalCommand": true,
                "CommandTemplate": true,
                "HostGroup": true,
                "IcingaTemplateChoiceHost": true,
                "HostTemplate": true,
                "ServiceGroup": true,
                "IcingaTemplateChoiceService": true,
                "ServiceTemplate": true,
                "ServiceSet": true,
                "UserGroup": true,
                "UserTemplate": true,
                "User": true,
                "NotificationTemplate": true,
                "Notification": true,
                "TimePeriod": true,
                "Dependency": true,
                "DataList": true,
                "ImportSource": true,
                "SyncRule": true,
                "DirectorJob": true,
                "Basket": true
            },
            "owner_type": "user",
            "owner_value": "admin",
            "uuid": "82c830bb-b21f-06b7-b20e-33a5b9885362"
        }
    },
    "Datafield": {
        "3": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c0000001a",
            "varname": "highLevelCriticalDownlink",
            "caption": "HighLevelCriticalDownlinkAlert",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "4": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c0000001b",
            "varname": "highLevelCriticalUplink",
            "caption": "HighLevelCriticalUplinkAlert",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "5": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c0000001c",
            "varname": "highLevelWarningDownlink",
            "caption": "HighLevelWarningDownlinkAlert",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "6": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c0000001d",
            "varname": "highLevelWarningUplink",
            "caption": "HighLevelWarningUplinkAlert",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "7": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c00000026",
            "varname": "address",
            "caption": "address",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {},
            "category": null
        },
        "8": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c00000028",
            "varname": "notification_icingaweb2url",
            "caption": "notification_icingaweb2url",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {},
            "category": null
        },
        "9": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c00000027",
            "varname": "notification_mailfrom",
            "caption": "notification_mailfrom",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {},
            "category": null
        },
        "10": {
            "uuid": "856841e1-d8f7-4fd1-9942-30a5ddc02826",
            "varname": "dru",
            "caption": "dru",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "11": {
            "uuid": "7fbaa0a3-66b3-4cb8-8ccf-8812cc35e0b8",
            "varname": "opt",
            "caption": "optical_port",
            "description": "Optical Port",
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeDatalist",
            "format": null,
            "settings": {
                "behavior": "strict",
                "data_type": "string",
                "datalist": "opt_port_list"
            },
            "category": null
        },
        "12": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c00000014",
            "varname": "dru",
            "caption": "RemoteNumber",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "13": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c0000001e",
            "varname": "highLevelTemperatureCritical",
            "caption": "HighLevelTemperatureCriticalAlert",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "14": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c0000001f",
            "varname": "highLevelTemperatureWarning",
            "caption": "HighLevelTemperatureWarningAlert",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "15": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c00000029",
            "varname": "mac",
            "caption": "MAC address",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "16": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c0000002a",
            "varname": "sn",
            "caption": "S/N",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "17": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c0000000c",
            "varname": "addToMap",
            "caption": "AddToMap",
            "description": "If you want to show this host or service in the network or hierarchy map",
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeBoolean",
            "format": null,
            "settings": {},
            "category": null
        },
        "18": {
            "uuid": "2f037a3b-d621-4bfe-8f30-074c00000001",
            "varname": "parents",
            "caption": "parents",
            "description": "Parents Host Array",
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeArray",
            "format": null,
            "settings": {},
            "category": null
        },
        "19": {
            "uuid": "9d80ea7b-31bc-4a9e-9e97-b8967af118f1",
            "varname": "device",
            "caption": "device type",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeDatalist",
            "format": null,
            "settings": {
                "behavior": "strict",
                "data_type": "string",
                "datalist": "deviceDataList"
            },
            "category": null
        },
        "20": {
            "uuid": "2702a03b-7ab6-410e-9740-3ca07761a6f3",
            "varname": "cmd_name",
            "caption": "Command Name",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeDatalist",
            "format": null,
            "settings": {
                "behavior": "strict",
                "data_type": "string",
                "datalist": "cmd_name_list"
            },
            "category": null
        },
        "21": {
            "uuid": "e7dfda46-0699-4da9-ae6b-2f48c87a411a",
            "varname": "cmd_type",
            "caption": "Command Type",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeDatalist",
            "format": null,
            "settings": {
                "behavior": "strict",
                "data_type": "string",
                "rename_vars": "y",
                "datalist": "command_type"
            },
            "category": null
        },
        "22": {
            "uuid": "e756c2ea-e140-4678-b840-ae00f92cf44b",
            "varname": "bandwidth",
            "caption": "bandwidth",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "23": {
            "uuid": "34d4b2a3-cada-4e7d-aaa9-0d813d09b627",
            "varname": "center_downlink_frequency",
            "caption": "Center Downlink Frequency",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "visibility": "visible"
            },
            "category": null
        },
        "24": {
            "uuid": "cc855f76-ed85-4d37-981b-2c02414ebcbd",
            "varname": "center_uplink_frequency",
            "caption": "Center Uplink Frequency",
            "description": null,
            "datatype": "Icinga\\Module\\Director\\DataType\\DataTypeString",
            "format": null,
            "settings": {
                "rename_vars": "y",
                "visibility": "visible"
            },
            "category": null
        }
    }
}