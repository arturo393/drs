# Install MiniPC Software 
---
- name: Install Icinga2 Satellite

  hosts: icinga_monitor
  become: true
  vars_files:
    - ../vars.yaml
    

  tasks:
  - name: First Create The Zones In Icinga Director
    command: icingacli director zone create {{item}} --parent "master"
    with_items: "{{ groups['icinga_satellite']}}" 

  - name: Create The Endpoints In Icinga Director
    command: icingacli director endpoint create {{item}} 
    with_items: "{{ groups['icinga_satellite']}}"

  - name: Create The Hosts In Icinga Director
    command: icingacli director host create {{item}} --imports "dmu-host-template" --address {{hostvars[item].ansible_host}} --vars.safed_profile '3' 
    with_items: "{{ groups['icinga_satellite']}}"

  - name: Deploying The Changes
    command: icingacli director config deploy
    
  - name: Get Provisioning Ticket
    command: icinga2 pki ticket --cn {{item}}
    register: ticket
    with_items: "{{ groups['icinga_satellite'] }}"
  
  - name: Save Remote Satellite Host As Known Host
    shell: ssh-keyscan {{hostvars[item].ansible_host}} >> /home/{{icinga2_monitor_user}}/.ssh/known_hosts
    with_items: "{{ groups['icinga_satellite'] }}"

- hosts: icinga_satellite
  become: true
  vars_files:
       - ../vars.yaml

  tasks:
  - name: Make Sure That The /var/lib/icinga2/certs Directory Exists And Is Owned By The Icinga User (Or The User Icinga 2 Is Running As).
    file:
      path: /var/lib/icinga2/certs
      owner: nagios
      group: nagios
      state: directory    
      mode: '0755'

  - name: First Youâ€™ll Need To Generate A New Local Self-signed Certificate. 
    shell: |
      icinga2 pki new-cert --cn {{inventory_hostname}} \
      --key /var/lib/icinga2/certs/{{inventory_hostname}}.key \
      --cert /var/lib/icinga2/certs/{{inventory_hostname}}.crt
    register: output

  - name : VERIFY PARENT CONNECTION
    shell: |
      icinga2 pki save-cert \
      --trustedcert /var/lib/icinga2/certs/trusted-parent.crt \
      --host {{icinga2_monitor_host}}
    register: output

  - name: Icinga Node Setup
    shell: |
        icinga2 node setup --ticket {{item.stdout}} \
        --cn {{inventory_hostname}} \
        --zone {{inventory_hostname}} \
        --endpoint {{icinga2_monitor_hostname}},{{icinga2_monitor_host}},5665 \
        --parent_zone master \
        --parent_host {{icinga2_monitor_host}},5665 \
        --trustedcert /var/lib/icinga2/certs/trusted-parent.crt \
        --accept-commands --accept-config \
        --disable-confd
    with_items: "{{hostvars[icinga2_monitor_hostname].ticket.results}}"           
    loop_control:
      label: '{{ item.item }}'
    when: item.item == inventory_hostname
    register: output

  - name: Config Icinga2 ApiUser
    shell: |
      cat << EOF | sudo tee /etc/icinga2/conf.d/api-users.conf
        object ApiUser "root" {
        password = "Admin.123"
        permissions = [ "*" ]
        }
      EOF

  - name: Config Icinga2 ApiUser
    shell: echo -n | sudo tee /etc/icinga2/conf.d/{apt.conf,commands.conf,groups.conf,hosts.conf,downtimes.conf,notifications.conf,satellite.conf,services.conf,templates.conf,timeperiods.conf,users.conf}
    
  - name: Reload service icinga2, in all cases
    ansible.builtin.systemd:
      state: restarted
      name: icinga2

  - name: Reboot All Hosts 
    reboot:



      

