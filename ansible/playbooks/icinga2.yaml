# Install MiniPC Software 
---
- name: Install Icinga2 Satellite
  hosts: icinga_satellite
  become: true
  vars_files:
    - ../vars.yaml

  tasks:
  - name: Install Icinga2 Monitor
    apt:
        name:
            - icinga2
            - monitoring-plugins
        state: present
    
  - name: Adding user sigmadev to nagios  
    user: name=sigmadev
          shell=/bin/zsh
          groups=nagios
          append=yes
          

  - name: Install kernel sources and compilation tools 
    apt:
        name:
            - dpkg-dev
            - linux-image-{{ansible_kernel}}
            - linux-headers-{{ansible_kernel}}
        state: present

  - name: Clean artifact path
    file:
      state: absent
      path: /tmp/sigma-rds

  - name: "Cloning Sigma-DRS repo"
    git:
      repo: https://{{gitlabuser | urlencode}}:{{gitlabpassword | urlencode}}@gitlab.com/itaum/sigma-rds.git
      dest: /tmp/sigma-rds
      version: development
      accept_hostkey: true
      
  - name: "Create installation directory"
    file:
      path: /usr/lib/monitoring
      state: directory
      mode: '0755'

  - name: "Installing Plugins"
    copy:
      remote_src: true
      src: /tmp/sigma-rds/src/plugins/
      dest: /usr/lib/monitoring-plugins
  
  - name: create check_rs485.log
    ansible.builtin.file:
        path: /var/log/icinga2/check_rs485.log
        state: touch
        mode: 777

  - name: Change monitoring-plugins ownership, group and permissions
    file:
        path: /usr/lib/monitoring-plugins
        mode: '0755'
        state: directory
        recurse: yes

  - name: Install Python, Dev and Pip
    apt:
        name:
            - python3 
            - python3-dev
            - python3-pip
        state: present

  - name: Adding user sigmadev  to dialout  
    user: name=sigmadev
          shell=/bin/zsh
          groups=dialout
          append=yes

  - name: Adding user nagios  to dialout  
    user: name=nagios
          groups=dialout
          append=yes        

  - name: Create a symbolic link python3
    ansible.builtin.file:
      src: /usr/bin/python3
      dest: /usr/bin/python
      state: link   
      force: yes

  - name: Create a symbolic link pip3
    ansible.builtin.file:
      src: /usr/bin/pip3
      dest: /usr/bin/pip
      state: link   
      force : yes

  - name: Install bottle python package
    ansible.builtin.pip:
      name: 
          - crccheck
          - serial
          - pyserial
          - config
          - requests


- hosts: icinga_master
  vars_files:
    - ../vars.yaml

  tasks:
  - name: Fetch the SSH public key from the Icinga Master
    fetch:
      src: /home/{{ icinga2_master_user }}/.ssh/id_rsa.pub
      dest: /tmp/id_rsa.pub
      flat: yes
      server: "{{ icinga2_master_host }}"

- hosts: all
  vars_files:
    - ../vars.yaml

  tasks:
  - name: Copy the SSH public key to the inventory hosts
    copy:
      src: /tmp/id_rsa.pub
      dest: ~/.ssh/id_rsa.pub

  - name: Add the SSH public key to the authorized keys on the inventory host
    authorized_key:
      user: "{{icinga2_satellite_user }}"
      key: "{{ lookup('file', '/tmp/id_rsa.pub') }}"


